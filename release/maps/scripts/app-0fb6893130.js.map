{"version":3,"sources":["scripts/app-0fb6893130.js"],"names":["routeConfig","angular","module","config","run","Constants","$rootScope","$http","$location","Utilities","$auth","isAuthenticated","loggedInUser","sessionStorage","fromJson","localStorage","$on","event","next","current","publicPages","restrictedPage","indexOf","path","loginModal","authPages","isAuthPages","frontPage","endsWith","forwardPage","coursePage","activatePage","selfcomposePage","termsPage","cvwritingPage","freeCvReviewServicePage","eleven_plus_spelling_game","eleven_plus_synonym_game","java_interview","intervew_response","quiz_page","ep_quiz_page","eleven_plus_antonym_game","landingQuickRevampPage","landingGraduateCvPage","landingHighSpeedHiringPage","landingProfessionalCvPage","landingCoverLetterPage","landingLinkedInProfileReviewPage","cvMarketingPage","jobSpecPage","jobkeywordsPage","paidInternships","selfFundedInternships","pdfViewerPage","networkSharePage","contextLinkPage","cvBoxFrontPage","cvHostingPage","cvOffersPage","window","location","href","baseUrl","url","params","search","redirectUrl","redirect","factory","editableOptions","theme","$authProvider","$stateProvider","$locationProvider","html5Mode","httpInterceptor","withCredentials","tokenRoot","loginUrl","signupUrl","unlinkUrl","tokenName","tokenPrefix","tokenHeader","tokenType","facebook","clientId","token","storageType","END_POINT_URL","$injector","$window","authorization","get","getUserDetails","getUserRole","this","userRole","constant","contentType","accessCookie","appName","headers","viewUrl","websocket","reconnect","webSocketUrl","notificationsDestination","sendUrl","fileUpload","fileSizeLimitInByte","jobsSearchCriteriaType","JOBS_CRITERIA_TYPE_SALARY","JOBS_CRITERIA_TYPE_LOCATION","JOBS_CRITERIA_TYPE_JOB_TYPE","JOBS_CRITERIA_TYPE_RECRUITER","JOBS_CRITERIA_TYPE_JOB_TITLE","jobAppStatus","APPLIED_JOB","SHARED_WITH_TARGET","SELECTED_FOR_INTERVIEW","REJECTED_FOR_INTERVIEW","REJECTED_FOR_JOB","SELECTED_FOR_JOB","resumeSharedLevel","PARENT","JOB_POSTER","jobStatusText","id","name","jobsSearchCriteriaSortDropDown","jobTypeDropDown","apis","register","activate","login","logout","forgotPassword","reactivate","changePassword","myResumes","allMyResumes","otherResumes","saveResume","pushToDrive","deleteResume","findResume","trackResume","favNotes","CvMarketing","CvMarketingEdit","CvMarketingClone","CvMarketingDelete","CampaignNotes","viewCampaignNotes","deleteCampaignNotes","addGroup","editGroup","groupsList","addMembers","editMembers","deleteMembers","getMembers","bulkUploadMembers","questionList","editQuestionList","deleteQuestionList","addQuestionUrl","assignInterview","sendReminder","getResults","notes","viewNotes","referCandidates","campaignCandidates","downloadResume","notifications","campaigns","deleteNotifications","viewNotifications","campaignNotifications","deleteCampaignNotifications","viewCampaignNotifications","deleteNotes","editNotes","editCampaignNotes","sendTrackedApplication","authenticateUser","executePayment","paymentPlans","UserTick","validateUserTickNumber","jobsList","editJob","viewJob","applyJob","sendTrackApp","activateJob","resetNewPassword","resetPasswordAndActivate","saveProfileSettings","getUserProfileSettings","unSubscribeMail","collectCV","collectCVFromEmail","jobCriteriaList","citiesList","referralList","referralListOfOther","newReferralLink","newReferralLinkForUser","shareReferralLink","shareResumeToParentLink","shareResumeToTarget","updateResumeInterviewStt","updateResumeJobStt","deleteReferralLink","referredResumesList","targetResumeDetailLink","jobSpecList","listChildRefLinks","referralContent","resumeTokenLink","RESTSvc","utilities","RestConfig","doLogin","loginData","post","doRegister","registationData","doActivate","key","doLogout","userData","email","getMyResumes","findMyResumes","saveMyResume","resumeOb","deleteMyResume","delete","checkUniquePreviewLink","getCheckResumeLinkUrl","updateResumePreviewLink","resumeId","linkId","type","getUpdateResumeLinkUrl","put","saveResumeTrackRequest","requestOb","getMyFavNotes","saveCvMarketingRequest","cloneCvMarketingRequest","editCvMarketingRequest","deleteCvMarketingRequest","downloadMyResume","download","getMyNotifications","viewFullNotifications","paymentObj","getPaymentPlans","data","getUserTick","getValidateUserTickNumber","saveMembersList","bulkUpload","getMembersList","getGroupsList","editGroupMembersList","deleteGroupMembersList","getQuestionsList","editQuestionsList","deleteQuestionsList","addQuestions","sendReminders","candidateDetails","getMyNotes","viewMyNotes","saveNotesRequest","Ob","getMyCampaigns","getJobs","obj","getJobCriteriaList","saveJob","action","getCitiesList","getReferralLinks","page","noOfRecords","getReferralLinksOfUser","userId","generateReferralLink","contextName","referralType","referralTargetSubject","referralTargetEmail","jobType","jobLocation","refPublic","bountyEnable","previewType","previewLink","previewFile","request","FormData","append","formPost","editReferralLink","referralLink","description","formPut","generateReferralLinkForUser","userEmail","referralDetails","shareParentReferralLink","refCode","shareResumeToTargetLink","shareSocialToParentLink","registrationId","updateResumeInterview","resumeStatus","updateResumeJob","targetUpdateResumeInterview","targetAccessToken","targetUpdateResumeJob","scanMatchingResumesInFolder","findMatchingResumesInFolderUrl","replace","scanMatchingResumesInMultipleFolder","findMatchingResumesInMultipleFolderUrl","getResumeTokenToPreview","getListMatchingSkills","matchingId","getSkillsOfMatching","getAuthUsers","deleteUserAccount","getAuthUserByEmail","getReferralContent","link","getMatchingResumesOfJob","getMatchingResumeListUrl","getReferredResumeList","getBoxCandidates","getCvBoxCandidateListUrl","removeCandidateFromBox","referralId","getRemovingCandidateUrl","getChildRefLinkList","getReferralDetails","getJobSpecList","getTargetResumeDetail","getSocialRegistrationList","getJobSpecDetailFromAccessToken","accessToken","previewToken","extendToken","originalToken","extendOriginalToken","previewLinkId","param","extendResumePreviewFromToken","extendResumePreviewForAdmin","original","extendDays","getResumeReviews","getReviewDetail","getReviewComments","leaveResumeReview","resumeAccessToken","review","firstName","lastName","leaveReviewComment","reviewId","content","reviewToken","maskTextsInResume","texts","listingResumes","toggleResumeListing","findCvBox","findCvBoxListUrl","addResumeToCvBox","getAddingCandidateUrl","addNewSkill","getAddingSkillUrl","addNewCategorySkill","skillIds","getAddingCategorySkillUrl","listSkills","getListingSkillUrl","listSkillCategories","getListingSkillCategoriesUrl","listSkillsOfCategory","categoryId","getListingSkillOfCategoryUrl","listCategoriesOfJob","getListingJobCategoriesUrl","listCategoriesOfResume","getListingResumeCategoriesUrl","updateJobSkillCategories","jobId","categoryIds","getUpdatingJobCategoriesUrl","updateResumeSkillCategories","getUpdatingResumeCategoriesUrl","getSmartCategoriesOfJob","getSmartJobCategoriesUrl","getBulkFolderResumes","getBulkFolderListing","uploadFolderResume","file","uploadFolderResumeUrl","$q","deferred","defer","success","response","resolve","error","status","reject","promise","transformRequest","identity","Content-Type","undefined","toastr","alerts","401","message","403","409","regsitrationSuccess","activateSuccess","forgotPasswordSuccess","reactivateSuccess","resumeAddedSuccess","resumePushedSuccess","resumeEditSuccess","resumeSaveNameDuplicatedError","resumeSaveTitleDuplicatedError","resumeSaveTypeDuplicatedError","resumeTrackRequestSuccess","resumePushToDriveError","favNotesSaveLimitError","favNotesAlreadyExitsError","CvMarketingRequestSuccess","deleteResumeuccess","deleteNotificationSuccess","deleteCampaignNotificationSuccess","deleteNotesSuccess","updateNoteSuccess","sendTrackedApplicationSuccess","sendUnTrackedApplicationSuccess","defaultError","defaultWarning","defaultSuccess","notActivated","deleteModelTitle","sendTrackedApplicationModelTitle","deleteModelMessage","sendTrackedApplicationlMessage","unsubscribeeModelTrackingTitle","unsubscribeModelTrackingMessage","unsubscribeeModelNotificationTitle","unsubscribeModelNotificationMessage","downloadModelTitle","downloadModelMessage","resumeDownloadSuccess","resumeSaveLimitError","resumeSaveLeastError","notificationDeleteLeastError","InputFileInputTypeValidation","InputFileInputSizeValidation","InputFileInputRequiredValidation","PaymentSuccessfullyExecuted","userTickException","resetPasswordSuccess","confirmPasswordErorr","profileSaveSucess","unsubscribeSucess","jobContentSaveSucess","jobActivateSaveSucess","applyJobTitle","applyJobMessage","applyJobSucsessMessage","editJobTitle","editJobMessage","approveJobTitle","approveJobMessage","approveJobSuccessMessage","rejectJobTitle","rejectJobMessage","rejectJobSuccessMessage","newReferralLinkSuccessMsg","editReferralLinkSuccessMsg","referralLinkCopySuccessMsg","deleteReferralLinkSuccessMsg","extendResumeSuccessMessage","extendResumeSuccessFail","getAlerts","statusCode","getTextDay","numDay","textDays","getMonthDay","numMonth","textMonths","getFormattedDate","dateOb","newDate","Date","getDay","getMonth","getDate","getFullYear","getLoginUrl","getRegisterUrl","getActivationUrl","getLogoutUrl","getForgotPasswordUrl","getReactivateUrl","getChangePasswordUrl","getMyResumesUrl","getAllMyResumesUrl","getOtherResumesUrl","getSaveResumesUrl","getPushResumeToDriveUrl","geDeleteResumesUrl","getFindResumeUrl","getDownloadResumeUrl","getTrackResumeUrl","getFavNotesUrl","getCvMarketingUrl","getCvMarketingEditUrl","getCvMarketingCloneUrl","getCvMarketingDeleteUrl","getMyNotificationsUrl","getMyCampaignNotificationsUrl","getMyCampaignsUrl","bulkCampaignNotesUrl","bulkEditCampaignNotes","getMyCampaignNotesUrl","viewMyCampaignNotesUrl","getDeleteCampaignNotesUrl","getMyNotesUrl","viewMyNotesUrl","referCandidatesUrl","campaignCandidatesUrl","getDeleteNotificationsUrl","getDeleteCampaignNotificationsUrl","getViewNotificationsUrl","getViewCampaignNotificationsUrl","getDeleteNotesUrl","getEditNotesUrl","addGroupsUrl","editGroupsUrl","getGroupsUrl","getGroupMembersUrl","getEditMembersUrl","getBulkUploadMembersUrl","getDeleteMembersUrl","getQuestionsListUrl","editQuestionsListUrl","deleteQuestionsListUrl","assignInterviewUrl","sendReminderUrl","getResultsUrl","getEditCampaignNotesUrl","getAuthenticatedUserUrl","getExecutePaymentrUrl","getPaymentPlansrUrl","getUserTickUrl","getValidateUserTickNumberUrl","resetNewPasswordUrl","saveProfileSettingsUrl","getUserProfileSettingsUrl","unSubscribeMailUrl","sendTrackedApplicationUrl","getJobsListUrl","getEditJobUrl","getViewJobUrl","getActivateJobUrl","getApplyJobUrl","getSendTrackAppUrl","getcollectCVUrl","getcollectCVFromMailUrl","getJobCriteriaListUrl","getCitiesListUrl","getReferralLinkListUrl","getReferralLinkListUrlOfUser","getReferralLinkNewUrl","getReferralLinkEditUrl","getReferralLinkNewUrlForUser","getShareReferralLinkUrl","getShareResumeToParentLinkUrl","getShareResumeToTargetUrl","getUpdateResumeInterviewStatusUrl","getUpdateResumeJobStatusUrl","getDeleteReferralUrl","getResumeTokenUrl","getReferralContentUrl","getTargetUpdateResumeInterviewStatusUrl","getTargetUpdateResumeJobStatusUrl","getAuthUserListUrl","getAuthUserByEmailUrl","getDeleteUserUrl","getRef","getReferredResumeListUrl","getListingResumeUrl","updateListingResumeStatusUrl","getTargetResumeDetailUrl","getJobSpecListUrl","getChildRefLinks","getSocialRegistrationListUrl","getShareSocialToParentLinkUrl","gotoFrontPage","gotoHomePage","gotoProfilePage","gotoJobPage","gotoViewJobPage","gotoMyResumesPage","gotoLoginPage","reload","gotoRegisterPage","gotoFrontPageWithReload","gotoHomePageWithReload","gotoTrackResumePage","gotoNotificationsPage","gotoCampaignNotificationsPage","gotoCVMarketingPage","gotoNotesPage","gotoCampaignNotesPage","gotoPaymentPage","gotoSettingsPage","pathname","split","host","origin","getParameters","query_string","query","substring","vars","i","length","pair","decodeURIComponent","arr","push","showSuccessMsg","msg","showInfoMsg","info","showErrorMsg","showWarningMsg","warning","baConfigProvider","colorHelper","$provide","decorator","uiViewScrollDecorator","$delegate","$anchorScroll","baUtil","uiViewElement","hasAttr","configProvider","conf","blur","colors","default","basic","defaultText","border","borderDark","primary","colorScheme","danger","primaryLight","tint","infoLight","successLight","warningLight","dangerLight","primaryDark","shade","infoDark","successDark","warningDark","dangerDark","dashboard","blueStone","dashboardColors","surfieGreen","silverTree","gossip","white","changeTheme","merge","changeColors","$get","provider","mix","color1","color2","weight","d2h","d","toString","h2d","h","parseInt","result","color1Part","substr","color2Part","resultPart","Math","floor","slice","IMAGES_ROOT","resWidthCollapseSidebar","resWidthHideSidebar","images","root","profile","amMap","amChart","color","themeRun","$timeout","layoutPaths","preloader","baSidebarService","themeLayoutSettings","$state","whatToWait","setMenuCollapsed","$isAuthenticated","all","then","$pageFinishedLoading","$baSidebarService","baConfig","isMobile","test","navigator","userAgent","toLowerCase","mobileClass","blurClass","element","document","body","addClass","mobile","service","state","templateUrl","title","sidebarMeta","icon","order","controller","shown","requiresPermission","canAccess","localStorageServiceProvider","setPrefix","toastrLibConfig","toastrConfig","extend","closeButton","closeHtml","timeOut","autoDismiss","containerId","maxOpened","newestOnTop","positionClass","preventDuplicates","preventOpenDuplicates","target","loading","restrict","scope","elm","attrs","isLoading","pendingRequests","$watch","v","show","hide","directive","animatedChange","changeValue","val","html","newValue","attr","oldvalue","j","find","autoExpand","$scope","elem","bind","$event","$","height","scrollHeight","setTimeout","autoFocus","$parse","model","value","focus","select","$apply","assign","formAutofillFix","prop","ngSubmit","unbind","submit","e","preventDefault","trigger","includeWithScope","ele","ngFileSelect","el","srcElement","files","getFile","scrollPosition","maxHeight","on","scrollTop","prevScrollTop","trackWidth","minWidth","width","prevTrackWidth","resize","zoomIn","delay","removeClass","baProgressModal","$uibModal","methods","progress","max","opened","setProgress","Error","getProgress","open","animation","size","keyboard","backdrop","close","isDescendant","parent","child","node","parentNode","hexToRGB","hex","alpha","r","g","b","attrName","fileReader","onLoad","reader","onError","onProgress","$broadcast","total","loaded","getReader","FileReader","onload","onerror","onprogress","readAsDataURL","readAsDataUrl","loadImg","src","img","Image","loadAmCharts","AmCharts","ready","stopableInterval","start","interval","calback","time","startInterval","cancel","Authorization","getUser","defered","user","openUnsubscribeModal","ctrlName","modalOpts","isAdmin","isReviewer","isRecruiter","pieColor","charts","showMenu","AccountSvc","adminFeatures","settings","emailSubscribes","tracking","notification","subject","emailAddress","trackingMode","forEach","emailType","subscribe","redirectToProfilePage","currentUrl","menuClick","menu","cvMarketingNotes","cvMarketing","cvMarketingNotifications","settingsPage","searchJob","jobs","newSkill","skillLevel","skillType","saveForm","cancelForm","onFileUploaded","err","console","log","uploadForm","errorMap","noOfUploaded","noOfUploading","listFolderResumes","uploading","uploaded","callUploadingApi","rFile","rName","mainSvc","uploadResumeToFolder","catch","rp","init","userDetail","resumes","bulkFolderModal","resumeFile","resumeFiles","invalidSize","invalidType","listResumes","openNewResumeModal","getUploadModal","uploadResume","rFiles","k","closeModal","dismiss","getDownloadLink","getFormattedPostDate","utc","dateObj","date","month","hour","getHours","minutes","getMinutes","resumeFileModel","modelSetter","len","validExts","fileType","getEditNotesModal","getDeleteNotesModal","getViewNotesModal","noteId","bulkUpdateNotes","saveMyNotes","$filter","NotesSvc","NotificationsSvc","myNotes","myCampaigns","editNotesModel","note","notesModal","saveNote","campaignsData","requestModel","myNotesData","recruiter","agency","createdDate","closeDeleteNoteModal","deleteNotesModal","notesData","viewNotesModel","index","notesContent","viewNotesModal","closeViewNoteModal","postRequest","notesForm","notesModel","$valid","deleteConfirmNotes","debug","splice","AuthSvc","password","confirmPassword","rememberme","resetPassword","newPwd1","newPwd2","userName","registerModel","registerForm","signup","$close","go","setStorageType","toJson","authenticate","removeItem","openForgetPasswordModal","modalInstance","component","items","forgotPasswordSubmit","userModel","userForm","$pwd1","$pwd","resetForm","activationKey","logoutResponse","passwordModel","myNotifications","notificationsData","lastTrackedTime","notificationId","notificationsModal","getViewNotificationsModal","deleteNotification","modalNotifications","reason","fileModel","getCreatingCategoryModal","getCreatingSkillModal","getCategoryListSkillModal","getListSkills","newCategory","getListSkillCategories","getListSkillOfCategory","sortSkillByName","a","localeCompare","defaultSkills","newCategoryForm","skills","suggestionItems","skillNameSearch","suggestFocused","creating","addingSkillForm","adding","categorySkillModal","skillCategories","mainModal","confirmModal","openNewCategoryModal","openNewSkillModal","closeConfirmModal","focusSuggestionInput","findSuggestionItems","leaveSuggestionInput","nameSearch","foundItems","noFound","skill","idx","compareName","applySkillToCategory","removeSkillFromCategory","selectSuggestion","item","registerNewSkill","trim","sort","registerCategory","openModalShowingCategorySkills","cvboxDetail","candidates","removingInfo","resume","removing","formatDateTime","utcStr","loadRefContent","getReferralDetail","rpData","loadBoxCandidates","getCandidates","removeCandidate","unregisterCandidate","openPreviewResume","createElement","appendChild","click","remove","openRemoveModal","getRemoveCandidateModal","ResumesSvc","CvMarketingSvc","manualUpload","specialValue","category","phoneNo","userAccount","userPassword","trackingNotescreated","discountCode","resumesData","update","mycampaign","campaignData","campaign","loadResume","resumeLookUp","getOtherResumes","requestForm","CvMarketingRequestData","editRequest","bulkUpdate","bulkUpdateMarketingRequest","cloneRequest","deleteRequest","callCollectCVApi","trackingId","callCollectCVFromMailApi","GroupDataSvc","myGroups","groupMembers","newMemberData","memberFirstName","memberLastName","memberEmail","cvMarketingGroup","selectedMembers","groupData","groupName","groupType","groupLocation","userAccounts","groupForm","addGroups","getMyGroups","editGroups","bulkData","groupId","formProcessing","editMember","memberData","saveMembers","getGroupMembers","removeMember","alert","copyMember","getGroups","groupsData","groups","membersData","members","$sce","previewContextId","pdfViewerHeight","innerHeight","rqUserId","isAdminUser","role","resumePreview","tokenValid","urlCdt","loginRedirect","withReviewToken","reviewTokenExpired","noOfReviews","jobDetail","writingForm","submitting","submitted","expired","emailInvalid","contentInvalid","inAuth","extendForm","failed","maskingForm","listReviews","loadJobSpec","getJobDetail","maskedLinkId","originalLinkId","dataMaskedToken","maskedToken","dataOriginalToken","loadPreview","loadReviewByToken","loadListReviews","getTime","getReview","extendPreview","extendResumePreview","submitReview","submitResumeReview","activeReply","listReply","writeReviewComment","inReviewSubmitting","replyContent","submitReviewComment","noReply","noOfReply","maskText","textsStr","maskExtraTextsInResume","trustSrc","cdt","trustAsResourceUrl","searchQuery","reviewTokenIdx","newQuery","leftPart","nextQueryIdx","nextQuery","pathName","linkIdIdx","linkPath","ctxIdx","accToken","headerLoginRedirect","allJobs","JobsSvc","dragData","basicConfig","core","multiple","check_callback","worker","types","folder","plugins","version","disableEditor","viewJobEditor","searchMode","isFromMail","selectedJob","getViewJobData","currentPage","pageSize","totalJobs","searchText","jobTypeList","jobStatustDropDown","JobsSearch","pageNumber","criteriaDetails","criteriaType","sortyBy","getJobStatus","jobStatus","jobStatusTextArray","jobStatusTextLength","getAllJobs","jobsData","totalElements","jobOb","searchForJobs","updateSortedJobs","slideToggle","input","jobCriteriaResponseObj","jobCriteriaObj","text","jobCriteriaDetailsList","jobCriteriaDetailsResponseObj","jobCriteriaDetailsObj","pageChanged","newPage","selectNode","selected","jobCriteriaDetails","jobCriteria","filterJobs","viewJobsDetailsModel","jobDetails","setViewJobData","removePlugins","readOnly","resetJobSearch","initJiewPage","salaryRange","JobsCtrl","successMessage","modelFunction","modelType","openAdvancedSearchModel","jobModal","getAdvancedSearchModal","openApplyJobModel","getWarningModal","modelTitle","modelMessage","openLoginModal","openEditJobModel","openApproveJobModel","openRejectJobModel","backButton","viewJobData","jobsSearchObj","actionParam","object","getViewJobDetailsModal","getEditJobModal","listJobSpecs","searchForm","listJob","hasNext","getJobList","newJob","searchJobList","loadMore","getLink","encodeURIComponent","isExpired","now","initExpiration","maskedExpiresAt","previewExpiresAt","originalExpiresAt","originalPreviewExpiresAt","maskedExpired","extendResumeDays","noOfDays","extendOriginal","setDate","toISOString","NO_RECORDS","isManagement","loadInfo","extendModal","days","extending","cvBoxForm","selectedReferralId","findingBox","foundBoxes","boxName","addingToBox","jobCategorizingForm","getResume","toggleListingActive","timeout","clearTimeout","listingActive","updateResumeListingStatus","findCvBoxByName","addCvToBox","openExtendModal","getAdminExtendResumeModal","openAddToCvBoxModal","getCvBoxSelectionModal","openUpdateSkillModal","getResumeCategories","getUpdatingResumeSkillModal","extendResume","removeCategoryFromList","categories","addCategoryToList","newCategoryId","defaultCategories","categorizeJob","updating","categorizeResumeSkills","addNewResumeModel","resumeModal","getNewResumeModal","myFile","resumeTitle","resumeType","closeNewResumeModal","fd","unshift","editLinkForm","selectedResume","inUse","editing","closeEditPreviewLinkModal","openEditPreviewLink","getEditPreviewLinkModal","editResumeLink","updateResumeLink","checkPreviewId","checkResumePreviewLink","addAlert","listing","isLimited","connected","listener","socket","client","stomp","receive","send","isConnected","initialize","getMessage","JSON","parse","startListener","notify","SockJS","Stomp","over","connect","onclose","modalNotiCount","isFullLoaded","count","isFull","busy","stopScroll","addMoreItems","selectedNote","toRecruiter","updateNotesModel","getUpdateNotesModal","referGroup","referContent","targetList","requestObj","sendTrackedApplicaion","getSendTrackedApplicationModal","NotesCtrl","checkUserRole","checkNotesStyle","tracked","PaymentSvc","ticksNo","planId","currency","price","tax","dataObj","returnURL","paymentSuccess","payments","getQuestions","editQuestions","questions","deleteQuestions","interviewRequest","questionDetail","loadQuestions","interviewType","question","addQuestion","myfile","Reader","readAsText","evt","candidateList","candidateResultsEmail","candidate","jobLink","candidateName","candidateEmail","resultOwners","invite","sortByRank","rank","isUrlValid","userInput","regexQuery","RegExp","JOB_STATUS","REFERRAL_TYPE","TEXT_LINK","JOB_SPEC","SOCIAL_SHARE","CV_BOX","PREVIEW_TYPE","NONE","WEB_PAGE_URL","FILE","ReferralSvc","parentLink","scanUserId","referralModal","buildModal","referral","links","modal","selectedDescription","selectedTargetEmail","descriptionConfig","shareReferral","generating","shareResume","sharing","newReferralForm","isChildRef","previewLinkInvalid","previewFileInvalidSize","previewFileInvalidType","editingReferral","showError","smartBuilding","buildingSmartForm","selectedSkills","categoryName","rankOrder","building","scanFolderModalForm","deletingReferralLink","deletingReferralIdx","inDeletingReferral","reloadListReferralLinks","loadListReferralLinks","getListReferralLinks","newLinks","noRecords","min","loadNextPage","newReferralTypeChanged","openNewReferralLinkModal","parentReferralId","getNewReferralLinkModal","openDeleteReferralLinkModal","getDeleteReferralLinkModal","openReferralDescriptionModal","desc","getReferralDescriptionModal","openShareReferralModal","getShareReferralModal","getJobCategories","getUpdatingJobSkillsModal","openBuildingSmartCategory","getBuildingSmartCategoryModal","buildSmartCategories","newCat","addToSmartCategory","skillRank","aSkill","applySmartCategory","buildingSmartFor","closeBuildingModal","keepModal","categorizeJobSkills","generateLink","context","previewFileCheck","oldPreviewType","editRefLink","getResumeToken","shareReferredResumes","shareResumeToParent","deleteReferral","getResumesLink","scanResumeFolder","openScanFolderResultModal","findMatchingResumesInFolder","scanResumeMultipleFolder","findMatchingResumesInMultipleFolder","getScanFolderResultModal","getReferralLink","refType","tt","getRefLink","replaceAll","copyLink","setAttribute","execCommand","removeChild","getScanDownloadLink","getScanPreviewLink","pop","emailName","emailDm","previewFileModel","getListReferralLinksOfUser","bountyEnabled","generateLinkForUser","targetEmail","SHARED_LEVEL","childLinks","resumesModal","referredResumes","list","sharingSuccess","updateSttInput","detail","matchingType","matchingModal","loadListReferredResumes","getReferredResumes","oldList","concat","loadListMatchingResumes","getMatchingResumes","loadListChildLinks","getChildLinks","loadListReferredResumesOfChild","childRefLink","isShareToTarget","sharedLevel","ableToShare","ableToUpdate","openShareResumeModal","getSharingResumeModal","openStatusModal","getInterviewResumeModal","getJobResumeModal","openMatchingSkillModal","getMatchingSkills","getMatchingSkillsOfResumeModal","sharedWith","isToTarget","shareFunc","updateInterviewStt","stt","updateResumeInterviewStatus","updateJobStt","updateResumeJobStatus","getMatchPercentage","noOfMatch","noOfSkills","round","shareId","openPushResumeModel","getPushResumeModal","recruiterName","recruiterEmail","agencyName","formNotes","selectedResumeId","selectedResumeName","getGmailAuthenticationAdviceModal","addNewResumeModelFromTrackResumeModel","getQuickUploadResumeModal","openEditResumeModel","findMyResume","getEditResumeModal","openDeleteResumeModel","resumeName","openDownloadResumeModel","File","uploadedAt","possible","charAt","random","notesType","alertOb","fileExt","getAllMyResumes","userEmailAddress","userResumeOb","accesstoken","resumeData","job","loadResumeDetail","getResumeDetail","resumesService","loadListRegistrations","getSocialRegistrations","shareSocialRegistration","shareSocialToParent","openShareModal","refLink","localStorageService","TrackResumeSvc","myFavNotes","trackResumeObj","from","currentNotesType","oldValue","set","getFavNotes","favNote","getMyFavNote","favNoteToMatch","resumeTrackRequestData","userTick","validateUserTick","userManagementService","deletingId","deletingIdx","userManagement","users","emailSearch","inDeleting","loadUsers","searchUser","getUsers","userList","getReferralDirect","emailParts","deleteUser","openDeleteModal","baPanel","template","res","baPanelClass","transclude","baPanelTitle","titleTpl","baPanelBlur","baPanelBlurHelper","bodyBgSize","bodyBgLoad","getBodyBgImageSizes","addEventListener","recalculatePanelStyle","css","backgroundSize","backgroundPosition","positionX","positionY","$isMobile","removeEventListener","computedStyle","getComputedStyle","image","backgroundImage","elemW","documentElement","clientWidth","elemH","clientHeight","finalHeight","finalWidth","imgRatio","containerRatio","baPanelSelf","baSidebar","layoutSizes","jqWindow","_onWindowClick","$evt","originalEvent","$sidebarEventProcessed","isMenuCollapsed","canSidebarBeHidden","_onWindowResize","newMenuCollapsed","shouldMenuBeCollapsed","newMenuHeight","_calculateMenuHeight","menuHeight","childNodes","off","baSidebarServiceProvider","staticMenuItems","addStaticItem","apply","arguments","_factory","defineMenuItemStates","filter","s","map","meta","level","match","stateRef","innerWidth","getMenuItems","states","menuItems","children","subMenu","menus","newMenus","isCollapsed","toggleMenuCollapsed","getAllStateRefsRecursive","_iterateSubItems","currentItem","subItem","BaSidebarCtrl","defaultSidebarState","hoverItem","showHoverElem","hoverElemHeight","currentTarget","menuTopValue","hoverElemTop","getBoundingClientRect","top","baSidebarToggleMenu","baSidebarCollapseMenu","baSidebarTogglingItem","BaSidebarTogglingItemCtrl","$element","$attrs","_isState","subItemsStateRefs","some","subItemState","vm","menuItem","$$menuItem","$eval","$$expandSubmenu","warn","$$collapseSubmenu","$expand","$collapse","$toggle","hasClass","toState","baUiSrefTogglingSubmenu","require","slideDown","slideUp","baUiSrefToggler","backTop","position","speed","baWizard","controllerAs","baWizardCtrl","calcProgress","tabNum","tabs","addTab","tab","setPrev","selectTab","isAvailiable","t","tIndex","isFirstTab","isLastTab","nextTab","previousTab","baWizardStep","form","wizard","isSelected","$setSubmitted","isComplete","prevTab","pTab","contentTop","activePageTitle","msgCenter","MsgCenterCtrl","0","1","2","3","messages","trustAsHtml","pageTop","progressBarRound","animateBar","circle","PI","baProgressDialog","widgets","ngModel","plainText","String","appImage","kameleonImg","profilePicture","ext","baSwitcher","switcherStyle","switcherValue","o","fn","n","c","right","bottom","scroll","fadeIn","fadeOut","animate","duration","jQuery","$templateCache"],"mappings":"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","file":"scripts/app-0fb6893130.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.shared', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig() {\n\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  \"use strict\";\n\n  angular\n    .module(\"MyCvTracker.pages\", [\n      \"ui.router\",\n      \"MyCvTracker.pages.auth\",\n      \"MyCvTracker.pages.account\",\n      \"MyCvTracker.pages.notes\",\n      \"MyCvTracker.pages.resumes\",\n      \"MyCvTracker.pages.referral\",\n      \"MyCvTracker.pages.referredResumes\",\n      \"MyCvTracker.pages.userManagement\",\n      \"MyCvTracker.pages.payment\",\n      \"MyCvTracker.pages.notifications\",\n      \"MyCvTracker.pages.CampaignNotes\",\n      \"MyCvTracker.pages.CvMarketing\",\n      \"MyCvTracker.pages.campaignNotifications\",\n      \"MyCvTracker.pages.groupdata\",\n      \"MyCvTracker.pages.questions\",\n      \"MyCvTracker.pages.jobs\",\n      \"MyCvTracker.pages.jobList\",\n      \"MyCvTracker.pages.targetResumeDetail\",\n      \"MyCvTracker.pages.socialRegistrations\",\n      \"MyCvTracker.pages.jobResumePreview\",\n      \"MyCvTracker.pages.resumeListing\",\n      \"MyCvTracker.pages.cvBoxCandidates\",\n      \"MyCvTracker.pages.skillCategory\",\n      \"MyCvTracker.pages.jobResumeLink\",\n      \"MyCvTracker.pages.jobResumeLinkContext\",\n      \"MyCvTracker.pages.bulkFolderResumes\",\n    ])\n    .run(run);\n\n  function run(Constants, $rootScope, $http, $location, Utilities, $auth) {\n    // keep user logged in after page refresh\n    // // redirect to login page if not logged in and trying to access a restricted page\n    if ($auth.isAuthenticated()) {\n      var loggedInUser = null;\n      if (sessionStorage.loggedInUser) {\n        loggedInUser = angular.fromJson(sessionStorage.loggedInUser);\n      } else {\n        loggedInUser = angular.fromJson(localStorage.loggedInUser);\n      }\n      $rootScope.loggedInUser = loggedInUser;\n    }\n\n    $rootScope.$on(\"$locationChangeSuccess\", function (event, next, current) {\n      var publicPages = [\n        \"/login\",\n        \"/register\",\n        \"/activateAccount\",\n        \"/resetPassword\",\n        \"/activateOut\",\n        \"/jobs\",\n        \"/jobs-list\",\n        \"/job-resume-preview\",\n        \"/target-resume-detail\",\n        \"/viewJob\",\n        \"/findjobs\",\n        \"/resumes-list\",\n        \"/terms\",\n      ];\n      var restrictedPage = publicPages.indexOf($location.path()) === -1 && $location.path().indexOf(\"/resumes/\") === -1;\n      $rootScope.loginModal = false;\n      // console.log(event);\n      // console.log(next);\n      // console.log(current);\n      var authPages = [\"/login\", \"/register\", \"/activateAccount\", \"/resetPassword\"];\n      // console.log($location.path());\n      var isAuthPages = authPages.indexOf($location.path()) !== -1;\n      // console.log(isAuthPages);\n      var frontPage = next.endsWith(\"/\") || next.endsWith(\".com\");\n      var forwardPage = next.endsWith(\"/forward.html\");\n      var coursePage = next.endsWith(\"/java_experts.html\");\n      var activatePage = next.endsWith(\"/activate.html\");\n      var selfcomposePage = next.endsWith(\"/selfcompose.html\");\n      var termsPage = next.endsWith(\"/terms.html\");\n      var cvwritingPage = next.endsWith(\"/cvwritingpackages.html\");\n      var freeCvReviewServicePage = next.endsWith(\"/cv-writing-page.html\");\n      var eleven_plus_spelling_game = next.endsWith(\"/eleven_plus_spelling_game.html\");\n      var eleven_plus_synonym_game = next.endsWith(\"/eleven_plus_synonym_game.html\");\n      var java_interview = next.endsWith(\"/jobInterview.html\");\n      var intervew_response = next.endsWith(\"/interviewResponse.html\");\n      var quiz_page = next.endsWith(\"/wordquiz.html\");\n      var ep_quiz_page = next.endsWith(\"/eleven_plus_quiz.html\");\n      var eleven_plus_antonym_game = next.endsWith(\"/eleven_plus_antonym_game.html\");\n      var landingQuickRevampPage = next.endsWith(\"/linkedin-profile-writing.html\");\n      var landingGraduateCvPage = next.endsWith(\"/cover-letter-page.html\");\n      var landingHighSpeedHiringPage = next.endsWith(\"/high-speed-hiring.html\");\n      var landingProfessionalCvPage = next.endsWith(\"/cv-writing-packages.html\");\n      var landingCareerShiftingCvPage = next.endsWith(\"/cv-writing-package-2.html\");\n      var landingCoverLetterPage = next.endsWith(\"/graduate-package-1.html\");\n      var landingLinkedInProfileReviewPage = next.endsWith(\"/graduate-package-2.html\");\n      var landingExecutiveCvPage = next.endsWith(\"/cv-writing-package-3.html\");\n      var cvMarketingPage = next.endsWith(\"/cvmarketing.html\");\n      var jobSpecPage = next.endsWith(\"/job-spec.html\");\n      var jobkeywordsPage = next.endsWith(\"/jobkeywords-match.html\");\n      var paidInternships = next.endsWith(\"/how-to-get-tech-internships.html\");\n      var selfFundedInternships = next.endsWith(\"/my-cv-tracker-internships.html\");\n      var pdfViewerPage = next.endsWith(\"/pdf-viewer.html\");\n      var networkSharePage = next.endsWith(\"/network-share.html\");\n      var contextLinkPage = next.endsWith(\"/context-link.html\");\n      var cvBoxFrontPage = next.endsWith(\"/cv-box.html\");\n      var cvHostingPage = next.endsWith(\"/cvhosting.html\");\n      var cvOffersPage = next.endsWith(\"/cvoffers.html\");\n\n      if (frontPage) {\n        window.location.href = Utilities.baseUrl() + \"/topcvreviews.html\";\n      } else if (jobSpecPage) {\n        window.location.href = Utilities.baseUrl() + \"/job-spec.html\";\n      } else if (jobkeywordsPage) {\n        window.location.href = Utilities.baseUrl() + \"/jobkeywords-match.html\";\n      } else if (contextLinkPage) {\n        window.location.href = Utilities.baseUrl() + \"/context-link.html\";\n      } else if (pdfViewerPage) {\n        window.location.href = Utilities.baseUrl() + \"/pdf-viewer.html\";\n      } else if (networkSharePage) {\n        window.location.href = Utilities.baseUrl() + \"/network-share.html\";\n      } else if (cvBoxFrontPage) {\n        window.location.href = Utilities.baseUrl() + \"/cv-box.html\";\n      } else if (forwardPage) {\n        window.location.href = Utilities.baseUrl() + \"/forward.html\";\n      } else if (activatePage) {\n        window.location.href = Utilities.baseUrl() + \"/activate.html\";\n      } else if (selfcomposePage) {\n        window.location.href = Utilities.baseUrl() + \"/selfcompose.html\";\n      } else if (coursePage) {\n        window.location.href = Utilities.baseUrl() + \"/java_experts.html\";\n      } else if (termsPage) {\n        window.location.href = Utilities.baseUrl() + \"/terms.html\";\n      } else if (cvHostingPage) {\n        window.location.href = Utilities.baseUrl() + \"/cvhosting.html\";\n      } else if (cvOffersPage) {\n        window.location.href = Utilities.baseUrl() + \"/cvoffers.html\";\n      } else if (paidInternships) {\n        window.location.href = Utilities.baseUrl() + \"/how-to-get-paid-internships.html\";\n      } else if (selfFundedInternships) {\n        window.location.href = Utilities.baseUrl() + \"/my-cv-tracker-internships.html\";\n      } else if (eleven_plus_spelling_game) {\n        window.location.href = Utilities.baseUrl() + \"/eleven_plus_spelling_game.html\";\n      } else if (eleven_plus_synonym_game) {\n        window.location.href = Utilities.baseUrl() + \"/eleven_plus_synonym_game.html\";\n      } else if (eleven_plus_antonym_game) {\n        window.location.href = Utilities.baseUrl() + \"/eleven_plus_antonym_game.html\";\n      } else if (java_interview) {\n        window.location.href = Utilities.baseUrl() + \"/jobInterview.html\";\n      } else if (intervew_response) {\n        window.location.href = Utilities.baseUrl() + \"/interviewResponse.html\";\n      } else if (quiz_page) {\n        window.location.href = Utilities.baseUrl() + \"/wordquiz.html\";\n      } else if (ep_quiz_page) {\n        window.location.href = Utilities.baseUrl() + \"/eleven_plus_quiz.html\";\n      } else if (cvwritingPage) {\n        window.location.href = Utilities.baseUrl() + \"/cvwritingpackages.html\";\n      } else if (cvMarketingPage) {\n        window.location.href = Utilities.baseUrl() + \"/cvmarketing.html\";\n      } else if (freeCvReviewServicePage) {\n        window.location.href = Utilities.baseUrl() + \"/cv-writing-page.html\";\n      } else if (landingQuickRevampPage) {\n        window.location.href = Utilities.baseUrl() + \"/linkedin-profile-writing.html\";\n      } else if (landingGraduateCvPage) {\n        window.location.href = Utilities.baseUrl() + \"/cover-letter-page.html\";\n      }else if (landingHighSpeedHiringPage) {\n        window.location.href = Utilities.baseUrl() + \"/high-speed-hiring.html\";\n      }\n       else if (landingProfessionalCvPage) {\n        window.location.href = Utilities.baseUrl() + \"/cv-writing-packages.html\";\n      } else if (landingCoverLetterPage) {\n        window.location.href = Utilities.baseUrl() + \"/graduate-package-1.html\";\n      } else if (landingLinkedInProfileReviewPage) {\n        window.location.href = Utilities.baseUrl() + \"/graduate-package-2.html\";\n      } else if (restrictedPage && !$auth.isAuthenticated()) {\n        $location.url(\"/login\");\n      } else if (isAuthPages && $auth.isAuthenticated()) {\n        var params = $location.search();\n        var redirectUrl = params.redirect;\n        var url = !!redirectUrl ? redirectUrl : \"/account\";\n        $location.url(url);\n      }\n    });\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 15.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme', [\n      'toastr',\n      'MyCvTracker.theme.components',\n      'MyCvTracker.theme.inputs'\n  ]);\n\n})();\n\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components', []);\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 10.12.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.inputs', []);\n\n})();\n\n    'use strict';\n\nangular.module('MyCvTracker', [\n    ///////3rd party libs////////\n    'ngAnimate',\n    'ui.bootstrap',\n    'ui.sortable',\n    'ngSanitize',\n    'ui.router',\n    'ngTouch',\n    'toastr',\n    \"xeditable\", // for jobs\n    'ui.slimscroll', //scroll arrow\n    'ngJsTree', // for jobs\n    'angularUtils.directives.dirPagination', // for jobs\n    'ng.ckeditor', // for jobs\n    'satellizer',\n    'infinite-scroll',\n    /////////////////////////\n    'MyCvTracker.shared',\n    'MyCvTracker.theme',\n    'MyCvTracker.pages',\n]).factory('interceptor', ['$q',\n]).run(['$http', 'Constants', '$rootScope', 'editableOptions', function ($http, Constants, $rootScope, editableOptions) {\n    editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\n    $rootScope.Constants = Constants;\n}])\n    .config(function ($authProvider,Constants,$stateProvider,$locationProvider) {\n        $locationProvider.html5Mode(true);\n        $authProvider.httpInterceptor = function () {return true;};\n        $authProvider.withCredentials = false;\n        $authProvider.tokenRoot = null;\n        $authProvider.baseUrl = Constants.baseUrl;\n        $authProvider.loginUrl = '/auth/login';\n        $authProvider.signupUrl = '/auth/signup';\n        $authProvider.unlinkUrl = '/auth/unlink/';\n        $authProvider.tokenName = 'token';\n        $authProvider.tokenPrefix = '';\n        $authProvider.tokenHeader = 'Authorization';\n        $authProvider.tokenType = 'Bearer';\n        $authProvider.facebook({\n            clientId: '1391187710989021'\n        });\n        if(localStorage.token){\n            $authProvider.storageType = 'localStorage';\n        }else {\n            $authProvider.storageType = 'sessionStorage';\n        }\n    });\n\n\n    // rsingh078@gmail.com - mycvtracker@gmail.com\n    // test12345\n\nvar END_POINT_URL = 'http://localhost:8080';\n\t\n    angular.module('MyCvTracker.shared')\n\n    \t.factory('Authorization', ['$injector','$http','$window',\n\n            function ($injector,$http,$window) {\n\n                var $q = $injector.get('$q');\n\n            \tvar authorization = {\n\n                    getUserDetails : function () {\n                        if($window.sessionStorage.loggedInUser){\n                            return angular.fromJson($window.sessionStorage.loggedInUser);\n                        }else {\n                            return angular.fromJson($window.localStorage.loggedInUser);\n                        }\n                        return null;\n                    },\n\n                    getUserRole : function () {\n                        return this.getUserDetails().userRole;\n                    }\n            \t};\n\n                return authorization;\n            }\n        ]);\n\n\n\n    angular.module('MyCvTracker.shared')\n\n        .constant('Constants', {\n\n        \tcontentType: 'application/json',\n            accessCookie: 'MyCVTracker.user.auth',\n\n            appName:'MyCVTracker',\n\n            headers: {\n                authorization: 'Authorization'\n            },\n\n            // baseUrl: 'http://ec2-18-221-201-185.us-east-2.compute.amazonaws.com:8080',\n           // baseUrl: 'http://localhost:8080',\n            baseUrl: 'https://mycvtracker.com/apis',\n            viewUrl : 'https://mycvtracker.com',\n            websocket:{\n                reconnect: 5000,\n                // webSocketUrl: 'http://localhost:20000/messages',\n                webSocketUrl: 'https://mycvtracker.com/messages',\n                notificationsDestination: '/topic/notifications',\n                sendUrl: '/app/messages'\n            },\n\n            fileUpload: {\n                fileSizeLimitInByte : 5000000\n            },\n\n            jobsSearchCriteriaType: {\n                JOBS_CRITERIA_TYPE_SALARY : '1',\n                JOBS_CRITERIA_TYPE_LOCATION : '2',\n                JOBS_CRITERIA_TYPE_JOB_TYPE : '3',\n                JOBS_CRITERIA_TYPE_RECRUITER : '4',\n                JOBS_CRITERIA_TYPE_JOB_TITLE : '5'\n            },\n\n            jobAppStatus : {\n                APPLIED_JOB : \"APPLIED_JOB\",\n                SHARED_WITH_TARGET : \"SHARED_WITH_TARGET\",\n                SELECTED_FOR_INTERVIEW : \"SELECTED_FOR_INTERVIEW\",\n                REJECTED_FOR_INTERVIEW : \"REJECTED_FOR_INTERVIEW\",\n                REJECTED_FOR_JOB : \"REJECTED_FOR_JOB\",\n                SELECTED_FOR_JOB : \"SELECTED_FOR_JOB\"\n            },\n\n            resumeSharedLevel : {\n                PARENT : \"PARENT\",\n                JOB_POSTER : \"JOB_POSTER\"\n            },\n\n            jobStatusText: [\n                {\n                    id: 1,\n                    name: \" Pending\"\n                },\n                {\n                    id: 2,\n                    name: \" Waiting for Authorization\"\n                },\n                {\n                    id: 3,\n                    name: \" Approved\"\n                },\n                {\n                    id: 4,\n                    name: \" Waiting for Ticker Authorization\"\n                },\n                {\n                    id: 5,\n                    name: \" Rejected\"\n                },\n                {\n                    id: 6,\n                    name: \" Active\"\n                }\n            ],\n\n            jobsSearchCriteriaSortDropDown: [\n                {\n                    \"id\": 1,\n                    \"name\": \" Created Date\"\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \" Job Title\"\n                }\n            ],\n\n            jobTypeDropDown: [\n                {\n                    \"id\": 5,\n                    \"name\": \" Full Time\"\n                },\n                {\n                    \"id\": 6,\n                    \"name\": \" Part Time\"\n                }\n            ],\n\n            apis: {\n\n            \tregister: {\n            \t\turl: '/auth/signup'\n            \t},\n\n                activate: {\n                    url: '/auth/activate'\n                },\n\n            \tlogin: {\n            \t\turl: '/auth/login'\n            \t},\n\n                logout: {\n                    url: '/auth/logout'\n                },\n\n                forgotPassword: {\n                    url: '/auth/forgotPassword'\n                },\n\n                reactivate: {\n                    url: '/auth/reactivate'\n                },\n\n                changePassword: {\n                    url: '/auth/changePassword'\n                },\n\n                myResumes: {\n                \turl: '/user/resumesList'\n                },\n\n                allMyResumes: {\n                    url: '/user/allResumesList'\n                },\n\n                otherResumes: {\n                    url: '/user/otherResumesList'\n                },\n\n                saveResume: {\n                \turl: '/user/uploadQuickResume'\n                },\n\n                pushToDrive: {\n                    url: '/user/submitResume'\n                },\n\n                deleteResume: {\n                \turl: '/user/deleteResume'\n                },\n\n                findResume: {\n                \turl: '/user/findResume?id='\n                },\n\n                trackResume: {\n                    url: '/user/saveMyNote'\n                },\n\n                favNotes: {\n                    url: '/user/favNotes'\n                },\n\n                CvMarketing: {\n                    url: '/user/saveCVMarketingRequest'\n                },\n\n                CvMarketingEdit: {\n                    url: '/user/editCVMarketingRequest'\n                },\n\n                CvMarketingClone: {\n                    url: '/user/cloneCVMarketingRequest'\n                },\n\n                CvMarketingDelete: {\n                    url: '/user/deleteCVMarketingRequest'\n                },\n\n                CampaignNotes: {\n                    url: '/user/CampaignNotesList'\n                },\n                viewCampaignNotes: {\n                    url: '/user/viewCampaignNotes'\n                },\n                deleteCampaignNotes : {\n                    url : '/user/deleteCampaignNotes'\n                },\n                addGroup : {\n                    url : '/cvmarketdata/addGroup'\n                },\n                editGroup : {\n                    url : '/cvmarketdata/editGroup'\n                },\n                groupsList : {\n                    url : '/cvmarketdata/groupsList'\n                },\n                addMembers : {\n                    url : '/cvmarketdata/addMembers'\n                },\n                editMembers : {\n                    url : '/cvmarketdata/editMembers'\n                },\n                deleteMembers : {\n                    url : '/cvmarketdata/deleteMembers'\n                },\n                getMembers : {\n                    url : '/cvmarketdata/getGroupMembers'\n                },\n                editMembers : {\n                    url : '/cvmarketdata/editMembers'\n                },\n                bulkUploadMembers : {\n                    url : '/cvmarketdata/addBulkMembers'\n                },\n                questionList : {\n                    url : '/interviews/questionslist'\n                },\n                editQuestionList : {\n                    url : '/interviews/editQuestion'\n                },\n                deleteQuestionList : {\n                    url : '/interviews/deleteQuestion'\n                },\n                addQuestionUrl: {\n                    url : '/interviews/addQuestion'\n                },\n                assignInterview: {\n                    url : '/interviews/assignInterview'\n                },\n                sendReminder: {\n                    url : '/interviews/sendReminders'\n                },\n                getResults: {\n                    url : '/interviews/candidateResults'\n                },\n                notes: {\n                    url: '/user/notesList'\n                },\n\n                viewNotes: {\n                    url: '/user/viewNotes'\n                },\n\n                referCandidates: {\n                    url: '/user/referCandidates'\n                },\n\n                campaignCandidates: {\n                    url: '/user/campaignCandidates'\n                },\n\n                downloadResume: {\n                    url: '/user/downloadResume?id='\n                },\n                notifications: {\n                \turl: '/user/notificationsList'\n                },\n                campaigns: {\n                    url: '/user/campaigns'\n                },\n                deleteNotifications: {\n                    url: '/user/deleteNotification'\n                },\n                viewNotifications: {\n                    url: '/user/notificationsListById?id='\n                },\n                campaignNotifications: {\n                    url: '/user/campaignNotificationsList'\n                },\n                deleteCampaignNotifications: {\n                    url: '/user/deleteCampaignNotification'\n                },\n                viewCampaignNotifications: {\n                    url: '/user/campaignNotificationsListById?id='\n                },\n                deleteNotes : {\n                  url : '/user/deleteNotes'\n                },\n                editNotes : {\n                    url : '/user/editNotes'\n                },\n                editCampaignNotes : {\n                    url : '/user/editCampaignNotes'\n                },\n                sendTrackedApplication : {\n                    url : '/user/sendTrackedApplication'\n                },\n                authenticateUser: {\n                \turl: '/auth/user'\n                },\n                executePayment: {\n                    url: '/user/createPayment'\n                },\n                paymentPlans: {\n                    url: '/user/plans'\n                },\n                UserTick: {\n                    url: '/user/UserTick'\n                },\n                validateUserTickNumber: {\n                    url: '/user/validateUserTickNumber'\n                },\n\n                jobsList: {\n                    url: '/user/jobsList',\n                },\n\n                editJob: {\n                    url: '/user/editJob'\n                },\n\n                viewJob:{\n                    url: '/user/viewJob'\n                },\n\n                applyJob: {\n                    url: '/user/applyJob'\n                },\n\n                sendTrackApp: {\n                    url: '/user/SendTrackApp'\n                },\n\n                activateJob: {\n                    url: '/user/activateJob'\n                },\n\n                resetNewPassword: {\n                    url: '/auth/resetPassword'\n                },\n\n                resetPasswordAndActivate: {\n                    url: '/auth/activateOut'\n                },\n\n                saveProfileSettings: {\n                    url: '/auth/saveProfileSettings'\n                },\n\n                getUserProfileSettings: {\n                    url: '/auth/getUserProfileSettings'\n                },\n\n                unSubscribeMail: {\n                    url: '/auth/unSubscribeMail'\n                },\n                collectCV: {\n                    url: '/collect/cvcollect'\n                },\n                collectCVFromEmail: {\n                    url: '/collect/emailcollect'\n                },\n                jobCriteriaList: {\n                    url: '/user/jobCriteriaList'\n                },\n                citiesList: {\n                    url: '/user/getCitiesList'\n                },\n                referralList : {\n            \t      url : \"/links/referrals\"\n                },\n                referralListOfOther : {\n                    url : \"/links/referrals\"\n                },\n                newReferralLink : {\n                    url : \"/links/referrals\"\n                },\n                newReferralLinkForUser : {\n                    url : \"/links/referralsForOtherUser\"\n                },\n                shareReferralLink : {\n                    url : \"/links/shareInsideReferral\"\n                },\n                shareResumeToParentLink : {\n                    url : \"/links/shareWithParent\"\n                },\n                shareResumeToTarget : {\n                    url : \"/links/shareWithTarget\"\n                },\n                updateResumeInterviewStt : {\n                    url : \"/user/resume/interview/update\"\n                },\n                updateResumeJobStt : {\n                    url : \"/user/resume/job-status/update\"\n                },\n                deleteReferralLink : {\n                    url : \"/links/referrals\"\n                },\n                referredResumesList : {\n                    url : \"/links/resumes\"\n                },\n                targetResumeDetailLink : {\n                    url : \"/user/resume/{id}/detail\"\n                },\n                jobSpecList : {\n                    url : \"/links/jobReferrals\"\n                },\n                listChildRefLinks : {\n                    url : \"/links/childRefLinks\"\n                },\n                referralContent : {\n                    url : \"/links/referral/{referralLink}/detail\"\n                },\n                resumeTokenLink : {\n                    url : \"/user/getSharedResumeAccessToken\"\n                }\n        \t}\n        });\n\nangular.module(\"MyCvTracker.shared\")\n\n  .factory(\"RestConfig\", [\n    \"RESTSvc\",\n    \"$injector\",\n\n    function (\n      RESTSvc,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      var RestConfig = {\n        doLogin : function (\n          url,\n          loginData\n        ) {\n          return RESTSvc.post(url, loginData);\n        },\n\n        doRegister : function (\n          url,\n          registationData\n        ) {\n          return RESTSvc.post(url, registationData);\n        },\n\n        doActivate : function (\n          url,\n          key\n        ) {\n          return RESTSvc.get(url + \"?key=\" + key);\n        },\n\n        doLogout : function (\n          url,\n          userData\n        ) {\n          return RESTSvc.post(url);\n        },\n\n        forgotPassword : function (\n          url,\n          email\n        ) {\n          return RESTSvc.post(url, email);\n        },\n\n        reactivate : function (\n          url,\n          email\n        ) {\n          return RESTSvc.post(url, email);\n        },\n\n        getMyResumes : function (url) {\n          return RESTSvc.get(url);\n        },\n\n        findMyResumes : function (url) {\n          return RESTSvc.get(url);\n        },\n\n        saveMyResume : function (\n          url,\n          resumeOb\n        ) {\n          return RESTSvc.post(url, resumeOb);\n        },\n\n        deleteMyResume : function (\n          url,\n          id\n        ) {\n          return RESTSvc.delete(url, id);\n        },\n        checkUniquePreviewLink : function (\n          id\n        ) {\n          var url = utilities.getCheckResumeLinkUrl() + \"?id=\" + id;\n          return RESTSvc.get(url);\n        },\n        updateResumePreviewLink : function (\n          resumeId,\n          linkId,\n          type\n        ) {\n          var url = utilities.getUpdateResumeLinkUrl();\n          return RESTSvc.put(url, {\n            resumeId : resumeId,\n            linkId : linkId,\n            type : type\n          });\n        },\n\n        saveResumeTrackRequest : function (\n          url,\n          requestOb\n        ) {\n          return RESTSvc.post(url, requestOb);\n        },\n        getMyFavNotes : function (url) {\n          return RESTSvc.get(url);\n        },\n        saveCvMarketingRequest : function (\n          url,\n          requestOb\n        ) {\n          return RESTSvc.post(url, requestOb);\n        },\n\n        cloneCvMarketingRequest : function (\n          url,\n          requestOb\n        ) {\n          return RESTSvc.post(url, requestOb);\n        },\n\n        editCvMarketingRequest : function (\n          url,\n          requestOb\n        ) {\n          return RESTSvc.put(url, requestOb);\n        },\n\n        deleteCvMarketingRequest : function (url) {\n          return RESTSvc.delete(url);\n        },\n\n        downloadMyResume : function (url) {\n          return RESTSvc.download(url);\n        },\n        getMyNotifications : function (url) {\n          return RESTSvc.get(url);\n        },\n        viewFullNotifications : function (url) {\n          return RESTSvc.get(url);\n        },\n        executePayment : function (\n          url,\n          paymentObj\n        ) {\n          return RESTSvc.post(url, paymentObj);\n        },\n        getPaymentPlans : function (\n          url,\n          data\n        ) {\n          return RESTSvc.get(url, data);\n        },\n        getUserTick : function (url) {\n          return RESTSvc.get(url);\n        },\n        getValidateUserTickNumber : function (url) {\n          return RESTSvc.get(url);\n        },\n        resetNewPassword : function (\n          url,\n          data\n        ) {\n          return RESTSvc.post(url, data);\n        },\n        resetPasswordAndActivate : function (\n          url,\n          data\n        ) {\n          return RESTSvc.post(url, data);\n        },\n        addGroup : function (\n          url,\n          data\n        ) {\n          return RESTSvc.post(url, data);\n        },\n        editGroup : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        addMembers : function (\n          url,\n          data\n        ) {\n          return RESTSvc.post(url, data);\n        },\n        saveMembersList : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        bulkUpload : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        getMembersList : function (\n          url,\n          data\n        ) {\n          return RESTSvc.get(url, data);\n        },\n        getGroupsList : function (\n          url,\n          data\n        ) {\n          return RESTSvc.get(url, data);\n        },\n        editGroupMembersList : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        deleteGroupMembersList : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        getQuestionsList : function (\n          url,\n          data\n        ) {\n          return RESTSvc.get(url, data);\n        },\n        editQuestionsList : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n         deleteQuestionsList : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n         addQuestions : function (\n          url,\n          data\n        ) {\n          return RESTSvc.post(url, data);\n        },\n        assignInterview : function(url,data){\n            return RESTSvc.post(url, data);\n        },\n        sendReminders : function(url,data){\n            return RESTSvc.put(url, data);\n        },\n        getResults : function(url,candidateDetails){\n          return RESTSvc.put(url,candidateDetails);\n        },\n        getMyNotes : function (\n          url,\n          data\n        ) {\n          return RESTSvc.get(url, data);\n        },\n        referCandidates : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        campaignCandidates : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        viewMyNotes : function (url) {\n          return RESTSvc.get(url);\n        },\n        saveNotesRequest : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        saveProfileSettings : function (\n          url,\n          Ob\n        ) {\n          return RESTSvc.post(url, Ob);\n        },\n        getUserProfileSettings : function (url) {\n          return RESTSvc.get(url);\n        },\n        unSubscribeMail : function (\n          url,\n          Ob\n        ) {\n          return RESTSvc.post(url, Ob);\n        },\n        getMyCampaigns : function (url) {\n          return RESTSvc.get(url);\n        },\n        sendTrackedApplication : function (\n          url,\n          data\n        ) {\n          return RESTSvc.put(url, data);\n        },\n        getJobs : function (\n          url,\n          obj\n        ) {\n          return RESTSvc.put(url, obj);\n        },\n        getJobCriteriaList : function (url) {\n          return RESTSvc.get(url);\n        },\n        viewJob : function (\n          url,\n          key\n        ) {\n          return RESTSvc.get(url + \"?key=\" + key);\n        },\n        saveJob : function (\n          url,\n          obj\n        ) {\n          return RESTSvc.post(url, obj);\n        },\n        applyJob : function (\n          url,\n          obj\n        ) {\n          return RESTSvc.post(url, obj);\n        },\n        activateJob : function (\n          url,\n          action,\n          obj\n        ) {\n          return RESTSvc.post(url + \"?action=\" + action, obj);\n        },\n        collectCV : function (url) {\n          return RESTSvc.get(url);\n        },\n        getCitiesList : function (url) {\n          return RESTSvc.get(url);\n        },\n        getReferralLinks : function (\n          url,\n          page,\n          noOfRecords\n        ) {\n          url = url + \"?page=\" + page + \"&noOfRecords=\" + noOfRecords;\n          return RESTSvc.get(url);\n        },\n        getReferralLinksOfUser : function (\n          url,\n          userId\n        ) {\n          url = url + \"?userId=\" + userId;\n          return RESTSvc.get(url);\n        },\n        generateReferralLink : function (\n          url,\n          contextName,\n          referralType,\n          referralTargetSubject,\n          referralTargetEmail,\n          jobType,\n          jobLocation,\n          refPublic,\n          bountyEnable,\n          previewType,\n          previewLink,\n          previewFile\n        ) {\n          var request = new FormData();\n          request.append(\"referralDetails\", contextName);\n          request.append(\"referralType\", referralType);\n          request.append(\"referralTargetSubject\", referralTargetSubject);\n          if (!!referralTargetEmail) {\n            request.append(\"referralTargetEmail\", referralTargetEmail);\n          }\n          if (!!jobType) {\n            request.append(\"jobType\", jobType);\n          }\n          if (!!jobLocation) {\n            request.append(\"jobLocation\", jobLocation);\n          }\n          if (!!previewType) {\n            request.append(\"previewType\", previewType);\n          }\n          if (!!previewLink) {\n            request.append(\"previewLink\", previewLink);\n          }\n          if (!!previewFile) {\n            request.append(\"previewFile\", previewFile);\n          }\n          request.append(\"refPublic\", refPublic);\n          request.append(\"bountyEnable\", bountyEnable);\n          return RESTSvc.formPost(url, request);\n        },\n        editReferralLink : function (\n          url,\n          referralLink,\n          description,\n          referralTargetSubject,\n          jobType,\n          jobLocation,\n          refPublic,\n          bountyEnable,\n          previewType,\n          previewLink,\n          previewFile\n        ) {\n          var request = new FormData();\n          request.append(\"referralDetails\", description);\n          request.append(\"referralLink\", referralLink);\n          request.append(\"referralTargetSubject\", referralTargetSubject);\n          if (!!jobType) {\n            request.append(\"jobType\", jobType);\n          }\n          if (!!jobLocation) {\n            request.append(\"jobLocation\", jobLocation);\n          }\n          if (!!previewType) {\n            request.append(\"previewType\", previewType);\n          }\n          if (!!previewLink) {\n            request.append(\"previewLink\", previewLink);\n          }\n          if (!!previewFile) {\n            request.append(\"previewFile\", previewFile);\n          }\n          request.append(\"refPublic\", refPublic);\n          request.append(\"bountyEnable\", bountyEnable);\n\n          return RESTSvc.formPut(url, request);\n        },\n        generateReferralLinkForUser : function (\n          url,\n          userEmail,\n          contextName,\n          referralType,\n          referralTargetSubject,\n          referralTargetEmail,\n          jobType,\n          jobLocation,\n          previewLink\n        ) {\n          var request = {\n            referralDetails : contextName,\n            referralLink : userEmail,\n            referralType : referralType,\n            referralTargetSubject : referralTargetSubject,\n            referralTargetEmail : referralTargetEmail,\n            jobType : jobType,\n            jobLocation : jobLocation,\n            previewLink : previewLink\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        shareParentReferralLink : function (\n          url,\n          refCode\n        ) {\n          var request = {\n            referralLink : refCode\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        shareResumeToParentLink : function (\n          url,\n          id\n        ) {\n          // url = url + \"?referralLink=\" + parentLink;\n          var request = {\n            \"resumeId\" : id\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        shareResumeToTargetLink : function (\n          url,\n          id\n        ) {\n          // url = url + \"?referralLink=\" + parentLink;\n          var request = {\n            \"resumeId\" : id\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        shareSocialToParentLink : function (\n          url,\n          id\n        ) {\n          // url = url + \"?referralLink=\" + parentLink;\n          var request = {\n            \"registrationId\" : id\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        updateResumeInterview : function (\n          url,\n          id,\n          resumeStatus\n        ) {\n          // url = url + \"?referralLink=\" + parentLink;\n          var request = {\n            \"id\" : id,\n            \"resumeStatus\" : resumeStatus\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        updateResumeJob : function (\n          url,\n          id,\n          resumeStatus\n        ) {\n          // url = url + \"?referralLink=\" + parentLink;\n          var request = {\n            \"id\" : id,\n            \"resumeStatus\" : resumeStatus\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        targetUpdateResumeInterview : function (\n          url,\n          id,\n          resumeStatus,\n          targetAccessToken\n        ) {\n          // url = url + \"?referralLink=\" + parentLink;\n          var request = {\n            \"id\" : id,\n            \"resumeStatus\" : resumeStatus,\n            \"targetAccessToken\" : targetAccessToken\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        targetUpdateResumeJob : function (\n          url,\n          id,\n          resumeStatus,\n          targetAccessToken\n        ) {\n          // url = url + \"?referralLink=\" + parentLink;\n          var request = {\n            \"id\" : id,\n            \"resumeStatus\" : resumeStatus,\n            \"targetAccessToken\" : targetAccessToken\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        deleteReferralLink : function (\n          url,\n          referralLink\n        ) {\n          url = url + \"?referralLink=\" + referralLink;\n          return RESTSvc.delete(url);\n        },\n        scanMatchingResumesInFolder : function(id) {\n          var url = utilities.findMatchingResumesInFolderUrl();\n          url = url.replace(\"{jobId}\", id);\n          return RESTSvc.get(url);\n        },\n        scanMatchingResumesInMultipleFolder : function(id) {\n          var url = utilities.findMatchingResumesInMultipleFolderUrl();\n          url = url.replace(\"{jobId}\", id);\n          return RESTSvc.get(url);\n        },\n        getResumeTokenToPreview : function (\n          url,\n          referralLink,\n          id\n        ) {\n          // url = url + \"?referralLink=\" + parentLink;\n          var request = {\n            \"referralLink\" : referralLink,\n            \"resumeId\" : id\n          };\n\n          return RESTSvc.post(url, request);\n        },\n        getListMatchingSkills : function (\n          matchingId\n        ) {\n          var url = utilities.getSkillsOfMatching();\n          url = url.replace(\"{matchingId}\", matchingId);\n          return RESTSvc.get(url);\n        },\n        getAuthUsers : function (url) {\n          return RESTSvc.get(url);\n        },\n        deleteUserAccount : function (\n          url,\n          id\n        ) {\n          url = url.replace(\"{userId}\", id);\n          return RESTSvc.delete(url);\n        },\n        getAuthUserByEmail : function (\n          url,\n          email\n        ) {\n          url = url + \"?email=\" + email;\n          return RESTSvc.get(url);\n        },\n        getReferralContent : function (\n          url,\n          link\n        ) {\n          url = url.replace(\"{referralLink}\", link);\n          return RESTSvc.get(url);\n        },\n        getMatchingResumesOfJob : function (\n          link\n        ) {\n          var url = utilities.getMatchingResumeListUrl();\n          url = url.replace(\"{referralLink}\", link);\n          return RESTSvc.get(url);\n        },\n        getReferredResumeList : function (\n          url,\n          link\n        ) {\n          url = url + \"?referralLink=\" + link;\n          return RESTSvc.get(url);\n        },\n        getBoxCandidates : function (\n          referralLink\n        ) {\n          var url = utilities.getCvBoxCandidateListUrl();\n          url = url + \"?referralLink=\" + referralLink;\n          return RESTSvc.get(url);\n        },\n        removeCandidateFromBox : function (\n          resumeId,\n          referralId\n        ) {\n          var data = {\n            resumeId : resumeId,\n            referralId : referralId\n          };\n          var url = utilities.getRemovingCandidateUrl();\n          return RESTSvc.post(url, data);\n        },\n        getChildRefLinkList : function (\n          url,\n          link\n        ) {\n          url = url + \"?parentRefLink=\" + link;\n          return RESTSvc.get(url);\n        },\n        getReferralDetails : function (\n          url,\n          refCode\n        ) {\n          url = url + \"?referralLink=\" + refCode;\n          return RESTSvc.get(url);\n        },\n        getJobSpecList : function (url) {\n          return RESTSvc.get(url);\n        },\n        getTargetResumeDetail : function (\n          url,\n          token\n        ) {\n          url = url + \"?token=\" + token;\n          return RESTSvc.get(url);\n        },\n        getSocialRegistrationList : function (\n          url,\n          link\n        ) {\n          url = url.replace(\"{referralLink}\", link);\n          return RESTSvc.get(url);\n        },\n        getJobSpecDetailFromAccessToken : function (\n          url,\n          accessToken,\n          previewToken,\n          extendToken,\n          originalToken,\n          extendOriginalToken,\n          previewLinkId\n        ) {\n          var param = \"\";\n          if (!!accessToken) {\n            param = \"accessToken=\" + accessToken;\n          } else if (!!previewToken) {\n            param = \"token=\" + previewToken;\n          } else if (!!extendToken) {\n            param = \"extendToken=\" + extendToken;\n          } else if (!!originalToken) {\n            param = \"originalToken=\" + originalToken;\n          } else if (!!extendOriginalToken) {\n            param = \"extendOriginalToken=\" + extendOriginalToken;\n          } else if (!!previewLinkId) {\n            param = \"linkId=\" + previewLinkId;\n          }\n\n          url = url + \"?\" + param;\n          return RESTSvc.get(url);\n        },\n        extendResumePreviewFromToken : function (\n          url,\n          token,\n          originalToken\n        ) {\n          return RESTSvc.post(url, {\n            token : !!token ? token : null,\n            originalToken : !!originalToken ? originalToken : null\n          });\n        },\n        extendResumePreviewForAdmin : function (\n          url,\n          resumeId,\n          original,\n          extendDays\n        ) {\n          return RESTSvc.post(url, {\n            resumeId : resumeId,\n            original : original,\n            extendDays : extendDays\n          });\n        },\n        getResumeReviews : function (url) {\n          return RESTSvc.get(url);\n        },\n        getReviewDetail : function (url) {\n          return RESTSvc.get(url);\n        },\n        getReviewComments : function (url) {\n          return RESTSvc.get(url);\n        },\n        leaveResumeReview : function (\n          url,\n          resumeAccessToken,\n          previewToken,\n          originalToken,\n          email,\n          review,\n          name\n        ) {\n          return RESTSvc.post(url, {\n            resumeAccessToken : !!resumeAccessToken ? resumeAccessToken : null,\n            previewToken : !!previewToken ? previewToken : null,\n            originalToken : !!originalToken ? originalToken : null,\n            email : email,\n            firstName : name ? name : \"\",\n            lastName : \"\",\n            review : review\n          });\n        },\n        leaveReviewComment : function (\n          url,\n          reviewId,\n          content,\n          reviewToken\n        ) {\n          var data = {\n            reviewId : reviewId,\n            content : content\n          };\n\n          if (!!reviewToken) {\n            data[\"reviewToken\"] = reviewToken;\n          }\n          return RESTSvc.post(url, data);\n        },\n        maskTextsInResume : function (\n          url,\n          resumeId,\n          texts\n        ) {\n          var data = {\n            resumeId : resumeId,\n            texts : texts\n          };\n\n          return RESTSvc.post(url, data);\n        },\n        listingResumes : function (url) {\n          return RESTSvc.get(url);\n        },\n        toggleResumeListing : function (url) {\n          return RESTSvc.put(url);\n        },\n        findCvBox : function (name) {\n          var url = utilities.findCvBoxListUrl() + \"?name=\" + name;\n          return RESTSvc.get(url);\n        },\n        addResumeToCvBox : function (\n          referralId,\n          resumeId\n        ) {\n          var data = {\n            referralId : referralId,\n            resumeId : resumeId\n          };\n          var url = utilities.getAddingCandidateUrl();\n          return RESTSvc.post(url, data);\n        },\n        addNewSkill : function (name) {\n          var url = utilities.getAddingSkillUrl();\n\n          return RESTSvc.post(url, {\n            name : name\n          });\n        },\n        addNewCategorySkill : function (\n          name,\n          skillIds\n        ) {\n          var url = utilities.getAddingCategorySkillUrl();\n\n          return RESTSvc.post(url, {\n            name : name,\n            skillIds : skillIds\n          });\n        },\n        listSkills : function () {\n          var url = utilities.getListingSkillUrl();\n\n          return RESTSvc.get(url);\n        },\n        listSkillCategories : function () {\n          var url = utilities.getListingSkillCategoriesUrl();\n\n          return RESTSvc.get(url);\n        },\n        listSkillsOfCategory : function (categoryId) {\n          var url = utilities.getListingSkillOfCategoryUrl();\n          url = url.replace(\"{categoryId}\", categoryId);\n\n          return RESTSvc.get(url);\n        },\n        listCategoriesOfJob : function (referralLink) {\n          var url = utilities.getListingJobCategoriesUrl();\n          url = url.replace(\"{referralLink}\", referralLink);\n\n          return RESTSvc.get(url);\n        },\n        listCategoriesOfResume : function (resumeId) {\n          var url = utilities.getListingResumeCategoriesUrl();\n          url = url.replace(\"{resumeId}\", resumeId);\n\n          return RESTSvc.get(url);\n        },\n        updateJobSkillCategories : function (\n          jobId,\n          categoryIds\n        ) {\n          var url = utilities.getUpdatingJobCategoriesUrl();\n\n          return RESTSvc.post(url, {\n            jobId : jobId,\n            categoryIds : categoryIds\n          });\n        },\n        updateResumeSkillCategories : function (\n          resumeId,\n          categoryIds\n        ) {\n          var url = utilities.getUpdatingResumeCategoriesUrl();\n\n          return RESTSvc.post(url, {\n            resumeId : resumeId,\n            categoryIds : categoryIds\n          });\n        },\n        getSmartCategoriesOfJob : function (jobId) {\n          var url = utilities.getSmartJobCategoriesUrl();\n          url = url.replace(\"{jobId}\", jobId);\n\n          return RESTSvc.post(url);\n        },\n        getBulkFolderResumes: function() {\n          var url = utilities.getBulkFolderListing();\n          return RESTSvc.get(url);\n        },\n        uploadFolderResume: function(file) {\n          var url = utilities.uploadFolderResumeUrl();\n          var request = new FormData();\n          request.append(\"file\", file);\n          return RESTSvc.formPost(url, request);\n        }\n      };\n\n      return RestConfig;\n    }\n  ]);\n\nangular.module(\"MyCvTracker.shared\")\n\n  .factory(\"RESTSvc\", [\n    \"$rootScope\",\n    \"$q\",\n    \"$http\",\n    \"$injector\",\n\n    function (\n      $rootScope,\n      $q,\n      $http,\n      $injector\n    ) {\n\n      return {\n\n        get : function (\n          url,\n          data\n        ) {\n\n          var deferred = $q.defer();\n\n          $http.get(\n            url,\n            data\n          )\n            .success(function (response) {\n              //$rootScope.clearAlerts();\n              deferred.resolve(response);\n            })\n            .error(function (\n              response,\n              status\n            ) {\n              //$rootScope.clearAlerts();\n              deferred.reject({\n                response : response,\n                status : status\n              });\n            });\n\n          return deferred.promise;\n        },\n\n\n        post : function (\n          url,\n          data\n        ) {\n          var deferred = $q.defer();\n\n          $http.post(\n            url,\n            data\n          )\n            .success(function (response) {\n              //$rootScope.clearAlerts();\n              deferred.resolve(response);\n            })\n            .error(function (\n              response,\n              status\n            ) {\n              //$rootScope.clearAlerts();\n              deferred.reject({\n                response : response,\n                status : status\n              });\n            });\n\n          return deferred.promise;\n        },\n\n        formPost : function (\n          url,\n          data\n        ) {\n          var deferred = $q.defer();\n\n          $http.post(\n            url,\n            data,\n            {\n              transformRequest : angular.identity,\n              headers : { \"Content-Type\" : undefined }\n            }\n          )\n            .success(function (response) {\n              //$rootScope.clearAlerts();\n              deferred.resolve(response);\n            })\n            .error(function (\n              response,\n              status\n            ) {\n              //$rootScope.clearAlerts();\n              deferred.reject({\n                response : response,\n                status : status\n              });\n            });\n\n          return deferred.promise;\n        },\n\n\n        put : function (\n          url,\n          data\n        ) {\n\n          var deferred = $q.defer();\n\n          $http.put(\n            url,\n            data\n          )\n            .success(function (response) {\n              //$rootScope.clearAlerts();\n              deferred.resolve(response);\n            })\n            .error(function (\n              response,\n              status\n            ) {\n              //$rootScope.clearAlerts();\n              deferred.reject({\n                response : response,\n                status : status\n              });\n            });\n\n          return deferred.promise;\n        },\n\n        formPut : function (\n          url,\n          data\n        ) {\n          var deferred = $q.defer();\n\n          $http.put(\n            url,\n            data,\n            {\n              transformRequest : angular.identity,\n              headers : { \"Content-Type\" : undefined }\n            }\n          )\n            .success(function (response) {\n              //$rootScope.clearAlerts();\n              deferred.resolve(response);\n            })\n            .error(function (\n              response,\n              status\n            ) {\n              //$rootScope.clearAlerts();\n              deferred.reject({\n                response : response,\n                status : status\n              });\n            });\n\n          return deferred.promise;\n        },\n\n        delete : function (\n          url,\n          data\n        ) {\n\n          var deferred = $q.defer();\n\n          $http.delete(\n            url,\n            data\n          )\n            .success(function (response) {\n              //$rootScope.clearAlerts();\n              deferred.resolve(response);\n            })\n            .error(function (\n              response,\n              status\n            ) {\n              //$rootScope.clearAlerts();\n              deferred.reject({\n                response : response,\n                status : status\n              });\n            });\n\n          return deferred.promise;\n        },\n        download : function (url) {\n          // console.log(\"download\", url);\n          location.href = url;\n        }\n      };\n    }\n  ]);\n\nangular.module('MyCvTracker.shared')\n\n    .factory('Utilities', ['Constants', '$injector', '$location', 'toastr',\n\n        function (Constants, $injector, $location, toastr) {\n\n            var alerts = {\n                401: {\n                    type: 'danger',\n                    message: 'Unauthorized Access!',\n                },\n                403: {\n                    type: 'danger',\n                    message: 'Authentication Failure. The username or password doesn’t match. Please retry or use the Forgot Password option to reset the password.',\n                },\n                409: {\n                    type: 'danger',\n                    message: 'User already exists!',\n                },\n                regsitrationSuccess: {\n                    type: 'success',\n                    message: 'An activation link has been sent to the registered E-mail ID. Please activate your account to continue with the Registration Process.',\n                },\n                activateSuccess: {\n                    type: 'success',\n                    message: 'Your account has been activated.',\n                },\n                forgotPasswordSuccess: {\n                    type: 'success',\n                    message: 'A password reset link has been sent to the registered E-mail ID.',\n                },\n                reactivateSuccess: {\n                    type: 'success',\n                    message: 'An activation link has been sent to the registered E-mail.',\n                },\n                resumeAddedSuccess: {\n                    type: 'success',\n                    message: 'Resume has been successfully added.',\n                },\n                resumePushedSuccess: {\n                    type: 'success',\n                    message: 'Resume has been successfully pushed to Drive.',\n                },\n                resumeEditSuccess: {\n                    type: 'success',\n                    message: 'This Resume has been successfully edited.',\n                },\n                resumeSaveNameDuplicatedError: {\n                    type: 'danger',\n                    message: 'This Resume Name and Resume Reference already exists!',\n                },\n                resumeSaveTitleDuplicatedError: {\n                    type: 'danger',\n                    message: 'This Resume Title is duplicated!',\n                },\n                resumeSaveTypeDuplicatedError: {\n                    type: 'danger',\n                    message: 'This Resume Type is duplicated!',\n                },\n                resumeTrackRequestSuccess: {\n                    type: 'success',\n                    message: 'Your request has been saved.',\n                },\n                resumePushToDriveError: {\n                    type: 'danger',\n                    message: 'Pushing resume to Drive has failed!',\n                },\n                favNotesSaveLimitError: {\n                    type: '',\n                    message: 'You have exceeded the limit for number of Fav Notes.'\n                },\n                favNotesAlreadyExitsError: {\n                    type: '',\n                    message: 'This Fav Note name already exists. Please choose a different name.'\n                },\n                CvMarketingRequestSuccess: {\n                    type: 'success',\n                    message: 'Your request has been received and we will contact you soon.',\n                },\n                deleteResumeuccess: {\n                    type: 'success',\n                    message: 'This Resume has been successfully deleted.',\n                },\n                deleteNotificationSuccess: {\n                    type: 'success',\n                    message: 'This Notification has been successfully deleted.',\n                },\n                deleteCampaignNotificationSuccess: {\n                    type: 'success',\n                    message: 'This Campaign Notification has been successfully deleted.',\n                },\n                deleteNotesSuccess: {\n                    type: 'success',\n                    message: 'Note has been successfully deleted.',\n                },\n                updateNoteSuccess: {\n                    type: 'success',\n                    message: 'Note has been updated successfully.',\n                },\n                sendTrackedApplicationSuccess: {\n                    type: 'success',\n                    message: 'This note has been added to tracking.',\n                },\n                sendUnTrackedApplicationSuccess: {\n                    type: 'success',\n                    message: 'This note has been removed from tracking.',\n                },\n                defaultError: {\n                    type: 'danger',\n                    message: 'Oops! Something went wrong.',\n                },\n                defaultWarning: {\n                    type: 'warning',\n                    message: 'This may hurt.',\n                },\n                defaultSuccess: {\n                    type: 'success',\n                    message: 'Operation performed successfully.',\n                },\n                notActivated: {\n                    type: 'warning',\n                    message: 'Your account has not been activated yet. Have you got an activation link?'\n                },\n\n\n                deleteModelTitle: {\n                    type: '',\n                    message: 'Delete Resume'\n                },\n\n                sendTrackedApplicationModelTitle: {\n                    type: '',\n                    message: 'Send Tracked Application'\n                },\n\n\n                deleteModelMessage: {\n                    type: '',\n                    message: 'Are you sure you want to delete this Resume?'\n                },\n\n                sendTrackedApplicationlMessage: {\n                    type: '',\n                    message: 'Are you sure you want to send Tracked Application?'\n                },\n\n                unsubscribeeModelTrackingTitle: {\n                    type: '',\n                    message: 'You have succesfully unsubscribed to Tracking Mail.'\n                },\n                unsubscribeModelTrackingMessage: {\n                    type: '',\n                    message: 'Are you sure you want to unsubscribe to Tracking Mail?'\n                },\n\n                unsubscribeeModelNotificationTitle: {\n                    type: '',\n                    message: 'You have successfully unsubscribed to Notification Mail.'\n                },\n                unsubscribeModelNotificationMessage: {\n                    type: '',\n                    message: 'Are you sure you want to unsubscribe to Notification Mail?'\n                },\n\n                downloadModelTitle: {\n                    type: '',\n                    message: 'Download Resume'\n                },\n                downloadModelMessage: {\n                    type: '',\n                    message: 'Are you sure you want to download this Resume?'\n                },\n                resumeDownloadSuccess: {\n                    type: 'success',\n                    message: 'Resume has been successfully downloaded.',\n                },\n                resumeSaveLimitError: {\n                    type: '',\n                    message: 'You have reached your resume limit.'\n                },\n                resumeSaveLeastError: {\n                    type: '',\n                    message: 'You have at least one resume.'\n                },\n                notificationDeleteLeastError: {\n                    type: '',\n                    message: 'You have at least one note to delete.'\n                },\n\n                InputFileInputTypeValidation: {\n                    type: '',\n                    message: 'Please upload a PDF, Doc, Docx file only.'\n                },\n                InputFileInputSizeValidation: {\n                    type: '',\n                    message: 'Please select a file that is less than 500KB.'\n                },\n                InputFileInputRequiredValidation: {\n                    type: '',\n                    message: 'Please select the resume file!'\n                },\n                PaymentSuccessfullyExecuted: {\n                    type: 'success',\n                    message: 'The payment executed successfully.'\n                },\n                userTickException: {\n                    type: 'warning',\n                    message: 'You have exceeded your ticks.'\n                },\n                resetPasswordSuccess: {\n                    type: 'success',\n                    message: 'Your password has been successfully changed.',\n                },\n                confirmPasswordErorr: {\n                    type: 'warning',\n                    message: 'Please make sure your passwords match.'\n                },\n                profileSaveSucess: {\n                    type: 'success',\n                    message: 'These settings have been saved.'\n                },\n\n                unsubscribeSucess: {\n                    type: 'success',\n                    message: 'The unsubscribe proccess has been successfully completed.'\n                },\n                jobContentSaveSucess: {\n                    type: 'success',\n                    message: 'This job content has been successfully updated.'\n                },\n                jobActivateSaveSucess: {\n                    type: 'success',\n                    message: 'This job has been successfully activated.'\n                },\n                applyJobTitle: {\n                    type: '',\n                    message: 'Apply Job'\n                },\n                applyJobMessage: {\n                    type: '',\n                    message: 'Are you sure you want to apply to this job?'\n                },\n                applyJobSucsessMessage: {\n                    type: 'success',\n                    message: 'Your job application has been sent successfully.'\n                },\n                editJobTitle: {\n                    type: '',\n                    message: 'Edit Job'\n                },\n                editJobMessage: {\n                    type: '',\n                    message: 'Are you sure you want to edit to this job?'\n                },\n                approveJobTitle: {\n                    type: '',\n                    message: 'Approve Job'\n                },\n                approveJobMessage: {\n                    type: '',\n                    message: 'Are you sure you want to approve this job?'\n                },\n                approveJobSuccessMessage: {\n                    type: 'success',\n                    message: 'This job has been successfully approved.'\n                },\n                rejectJobTitle: {\n                    type: '',\n                    message: 'Reject Job'\n                },\n                rejectJobMessage: {\n                    type: '',\n                    message: 'Are you sure you want to reject this job?'\n                },\n                rejectJobSuccessMessage: {\n                    type: 'success',\n                    message: 'You have sucessfully rejected this job.'\n                },\n                newReferralLinkSuccessMsg: \"New referral link has been generated\",\n                editReferralLinkSuccessMsg: \"The referral link has been updated successfully\",\n                referralLinkCopySuccessMsg: \"Copied\",\n                deleteReferralLinkSuccessMsg: \"Referral link has been deleted successfully.\",\n                extendResumeSuccessMessage: \"Resume preview has been extended successfully.\",\n                extendResumeSuccessFail: \"Extending resume has failed!\",\n            };\n\n            var Utilities = {\n\n                getAlerts: function (statusCode) {\n                    return alerts[statusCode ? statusCode : 'defaultError'];\n                },\n\n\n                getTextDay: function (numDay) {\n                    var textDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n                    return textDays[numDay];\n                },\n\n                getMonthDay: function (numMonth) {\n                    var textMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul',\n                        'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n                    ];\n                    return textMonths[numMonth];\n                },\n\n                getFormattedDate: function (dateOb) {\n                    var newDate = new Date(dateOb);\n                    return this.getTextDay(newDate.getDay()) + ', ' + this.getMonthDay(newDate.getMonth()) + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n                },\n\n                getLoginUrl: function () {\n                    return Constants.baseUrl + Constants.apis.login.url;\n                },\n\n                getRegisterUrl: function () {\n                    return Constants.baseUrl + Constants.apis.register.url;\n                },\n\n                getActivationUrl: function () {\n                    return Constants.baseUrl + Constants.apis.activate.url;\n                },\n\n                getLogoutUrl: function () {\n                    return Constants.baseUrl + Constants.apis.logout.url;\n                },\n\n                getForgotPasswordUrl: function () {\n                    return Constants.baseUrl + Constants.apis.forgotPassword.url;\n                },\n\n                getReactivateUrl: function () {\n                    return Constants.baseUrl + Constants.apis.reactivate.url;\n                },\n\n                getChangePasswordUrl: function () {\n                    return Constants.baseUrl + Constants.apis.changePassword.url;\n                },\n\n                getMyResumesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.myResumes.url;\n                },\n\n                getAllMyResumesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.allMyResumes.url;\n                },\n\n                getOtherResumesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.otherResumes.url;\n                },\n\n                getSaveResumesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.saveResume.url;\n                },\n\n                getPushResumeToDriveUrl: function () {\n                    return Constants.baseUrl + Constants.apis.pushToDrive.url;\n                },\n\n                geDeleteResumesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.deleteResume.url;\n                },\n\n                getFindResumeUrl: function () {\n                    return Constants.baseUrl + Constants.apis.findResume.url;\n                },\n\n                getDownloadResumeUrl: function () {\n                    return Constants.baseUrl + Constants.apis.downloadResume.url;\n                },\n\n                getTrackResumeUrl: function () {\n                    return Constants.baseUrl + Constants.apis.trackResume.url;\n                },\n\n                getFavNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.favNotes.url;\n                },\n\n                getCvMarketingUrl: function () {\n                    return Constants.baseUrl + Constants.apis.CvMarketing.url;\n                },\n\n                getCvMarketingEditUrl: function () {\n                    return Constants.baseUrl + Constants.apis.CvMarketingEdit.url;\n                },\n\n                getCvMarketingCloneUrl: function () {\n                    return Constants.baseUrl + Constants.apis.CvMarketingClone.url;\n                },\n\n                getCvMarketingDeleteUrl: function () {\n                    return Constants.baseUrl + Constants.apis.CvMarketingDelete.url;\n                },\n\n                getMyNotificationsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.notifications.url;\n                },\n\n                getMyCampaignNotificationsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.campaignNotifications.url;\n                },\n\n                getMyCampaignsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.campaigns.url;\n                },\n                bulkCampaignNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.bulkEditCampaignNotes.url;\n                },\n                getMyCampaignNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.CampaignNotes.url;\n                },\n                viewMyCampaignNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.viewCampaignNotes.url;\n                },\n                getDeleteCampaignNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.deleteCampaignNotes.url;\n                },\n                getMyNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.notes.url;\n                },\n\n                viewMyNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.viewNotes.url;\n                },\n\n                referCandidatesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.referCandidates.url;\n                },\n\n                campaignCandidatesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.campaignCandidates.url;\n                },\n\n                getDeleteNotificationsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.deleteNotifications.url;\n                },\n\n                getDeleteCampaignNotificationsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.deleteCampaignNotifications.url;\n                },\n\n                getViewNotificationsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.viewNotifications.url;\n                },\n\n                getViewCampaignNotificationsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.viewCampaignNotifications.url;\n                },\n\n                getDeleteNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.deleteNotes.url;\n                },\n\n                getEditNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.editNotes.url;\n                },\n                addGroupsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.addGroup.url;\n                },\n                editGroupsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.editGroup.url;\n                },\n                getGroupsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.groupsList.url;\n                },\n                getGroupMembersUrl: function () {\n                    return Constants.baseUrl + Constants.apis.getMembers.url;\n                },\n                getEditMembersUrl: function () {\n                    return Constants.baseUrl + Constants.apis.editMembers.url;\n                },\n                getBulkUploadMembersUrl: function () {\n                    return Constants.baseUrl + Constants.apis.bulkUploadMembers.url;\n                },\n                getDeleteMembersUrl: function () {\n                    return Constants.baseUrl + Constants.apis.deleteMembers.url;\n                },\n                getQuestionsListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.questionList.url;\n                },\n                editQuestionsListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.editQuestionList.url;\n                },\n                deleteQuestionsListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.deleteQuestionList.url;\n                },\n                addQuestionUrl: function () {\n                    return Constants.baseUrl + Constants.apis.addQuestionUrl.url;\n                },\n                assignInterviewUrl: function () {\n                    return Constants.baseUrl + Constants.apis.assignInterview.url;\n                },\n                sendReminderUrl: function () {\n                    return Constants.baseUrl + Constants.apis.sendReminder.url;\n                },\n                getResultsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.getResults.url;\n                },\n                getEditCampaignNotesUrl: function () {\n                    return Constants.baseUrl + Constants.apis.editNotes.url;\n                },\n\n                getAuthenticatedUserUrl: function () {\n                    return Constants.baseUrl + Constants.apis.authenticateUser.url;\n                },\n\n                getExecutePaymentrUrl: function () {\n                    return Constants.baseUrl + Constants.apis.executePayment.url;\n                },\n\n                getPaymentPlansrUrl: function () {\n                    return Constants.baseUrl + Constants.apis.paymentPlans.url;\n                },\n\n                getUserTickUrl: function () {\n                    return Constants.baseUrl + Constants.apis.UserTick.url;\n                },\n\n                getValidateUserTickNumberUrl: function () {\n                    return Constants.baseUrl + Constants.apis.validateUserTickNumber.url;\n                },\n\n                resetNewPasswordUrl: function () {\n                    return Constants.baseUrl + Constants.apis.resetNewPassword.url;\n                },\n\n                resetPasswordAndActivate: function () {\n                    return Constants.baseUrl + Constants.apis.resetPasswordAndActivate.url;\n                },\n\n                saveProfileSettingsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.saveProfileSettings.url;\n                },\n\n                getUserProfileSettingsUrl: function () {\n                    return Constants.baseUrl + Constants.apis.getUserProfileSettings.url;\n                },\n\n                unSubscribeMailUrl: function () {\n                    return Constants.baseUrl + Constants.apis.unSubscribeMail.url;\n                },\n\n                sendTrackedApplicationUrl: function () {\n                    return Constants.baseUrl + Constants.apis.sendTrackedApplication.url;\n                },\n\n                getJobsListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.jobsList.url;\n                },\n\n                getEditJobUrl: function () {\n                    return Constants.baseUrl + Constants.apis.editJob.url;\n                },\n\n                getViewJobUrl: function () {\n                    return Constants.baseUrl + Constants.apis.viewJob.url;\n                },\n\n                getActivateJobUrl: function () {\n                    return Constants.baseUrl + Constants.apis.activateJob.url;\n                },\n\n                getApplyJobUrl: function () {\n                    return Constants.baseUrl + Constants.apis.applyJob.url;\n                },\n\n                getSendTrackAppUrl: function () {\n                    return Constants.baseUrl + Constants.apis.sendTrackApp.url;\n                },\n\n                getcollectCVUrl: function () {\n                    return Constants.baseUrl + Constants.apis.collectCV.url;\n                },\n\n                getcollectCVFromMailUrl: function () {\n                    return Constants.baseUrl + Constants.apis.collectCVFromEmail.url;\n                },\n\n                getJobCriteriaListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.jobCriteriaList.url;\n                },\n\n                getCitiesListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.citiesList.url;\n                },\n\n                getReferralLinkListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.referralList.url;\n                },\n\n                getReferralLinkListUrlOfUser: function () {\n                    return Constants.baseUrl + Constants.apis.referralListOfOther.url;\n                },\n\n                getReferralLinkNewUrl: function () {\n                    return Constants.baseUrl + Constants.apis.newReferralLink.url;\n                },\n\n                getReferralLinkEditUrl: function () {\n                    return Constants.baseUrl + Constants.apis.newReferralLink.url;\n                },\n\n                getReferralLinkNewUrlForUser: function () {\n                    return Constants.baseUrl + Constants.apis.newReferralLinkForUser.url;\n                },\n\n\n                getShareReferralLinkUrl: function () {\n                    return Constants.baseUrl + Constants.apis.shareReferralLink.url;\n                },\n\n\n                getShareResumeToParentLinkUrl: function () {\n                    return Constants.baseUrl + Constants.apis.shareResumeToParentLink.url;\n                },\n\n                getShareResumeToTargetUrl: function () {\n                    return Constants.baseUrl + Constants.apis.shareResumeToTarget.url;\n                },\n\n                getUpdateResumeInterviewStatusUrl: function () {\n                    return Constants.baseUrl + Constants.apis.updateResumeInterviewStt.url;\n                },\n\n                getUpdateResumeJobStatusUrl: function () {\n                    return Constants.baseUrl + Constants.apis.updateResumeJobStt.url;\n                },\n\n                getDeleteReferralUrl: function () {\n                    return Constants.baseUrl + Constants.apis.deleteReferralLink.url;\n                },\n\n                getResumeTokenUrl: function () {\n                    return Constants.baseUrl + Constants.apis.resumeTokenLink.url;\n                },\n\n                getReferralContentUrl: function () {\n                    return Constants.baseUrl + Constants.apis.referralContent.url;\n                },\n\n                getTargetUpdateResumeInterviewStatusUrl: function () {\n                    return Constants.baseUrl + \"/user/resume/interview/target-update\";\n                },\n\n                getTargetUpdateResumeJobStatusUrl: function () {\n                    return Constants.baseUrl + \"/user/resume/job-status/target-update\";\n                },\n\n                getAuthUserListUrl: function () {\n                    return Constants.baseUrl + \"/auth/users\";\n                },\n\n                getAuthUserByEmailUrl: function () {\n                    return Constants.baseUrl + \"/auth/userByEmail\";\n                },\n\n                getDeleteUserUrl: function () {\n                    return Constants.baseUrl + \"/auth/users/{userId}/delete\";\n                },\n\n                getRef: function () {\n                    return Constants.baseUrl + Constants.apis.referredResumesList.url;\n                },\n\n                getReferredResumeListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.referredResumesList.url;\n                },\n\n                getMatchingResumeListUrl: function () {\n                    return Constants.baseUrl + \"/job/{referralLink}/matching-resumes\";\n                },\n\n                getSkillsOfMatching: function () {\n                    return Constants.baseUrl + \"/match-skills/{matchingId}/list\";\n                },\n\n                findMatchingResumesInFolderUrl: function () {\n                    return Constants.baseUrl + \"/job/{jobId}/bulk-folder-scan\";\n                },\n\n                findMatchingResumesInMultipleFolderUrl: function () {\n                    return Constants.baseUrl + \"/job/{jobId}/bulk-folders-scan\";\n                },\n\n                getCvBoxCandidateListUrl: function () {\n                    return Constants.baseUrl + \"/cvbox/candidates/list\";\n                },\n\n                findCvBoxListUrl: function () {\n                    return Constants.baseUrl + \"/simple-cvbox/find\";\n                },\n\n                getRemovingCandidateUrl: function () {\n                    return Constants.baseUrl + \"/cvbox/unregister/resume\";\n                },\n\n                getAddingCandidateUrl: function () {\n                    return Constants.baseUrl + \"/cvbox/register/resume\";\n                },\n\n                getListingResumeUrl: function () {\n                    return Constants.baseUrl + \"/user/active-resumes/list\";\n                },\n\n                updateListingResumeStatusUrl: function () {\n                    return Constants.baseUrl + \"/user/resumes/{resumeId}/listing-status\";\n                },\n\n                getTargetResumeDetailUrl: function (id) {\n                    var url = Constants.baseUrl + Constants.apis.targetResumeDetailLink.url;\n                    return url.replace(\"{id}\", id);\n                },\n\n                getJobSpecListUrl: function () {\n                    return Constants.baseUrl + Constants.apis.jobSpecList.url;\n                },\n\n                getChildRefLinks: function () {\n                    return Constants.baseUrl + Constants.apis.listChildRefLinks.url;\n                },\n\n\n                getSocialRegistrationListUrl: function () {\n                    return Constants.baseUrl + \"/social-registration/{referralLink}/list\";\n                },\n\n                getShareSocialToParentLinkUrl: function () {\n                    return Constants.baseUrl + \"/social-registration/share-with-parent\";\n                },\n\n                getUpdateResumeLinkUrl: function () {\n                    return Constants.baseUrl + \"/user/resume/preview/link-id\";\n                },\n                getCheckResumeLinkUrl: function () {\n                    return Constants.baseUrl + \"/user/resume/preview/link/check\";\n                },\n\n                gotoFrontPage: function () {\n                    $location.path('base.front');\n                },\n\n                gotoHomePage: function () {\n                    $location.path('home');\n                },\n\n                gotoProfilePage: function () {\n                    $location.path('account');\n                },\n\n                gotoJobPage: function () {\n                    $location.path('jobs');\n                },\n\n                gotoViewJobPage: function () {\n                    $location.path('jobs.viewJob');\n                },\n\n                gotoMyResumesPage: function () {\n                    $location.path('resumes');\n                },\n\n                gotoLoginPage: function () {\n                    //$location.path('base.auth', {reload: true});\n                    $location.path('auth', {}, { reload: true });\n                },\n\n                gotoRegisterPage: function () {\n                    //$location.path('base.auth', {reload: true});\n                    $location.path('register', {}, { reload: true });\n                },\n\n                gotoFrontPageWithReload: function () {\n                    $location.path('front', { reload: true });\n                },\n\n                gotoHomePageWithReload: function () {\n                    $location.path('home', { reload: true });\n                },\n\n                gotoTrackResumePage: function () {\n                    $location.path('trackResume');\n                },\n\n                gotoNotificationsPage: function () {\n                    $location.path('notifications');\n                },\n\n                gotoCampaignNotificationsPage: function () {\n                    $location.path('CampaignNotifications');\n                },\n\n                gotoCVMarketingPage: function () {\n                    $location.path('CvMarketing');\n                },\n                gotoNotesPage: function () {\n                    $location.path('notes', {}, { reload: true });\n                },\n                gotoCampaignNotesPage: function () {\n                    $location.path('CampaignNotes');\n                },\n\n                gotoPaymentPage: function () {\n                    $location.path('payment');\n                },\n\n                gotoSettingsPage: function () {\n                    $location.path('settings');\n                },\n                collectCV: function () {\n                    $location.path('collectCV');\n                },\n                getAddingSkillUrl: function () {\n                    return Constants.baseUrl + \"/tech-skill/new\";\n                },\n                getAddingCategorySkillUrl: function () {\n                    return Constants.baseUrl + \"/skill-category/new\";\n                },\n                getListingSkillCategoriesUrl: function () {\n                    return Constants.baseUrl + \"/tech-categories/list\";\n                },\n                getListingSkillUrl: function () {\n                    return Constants.baseUrl + \"/tech-skills/list\";\n                },\n                getListingSkillOfCategoryUrl: function () {\n                    return Constants.baseUrl + \"/skill-category/{categoryId}/skill-list\";\n                },\n                getListingJobCategoriesUrl: function () {\n                    return Constants.baseUrl + \"/job/{referralLink}/skill-categories\";\n                },\n                getListingResumeCategoriesUrl: function () {\n                    return Constants.baseUrl + \"/resume/{resumeId}/skills\";\n                },\n                getSmartJobCategoriesUrl: function () {\n                    return Constants.baseUrl + \"/tech-skill/job/{jobId}/smart-categorize\";\n                },\n                getUpdatingJobCategoriesUrl: function () {\n                    return Constants.baseUrl + \"/tech-skill/categorize/job\";\n                },\n                getUpdatingResumeCategoriesUrl: function () {\n                    return Constants.baseUrl + \"/tech-skill/categorize/resume\";\n                },\n                getBulkFolderListing: function () {\n                    return Constants.baseUrl + \"/user/folder-resumes\";\n                },\n                uploadFolderResumeUrl: function () {\n                    return Constants.baseUrl + \"/user/bulk-folder/resume-upload\";\n                },\n                baseUrl: function () {\n                    var pathparts = location.pathname.split('/');\n                    if (location.host.indexOf('localhost') !== -1) {\n                        var url = location.origin;\n                    } else {\n                        var url = location.origin;\n                    }\n                    return url;\n                },\n\n                getParameters: function () {\n                    var query_string = {};\n                    var query = window.location.search.substring(1);\n                    var vars = query.split(\"&\");\n                    for (var i = 0; i < vars.length; i++) {\n                        var pair = vars[i].split(\"=\");\n                        // If first entry with this name\n                        if (typeof query_string[pair[0]] === \"undefined\") {\n                            query_string[pair[0]] = decodeURIComponent(pair[1]);\n                            // If second entry with this name\n                        } else if (typeof query_string[pair[0]] === \"string\") {\n                            var arr = [query_string[pair[0]], decodeURIComponent(pair[1])];\n                            query_string[pair[0]] = arr;\n                            // If third or later entry with this name\n                        } else {\n                            query_string[pair[0]].push(decodeURIComponent(pair[1]));\n                        }\n                    }\n                    return query_string;\n                },\n\n                showSuccessMsg: function (msg) {\n                    toastr.success(msg);\n                },\n\n                showInfoMsg: function (msg) {\n                    toastr.info(msg, 'Information');\n                },\n\n                showErrorMsg: function (msg) {\n                    toastr.error(msg, 'Error');\n                },\n\n                showWarningMsg: function (msg) {\n                    toastr.warning(msg, 'Warning');\n                }\n\n            };\n\n            return Utilities;\n        }\n    ]);\n\n/**\n * Created by k.danovsky on 13.05.2016.\n */\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n    .config(config);\n\n  /** @ngInject */\n  function config(baConfigProvider, colorHelper, $provide) {\n    $provide.decorator('$uiViewScroll', uiViewScrollDecorator);\n    //baConfigProvider.changeTheme({blur: true});\n    //\n  }\n\n  /** @ngInject */\n  function uiViewScrollDecorator($delegate, $anchorScroll, baUtil) {\n    return function (uiViewElement) {\n      if (baUtil.hasAttr(uiViewElement, \"autoscroll-body-top\")) {\n        $anchorScroll();\n      } else {\n        $delegate(uiViewElement);\n      }\n    };\n  }\n})();\n\n/**\n * Created by k.danovsky on 13.05.2016.\n */\n\n(function () {\n  'use strict';\n\n  var basic = {\n    default: '#ffffff',\n    defaultText: '#666666',\n    border: '#dddddd',\n    borderDark: '#aaaaaa',\n  };\n\n  // main functional color scheme\n  var colorScheme = {\n    primary: '#209e91',\n    info: '#2dacd1',\n    success: '#90b900',\n    warning: '#dfb81c',\n    danger: '#e85656',\n  };\n\n  // dashboard colors for charts\n  var dashboardColors = {\n    blueStone: '#005562',\n    surfieGreen: '#0e8174',\n    silverTree: '#6eba8c',\n    gossip: '#b9f2a1',\n    white: '#10c4b5',\n  };\n\n  angular.module('MyCvTracker.theme')\n    .provider('baConfig', configProvider);\n\n  /** @ngInject */\n  function configProvider(colorHelper) {\n    var conf = {\n      theme: {\n        blur: false,\n      },\n      colors: {\n        default: basic.default,\n        defaultText: basic.defaultText,\n        border: basic.border,\n        borderDark: basic.borderDark,\n\n        primary: colorScheme.primary,\n        info: colorScheme.info,\n        success: colorScheme.success,\n        warning: colorScheme.warning,\n        danger: colorScheme.danger,\n\n        primaryLight: colorHelper.tint(colorScheme.primary, 30),\n        infoLight: colorHelper.tint(colorScheme.info, 30),\n        successLight: colorHelper.tint(colorScheme.success, 30),\n        warningLight: colorHelper.tint(colorScheme.warning, 30),\n        dangerLight: colorHelper.tint(colorScheme.danger, 30),\n\n        primaryDark: colorHelper.shade(colorScheme.primary, 15),\n        infoDark: colorHelper.shade(colorScheme.info, 15),\n        successDark: colorHelper.shade(colorScheme.success, 15),\n        warningDark: colorHelper.shade(colorScheme.warning, 15),\n        dangerDark: colorHelper.shade(colorScheme.danger, 15),\n\n        dashboard: {\n          blueStone: dashboardColors.blueStone,\n          surfieGreen: dashboardColors.surfieGreen,\n          silverTree: dashboardColors.silverTree,\n          gossip: dashboardColors.gossip,\n          white: dashboardColors.white,\n        },\n      }\n    };\n\n    conf.changeTheme = function(theme) {\n      angular.merge(conf.theme, theme)\n    };\n\n    conf.changeColors = function(colors) {\n      angular.merge(conf.colors, colors)\n    };\n\n    conf.$get = function () {\n      delete conf.$get;\n      return conf;\n    };\n    return conf;\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 15.12.2015\n */\n(function () {\n  'use strict';\n\n  var IMAGES_ROOT = 'assets/img/';\n\n  angular.module('MyCvTracker.theme')\n    .constant('layoutSizes', {\n      resWidthCollapseSidebar: 1200,\n      resWidthHideSidebar: 500\n    })\n    .constant('layoutPaths', {\n      images: {\n        root: IMAGES_ROOT,\n        profile: IMAGES_ROOT + 'app/profile/',\n        amMap: 'assets/img/theme/vendor/ammap//dist/ammap/images/',\n        amChart: 'assets/img/theme/vendor/amcharts/dist/amcharts/images/'\n      }\n    })\n    .constant('colorHelper', {\n      tint: function(color, weight) {\n        return mix('#ffffff', color, weight);\n      },\n      shade: function(color, weight) {\n        return mix('#000000', color, weight);\n      },\n    });\n\n  function shade(color, weight) {\n    return mix('#000000', color, weight);\n  }\n\n  function tint(color, weight) {\n    return mix('#ffffff', color, weight);\n  }\n\n  //SASS mix function\n  function mix(color1, color2, weight) {\n    // convert a decimal value to hex\n    function d2h(d) {\n      return d.toString(16);\n    }\n    // convert a hex value to decimal\n    function h2d(h) {\n      return parseInt(h, 16);\n    }\n\n    var result = \"#\";\n    for(var i = 1; i < 7; i += 2) {\n      var color1Part = h2d(color1.substr(i, 2));\n      var color2Part = h2d(color2.substr(i, 2));\n      var resultPart = d2h(Math.floor(color2Part + (color1Part - color2Part) * (weight / 100.0)));\n      result += ('0' + resultPart).slice(-2);\n    }\n    return result;\n  }\n})();\n\n/**\n * @author v.lugovksy\n * created on 15.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n    .run(themeRun);\n\n  /** @ngInject */\n  function themeRun($timeout, $rootScope, layoutPaths, preloader, $q, baSidebarService, themeLayoutSettings,$injector,$auth,$state) {\n\n    \n    var whatToWait = [\n      $timeout(3000)\n    ];\n\n    baSidebarService.setMenuCollapsed(false);\n    $rootScope.$isAuthenticated = $auth.isAuthenticated();\n\n    $q.all(whatToWait).then(function () {\n      $rootScope.$pageFinishedLoading = true;\n    });\n\n    $timeout(function () {\n      if (!$rootScope.$pageFinishedLoading) {\n        $rootScope.$pageFinishedLoading = true;\n      }\n    }, 7000);\n\n    $rootScope.$baSidebarService = baSidebarService;\n\n      $rootScope.$state = $state;\n  }\n\n})();\n/**\n * Created by k.danovsky on 12.05.2016.\n */\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n    .service('themeLayoutSettings', themeLayoutSettings);\n\n  /** @ngInject */\n  function themeLayoutSettings(baConfig) {\n    var isMobile = (/android|webos|iphone|ipad|ipod|blackberry|windows phone/).test(navigator.userAgent.toLowerCase());\n    var mobileClass = isMobile ? 'mobile' : '';\n    var blurClass = baConfig.theme.blur ? 'blur-theme' : '';\n    angular.element(document.body).addClass(mobileClass).addClass(blurClass);\n\n    return {\n      blur: baConfig.theme.blur,\n      mobile: isMobile,\n    }\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.account', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('account', {\n          url: '/account',\n          templateUrl: 'app/pages/account/templates/account.html',\n          title: 'Profile',\n          sidebarMeta: {\n            icon: 'fa fa-user',\n            order: 2,\n          },\n        });\n\n      $stateProvider\n          .state('settings', {\n              url: '/settings',\n              templateUrl: 'app/pages/account/templates/settings.html',\n              title: 'Settings'\n          });\n\n      $stateProvider\n          .state('accountFromTrackingMail', {\n              url: '/accountFromTrackingMail',\n              templateUrl: 'app/pages/account/templates/accountFromMail.html',\n              controller: 'AccountCtrl'\n          });\n\n      $stateProvider\n          .state('accountFromNotificationMail', {\n              url: '/accountFromNotificationMail',\n              templateUrl: 'app/pages/account/templates/accountFromMail.html',\n              controller: 'AccountCtrl'\n          });\n  }\n\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.bulkFolderResumes\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"bulkFolderResumes\", {\n        url : \"/bulk-folder-resumes\",\n        templateUrl : \"app/pages/bulk-folder-resume/templates/resumes.html\",\n        title : \"Bulk Folder Resumes\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.CampaignNotes', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('CampaignNotes', {\n          url: '/CampaignNotes',\n          templateUrl: 'app/pages/campaignNotes/templates/notes.html',\n          title: 'CV Marketing Notes',\n          controller: 'CampaignNotesCtrl',\n          shown: false,\n          requiresPermission:true,\n          sidebarMeta: {\n            icon:'fa fa-paper-plane-o',\n            order: 8\n          },\n        });\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.auth', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('login', {\n          url: '/login',\n          templateUrl: 'app/pages/auth/templates/login.html',\n          title: 'Login',\n          controller: 'AuthCtrl',\n          shown:false,\n          sidebarMeta: {\n            order: 800,\n          },\n        });\n\n      $stateProvider\n          .state('register', {\n              url: '/register',\n              controller: 'AuthCtrl',\n              templateUrl: 'app/pages/auth/templates/register.html',\n              title: 'Sign Up',\n              shown:false,\n              sidebarMeta: {\n                  order: 800,\n              },\n          });\n\n      $stateProvider\n          .state('resetPassword', {\n              url: '/resetPassword',\n              controller: 'AuthCtrl',\n              templateUrl: 'app/pages/auth/templates/resetPassword.html',\n              title: 'Reset Password',\n              shown:false,\n              sidebarMeta: {\n                  order: 800,\n              },\n          });\n\n       $stateProvider\n        .state('activateOut', {\n            url: '/activateOut',\n            controller: 'AuthCtrl',\n            templateUrl: 'app/pages/auth/templates/activateout.html',\n            title: 'Reset Password & Activate Account',\n            shown:false,\n            sidebarMeta: {\n                order: 800,\n            },\n        });\n\n      $stateProvider\n          .state('activateAccount', {\n              url: '/activateAccount',\n              controller: 'AuthCtrl',\n              templateUrl: 'app/pages/auth/templates/reactivate.html',\n              title: 'activate',\n              shown:false,\n              sidebarMeta: {\n                  order: 800,\n              },\n          });\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.campaignNotifications', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('CampaignNotifications', {\n          url: '/CampaignNotifications',\n          templateUrl: 'app/pages/campaignNotifications/templates/campaign_notifications.html',\n          title: 'CV Marketing Notifications',\n          controller: 'CampaignNotificationsCtrl',\n          shown: false,\n          requiresPermission:true,\n          sidebarMeta: {\n              icon:'fa fa-paper-plane-o',\n              order: 10,\n          },\n        });\n  }\n\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.skillCategory\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"skillCategory\", {\n        url : \"/skill-category-list\",\n        templateUrl : \"app/pages/categories-skills/templates/category-list.html\",\n        title : \"Skill Categories\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.cvBoxCandidates\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"cvBoxCandidates\", {\n        url : \"/cvbox\",\n        templateUrl : \"app/pages/cvbox-candidates/templates/candidates-list.html\",\n        title : \"Cv Box\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n    'use strict';\n\n    angular.module('MyCvTracker.pages.CvMarketing', [])\n        .config(routeConfig);\n\n    /** @ngInject */\n    function routeConfig($stateProvider) {\n        $stateProvider\n            .state('CvMarketing', {\n                url: '/CvMarketing',\n                templateUrl: 'app/pages/cvmarketing/templates/CVMarketing.html',\n                title: 'CV Marketing',\n                controller: 'CvMarketingCtrl',\n                shown: false,\n                requiresPermission:true,\n                sidebarMeta: {\n                    icon:'fa fa-paper-plane-o',\n                    order: 9\n                },\n            });\n\n        $stateProvider\n            .state('collectCV', {\n                url: '/collectCV',\n                templateUrl: 'app/pages/cvmarketing/templates/collectCV.html',\n                controller: 'CvMarketingCtrl'\n            });\n\n        $stateProvider\n            .state('collectCVFromEmail', {\n                url: '/collectCVFromEmail',\n                templateUrl: 'app/pages/cvmarketing/templates/collectCVFromMail.html',\n                controller: 'CvMarketingCtrl'\n            });\n    }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.groupdata', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('groupdata', {\n          url: '/groupdata',\n          templateUrl: 'app/pages/groupdata/templates/groups.html',\n          title: 'Group Members Data',\n          controller: 'GroupDataCtrl',\n          shown: false,\n          requiresPermission:true,\n          sidebarMeta: {\n            icon:'fa fa-paper-plane-o',\n            order: 9\n          },\n        });\n  }\n\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.jobResumePreview\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"jobResumePreview\", {\n        url : \"/job-resume-preview\",\n        templateUrl : \"app/pages/job-resume-preview/templates/index.html\",\n        title : \"Resume Preview\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.jobResumeLink\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"jobResumeLink\", {\n        url : \"/resumes/:linkId\",\n        templateUrl : \"app/pages/job-resume-preview/templates/index.html\",\n        title : \"Resume Preview\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.jobResumeLinkContext\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"jobResumeLinkContext\", {\n        url : \"/resumes/:linkId/:contextId\",\n        templateUrl : \"app/pages/job-resume-preview/templates/index.html\",\n        title : \"Resume Preview\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.jobs\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n\n    var loggedInUser = null;\n    if (sessionStorage.loggedInUser) {\n      loggedInUser = angular.fromJson(sessionStorage.loggedInUser);\n    } else {\n      loggedInUser = angular.fromJson(localStorage.loggedInUser);\n    }\n    var canAccess = loggedInUser != null ? loggedInUser.userRole == \"ADMIN\" || loggedInUser.userRole == \"OPS\" : false;\n    $stateProvider\n\n      // HOME STATES AND NESTED VIEWS ========================================\n      .state(\"jobs\", {\n        url : \"/jobs\",\n        templateUrl : \"app/pages/jobs/templates/jobs.html\",\n        title : \"Jobs\",\n        shown : canAccess,\n        sidebarMeta : {\n          icon : \"fa fa-list\",\n          order : 4,\n        }\n      })\n      //\n      // // ABOUT PAGE AND MULTIPLE NAMED VIEWS =================================\n      .state(\"viewJob\", {\n        url : \"/viewJob\",\n        templateUrl : \"app/pages/jobs/templates/view_job.html\",\n        title : \"Job Details\"\n      });\n    //\n    $stateProvider\n      .state(\"activateJob\", {\n        url : \"/activateJob\",\n        templateUrl : \"app/pages/jobs/templates/activateJobFromMail.html\",\n        controller : \"JobsCtrl\"\n      });\n  }\n\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.jobList\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"jobList\", {\n        url : \"/jobs-list\",\n        templateUrl : \"app/pages/list-jobs/templates/index.html\",\n        title : \"Job List\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.resumeListing\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"resumesList\", {\n        url : \"/resumes-list\",\n        templateUrl : \"app/pages/list-resumes/templates/index.html\",\n        title : \"Resumes List\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.notifications', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('notifications', {\n          url: '/notifications',\n          templateUrl: 'app/pages/notifications/templates/notifications.html',\n          title: 'Notifications',\n          sidebarMeta: {\n            icon: 'fa fa-bell',\n            order: 7,\n          },\n        });\n  }\n\n})();\n\n(function () {\n    'use strict';\n\n    angular.module('MyCvTracker.pages.notes', [])\n        .config(routeConfig);\n\n    /** @ngInject */\n    function routeConfig($stateProvider) {\n\n        $stateProvider\n\n            .state('notes', {\n                url: '/notes',\n                templateUrl: 'app/pages/notes/templates/notes.html',\n                title: 'Notes',\n                sidebarMeta: {\n                    icon: 'fa fa-pencil',\n                    order: 3,\n                }\n            });\n    }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.payment', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('payment', {\n          url: '/payment',\n          templateUrl: 'app/pages/payment/templates/payment.html',\n          title: 'Payment',\n          shown: false,\n          requiresPermission:true,\n            sidebarMeta: {\n            icon: 'fa fa-money',\n            order: 800,\n          },\n        });\n\n      $stateProvider\n          .state('paymentSuccess', {\n              url: '/paymentSuccess',\n              templateUrl: 'app/pages/payment/templates/paymentSuccess.html',\n              controller: 'PaymentCtrl'\n          });\n  }\n\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.questions\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"interviewQuestions\", {\n        url : \"/question-data\",\n        templateUrl : \"app/pages/questions/templates/index.html\",\n        title : \"Question Data\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n\n    $stateProvider\n      .state(\"interviewQuestionsAssign\", {\n        url : \"/assign-interview\",\n        templateUrl : \"app/pages/questions/templates/assignInterview.html\",\n        title : \"Assign Interview Data\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 7,\n        },\n      });\n\n    $stateProvider\n          .state(\"interviewQuestionsAdd\", {\n            url : \"/question-add\",\n            templateUrl : \"app/pages/questions/templates/addQuestion.html\",\n            title : \"Add Question Data\",\n            sidebarMeta : {\n              icon : \"fa fa-book\",\n              order : 6,\n            },\n          });\n    }\n})();\n\n\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.referral\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"referral\", {\n        url : \"/referral\",\n        templateUrl : \"app/pages/referral/templates/referral-links.html\",\n        title : \"Referral\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.referredResumes\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"referredResumes\", {\n        url : \"/referred-resumes\",\n        templateUrl : \"app/pages/referred-resumes/templates/index.html\",\n        title : \"Referred Resumes\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.resumes', [])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n        .state('resumes', {\n          url: '/resumes',\n          templateUrl: 'app/pages/resumes/templates/resumes.html',\n          title: 'My Resumes',\n          sidebarMeta: {\n            icon: 'fa fa-book',\n            order: 5,\n          },\n        });\n  }\n\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.targetResumeDetail\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"targetResumeDetail\", {\n        url : \"/target-resume-detail\",\n        templateUrl : \"app/pages/target-resume-detail/templates/index.html\",\n        title : \"Resume\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.socialRegistrations\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"socialRegistrations\", {\n        url : \"/social-registrations\",\n        templateUrl : \"app/pages/social-registrations/templates/index.html\",\n        title : \"Social Registrations\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.pages.trackResume', ['ng.ckeditor', 'LocalStorageModule'])\n      .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider,localStorageServiceProvider) {\n      localStorageServiceProvider.setPrefix('trackResumeForm');\n    $stateProvider\n        .state('trackResume', {\n          url: '/trackResume',\n          templateUrl: 'app/pages/trackResume/templates/trackResume.html',\n          title: 'Track Resume',\n          sidebarMeta: {\n            icon: 'fa fa-location-arrow',\n            order: 6,\n          },\n        });\n  }\n\n})();\n\n(function () {\n  \"use strict\";\n\n  angular.module(\"MyCvTracker.pages.userManagement\", [])\n    .config(routeConfig);\n\n  /** @ngInject */\n  function routeConfig($stateProvider) {\n    $stateProvider\n      .state(\"user-management\", {\n        url : \"/user-management\",\n        templateUrl : \"app/pages/user-management/templates/index.html\",\n        title : \"User Management\",\n        sidebarMeta : {\n          icon : \"fa fa-book\",\n          order : 5,\n        },\n      });\n  }\n\n})();\n\n/**\n * @author v.lugovksy\n * created on 15.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .config(toastrLibConfig);\n\n  /** @ngInject */\n  function toastrLibConfig(toastrConfig) {\n    angular.extend(toastrConfig, {\n      closeButton: true,\n      closeHtml: '<button>&times;</button>',\n      timeOut: 5000,\n      autoDismiss: false,\n      containerId: 'toast-container',\n      maxOpened: 0,\n      newestOnTop: true,\n      positionClass: 'toast-top-right',\n      preventDuplicates: false,\n      preventOpenDuplicates: false,\n      target: 'body'\n    });\n  }\n})();\n/**\n * Change top \"Daily Downloads\", \"Active Users\" values with animation effect\n */\n(function () {\n    'use strict';\n\n    angular.module('MyCvTracker.theme')\n        .directive('loading', loading);\n\n    /** @ngInject */\n    function loading($http) {\n        return {\n            restrict: 'A',\n            link: function (scope, elm, attrs)\n            {\n                scope.isLoading = function () {\n                    return $http.pendingRequests.length > 0;\n                };\n\n                scope.$watch(scope.isLoading, function (v)\n                {\n                    if(v){\n                        elm.show();\n                    }else{\n                        elm.hide();\n                    }\n                });\n            }\n        };\n    }\n\n})();\n/**\n * Change top \"Daily Downloads\", \"Active Users\" values with animation effect\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('animatedChange', animatedChange);\n\n  /** @ngInject */\n  function animatedChange($timeout) {\n    return {\n      link: function (scope, element) {\n        $timeout(function () {\n          var newValue = element.attr('new-value');\n          var oldvalue = parseInt(element.html());\n\n          function changeValue(val) {\n            $timeout(function () {\n              element.html(val);\n            }, 30);\n          }\n\n          if (newValue > oldvalue) {\n            for (var i = oldvalue; i <= newValue; i++) {\n              changeValue(i);\n            }\n          } else {\n            for (var j = oldvalue; j >= newValue; j--) {\n              changeValue(j);\n            }\n          }\n          $timeout(function () {\n            element.next().find('i').addClass('show-arr');\n          }, 500);\n        }, 3500);\n      }\n    };\n  }\n\n})();\n/**\n * Auto expand textarea field\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('autoExpand', autoExpand);\n\n  /** @ngInject */\n  function autoExpand() {\n    return {\n      restrict: 'A',\n      link: function ($scope, elem) {\n        elem.bind('keydown', function ($event) {\n          var element = $event.target;\n          $(element).height(0);\n          var height = $(element)[0].scrollHeight;\n          height = (height < 16) ? 16 : height;\n          $(element).height(height);\n        });\n\n        // Expand the textarea as soon as it is added to the DOM\n        setTimeout(function () {\n          var element = elem;\n          $(element).height(0);\n          var height = $(element)[0].scrollHeight;\n          height = (height < 16) ? 16 : height;\n          $(element).height(height);\n        }, 0)\n      }\n    };\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('autoFocus', autoFocus);\n\n  /** @ngInject */\n  function autoFocus($timeout, $parse) {\n    return {\n      link: function (scope, element, attrs) {\n        var model = $parse(attrs.autoFocus);\n        scope.$watch(model, function (value) {\n          if (value === true) {\n            $timeout(function () {\n              element[0].focus();\n              element[0].select();\n            });\n          }\n        });\n        element.bind('blur', function () {\n          scope.$apply(model.assign(scope, false));\n        });\n      }\n    };\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n    .directive('formAutofillFix', formAutofillFix);\n\n  /** @ngInject */\n  function formAutofillFix() {\n    return function (scope, elem, attrs) {\n      // Fixes Chrome bug: https://groups.google.com/forum/#!topic/angular/6NlucSskQjY\n      elem.prop('method', 'POST');\n\n      // Fix autofill issues where Angular doesn't know about autofilled inputs\n      if (attrs.ngSubmit) {\n        setTimeout(function () {\n          elem.unbind('submit').submit(function (e) {\n            e.preventDefault();\n            elem.find('input, textarea, select').trigger('input').trigger('change').trigger('keydown');\n            scope.$apply(attrs.ngSubmit);\n          });\n        }, 0);\n      }\n    };\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('includeWithScope', includeWithScope);\n\n  /** @ngInject */\n  function includeWithScope() {\n    return {\n      restrict: 'AE',\n      templateUrl: function(ele, attrs) {\n        return attrs.includeWithScope;\n      }\n    };\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('ngFileSelect', ngFileSelect);\n\n  /** @ngInject */\n  function ngFileSelect() {\n    return {\n      link: function ($scope, el) {\n        el.bind('change', function (e) {\n          $scope.file = (e.srcElement || e.target).files[0];\n          $scope.getFile();\n        })\n      }\n    }\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('scrollPosition', scrollPosition);\n\n  /** @ngInject */\n  function scrollPosition() {\n    return {\n      scope: {\n        scrollPosition: '=',\n        maxHeight: '='\n      },\n      link: function (scope) {\n        $(window).on('scroll', function() {\n          var scrollTop = $(window).scrollTop() > scope.maxHeight;\n          if (scrollTop !== scope.prevScrollTop) {\n            scope.$apply(function() {\n              scope.scrollPosition = scrollTop;\n            });\n          }\n          scope.prevScrollTop = scrollTop;\n        });\n      }\n    };\n  }\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('trackWidth', trackWidth);\n\n  /** @ngInject */\n  function trackWidth() {\n    return {\n      scope: {\n        trackWidth: '=',\n        minWidth: '=',\n      },\n      link: function (scope, element) {\n        scope.trackWidth = $(element).width() < scope.minWidth;\n        scope.prevTrackWidth = scope.trackWidth;\n\n        $(window).resize(function() {\n          var trackWidth = $(element).width() < scope.minWidth;\n          if (trackWidth !== scope.prevTrackWidth) {\n            scope.$apply(function() {\n              scope.trackWidth = trackWidth;\n            });\n          }\n          scope.prevTrackWidth = trackWidth;\n        });\n      }\n    };\n  }\n\n})();\n/**\n * Animated load block\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('zoomIn', zoomIn);\n\n  /** @ngInject */\n  function zoomIn($timeout, $rootScope) {\n    return {\n      restrict: 'A',\n      link: function ($scope, elem) {\n        var delay = 1000;\n\n        if ($rootScope.$pageFinishedLoading) {\n          delay = 100;\n        }\n\n        $timeout(function () {\n          elem.removeClass('full-invisible');\n          elem.addClass('animated zoomIn');\n        }, delay);\n      }\n    };\n  }\n\n})();\n/**\n * @author n.poltoratsky\n * created on 27.06.2016\n */\n(function () {\n    'use strict';\n\n    angular.module('MyCvTracker.theme')\n        .factory('baProgressModal', baProgressModal);\n\n    /** @ngInject */\n    function baProgressModal($uibModal) {\n        var methods = {};\n        var progress = 0;\n        var max = 100;\n        var opened = false;\n\n        return {\n            setProgress: function (value) {\n                if (value > max) {\n                    throw Error('Progress can\\'t be greater than max');\n                }\n                progress = value;\n            },\n            getProgress: function () {\n                return progress;\n            },\n            open: function() {\n                if (!opened) {\n                    methods = $uibModal.open({\n                        animation: true,\n                        templateUrl: 'app/pages/ui/modals/progressModal/progressModal.html',\n                        size: 'sm',\n                        keyboard: false,\n                        backdrop: 'static'\n                    });\n                    opened = true;\n                } else {\n                    throw Error('Progress modal opened now');\n                }\n\n            },\n            close: function() {\n                if (opened) {\n                    methods.close();\n                    opened = false;\n                } else {\n                    throw Error('Progress modal is not active');\n                }\n\n            }\n        };\n    }\n\n})();\n/**\n * @author v.lugovsky\n * created on 03.05.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .service('baUtil', baUtil);\n\n  /** @ngInject */\n  function baUtil() {\n\n    this.isDescendant = function(parent, child) {\n      var node = child.parentNode;\n      while (node != null) {\n        if (node == parent) {\n          return true;\n        }\n        node = node.parentNode;\n      }\n      return false;\n    };\n\n    this.hexToRGB = function(hex, alpha) {\n      var r = parseInt( hex.slice(1,3), 16 );\n      var g = parseInt( hex.slice(3,5), 16 );\n      var b = parseInt( hex.slice(5,7), 16 );\n      return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n    };\n\n    this.hasAttr = function (elem, attrName) {\n      var attr = $(elem).attr(attrName);\n      return (typeof attr !== typeof undefined && attr !== false);\n    }\n  }\n})();\n\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .service('fileReader', fileReader);\n\n  /** @ngInject */\n  function fileReader($q) {\n    var onLoad = function(reader, deferred, scope) {\n      return function () {\n        scope.$apply(function () {\n          deferred.resolve(reader.result);\n        });\n      };\n    };\n\n    var onError = function (reader, deferred, scope) {\n      return function () {\n        scope.$apply(function () {\n          deferred.reject(reader.result);\n        });\n      };\n    };\n\n    var onProgress = function(reader, scope) {\n      return function (event) {\n        scope.$broadcast('fileProgress',\n            {\n              total: event.total,\n              loaded: event.loaded\n            });\n      };\n    };\n\n    var getReader = function(deferred, scope) {\n      var reader = new FileReader();\n      reader.onload = onLoad(reader, deferred, scope);\n      reader.onerror = onError(reader, deferred, scope);\n      reader.onprogress = onProgress(reader, scope);\n      return reader;\n    };\n\n    var readAsDataURL = function (file, scope) {\n      var deferred = $q.defer();\n\n      var reader = getReader(deferred, scope);\n      reader.readAsDataURL(file);\n\n      return deferred.promise;\n    };\n\n    return {\n      readAsDataUrl: readAsDataURL\n    };\n  }\n})();\n/**\n * @author a.demeshko\n * created on 3/1/16\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n    .service('preloader', preloader);\n\n  /** @ngInject */\n  function preloader($q) {\n    return {\n      loadImg: function (src) {\n        var d = $q.defer();\n        var img = new Image();\n        img.src = src;\n        img.onload = function(){\n          d.resolve();\n        };\n        return d.promise;\n      },\n      loadAmCharts : function(){\n        var d = $q.defer();\n        AmCharts.ready(function(){\n          d.resolve();\n        });\n        return d.promise;\n      }\n    }\n  }\n\n})();\n/**\n * @author a.demeshko\n * created on 12/21/15\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n    .service('stopableInterval', stopableInterval);\n\n  /** @ngInject */\n  function stopableInterval($window) {\n    return {\n      start: function (interval, calback, time) {\n        function startInterval() {\n          return interval(calback, time);\n        }\n\n        var i = startInterval();\n\n        angular.element($window).bind('focus', function () {\n          if (i) interval.cancel(i);\n          i = startInterval();\n        });\n\n        angular.element($window).bind('blur', function () {\n          if (i) interval.cancel(i);\n        });\n      }\n    }\n  }\n\n})();\n\n\n    angular.module('MyCvTracker.pages.account')\n\n    \t.factory('AccountSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\n                var $q = $injector.get('$q');\n                var Authorization = $injector.get('Authorization');\n                var Utilities = $injector.get('Utilities');\n\n            \treturn  {\n\n                    getUser: function () {\n                        var defered = $q.defer();\n                        var user = Authorization.getUserDetails();\n                        if ( user ) {\n                            defered.resolve(user);\n                        }\n                        else {\n                            defered.reject({status: 401});\n                        }\n                        return defered.promise;\n                    },\n\n                    saveProfileSettings: function(obj){\n                        var url = Utilities.saveProfileSettingsUrl();\n                        return RestConfig.saveProfileSettings(url, obj);\n                    },\n\n                    getUserProfileSettings: function(){\n                        var url = Utilities.getUserProfileSettingsUrl();\n                        return RestConfig.getUserProfileSettings(url);\n                    },\n\n                    unSubscribeMail: function(type){\n                        var url = Utilities.unSubscribeMailUrl()+\"?emailType=\"+type;\n                        return RestConfig.unSubscribeMail(url);\n                    },\n\n                    openUnsubscribeModal: function (scope, ctrlName) {\n\n                        var modalOpts = {\n                            templateUrl: '/app/pagesresumes/templates/warning.html',\n                            controller: ctrlName,\n                            scope: scope\n                        };\n\n                        return $injector.get('$uibModal').open(modalOpts);\n                    }\n            \t};\n            }\n        ]);\n\nangular.module(\"MyCvTracker.pages.account\")\n\n  .controller(\"AccountCtrl\", [\n    \"toastr\",\n    \"$scope\",\n    \"$injector\",\n    \"$location\",\n    \"baConfig\",\n    \"baUtil\",\n    \"Authorization\",\n\n    function (\n      toastr,\n      $scope,\n      $injector,\n      $location,\n      baConfig,\n      baUtil,\n      Authorization\n    ) {\n      var isAdmin = Authorization.getUserRole() === \"ADMIN\";\n      var isReviewer = Authorization.getUserRole() === \"REVIEWER\";\n      var isRecruiter = Authorization.getUserRole() === \"RECRUITER\";\n\n      var pieColor = baUtil.hexToRGB(baConfig.colors.defaultText, 0.2);\n      $scope.charts = [\n        {\n          color : pieColor,\n          description : \"My Notes\",\n          link : \"notes\",\n          icon : \"notes\",\n          showMenu : true\n        },\n        // {\n        //     color: pieColor,\n        //     description: 'Jobs',\n        //     link:'jobs',\n        //     icon: 'jobs',\n        //     showMenu:true\n        // },\n        {\n          color : pieColor,\n          description : \"Resume List\",\n          link : \"resumes-list\",\n          icon : \"resume\",\n          showMenu : isReviewer || isAdmin || isRecruiter\n        },\n        {\n          color : pieColor,\n          description : \"Resume Folder\",\n          link : \"bulk-folder-resumes\",\n          icon : \"resume\",\n          showMenu : isReviewer || isAdmin || isRecruiter\n        },\n        {\n          color : pieColor,\n          description : \"Resume Management\",\n          link : \"resumes\",\n          icon : \"resume\",\n          showMenu : true\n        },\n        {\n          color : pieColor,\n          description : \"Referral\",\n          link : \"referral\",\n          icon : \"resume\",\n          showMenu : isReviewer || isAdmin || isRecruiter\n        },\n        {\n          color : pieColor,\n          description : \"Group Data\",\n          link : \"groupdata\",\n          icon : \"groupdata\",\n          showMenu : (isAdmin || isReviewer)\n        },\n        {\n          color : pieColor,\n          description : \"Track Resume\",\n          link : \"trackResume\",\n          icon : \"trackResume\",\n          showMenu : false\n        },\n        {\n          color : pieColor,\n          description : \"Notifications\",\n          link : \"notifications\",\n          icon : \"notification\",\n          showMenu : true\n        },\n        {\n          color : pieColor,\n          description : \"User Management\",\n          link : \"user-management\",\n          icon : \"resume\",\n          showMenu : isAdmin\n        },\n        {\n          color : pieColor,\n          description : \"CV Marketing Notes\",\n          link : \"CampaignNotes\",\n          icon : \"notes\",\n          showMenu : Authorization.getUserRole() == \"ADMIN\"\n        },\n        {\n          color : pieColor,\n          description : \"CV Marketing\",\n          link : \"CvMarketing\",\n          icon : \"marketing\",\n          showMenu : Authorization.getUserRole() == \"ADMIN\"\n        },\n        {\n          color : pieColor,\n          description : \"CV Marketing Notifications\",\n          link : \"CampaignNotifications\",\n          icon : \"notification\",\n          showMenu : Authorization.getUserRole() == \"ADMIN\"\n        },\n        {\n          color : pieColor,\n          description : \"Categories & Skills\",\n          link : \"skill-category-list\",\n          icon : \"resume\",\n          showMenu : isReviewer || isAdmin\n        },\n        {\n          color : pieColor,\n          description : \"Settings\",\n          link : \"settings\",\n          icon : \"settings\",\n          showMenu : true\n        }\n      ];\n\n      var AuthSvc = $injector.get(\"AuthSvc\");\n      var Utilities = $injector.get(\"Utilities\");\n      var AccountSvc = $injector.get(\"AccountSvc\");\n      var PaymentSvc = $injector.get(\"PaymentSvc\");\n\n      $scope.user = Authorization.getUserDetails();\n\n      $scope.adminFeatures = [];\n\n      $scope.settings = {\n        emailSubscribes : [],\n        tracking : false,\n        notification : false,\n        subject : \"hello\",\n        content : \"I am looking for new role\",\n        firstName : \"\",\n        lastName : \"\",\n        emailAddress : \"\"\n      };\n\n      $scope.getUserProfileSettings = function () {\n\n        AccountSvc.getUserProfileSettings()\n          .then(\n            function (response) {\n              $scope.settings.emailSubscribes = response.emailSubscribes;\n              $scope.settings.trackingMode = response.trackingMode;\n              $scope.settings.firstName = response.firstName;\n              $scope.settings.lastName = response.lastName;\n              $scope.settings.emailAddress = response.emailAddress;\n\n              angular.forEach($scope.settings.emailSubscribes, function (state) {\n                if (state.emailType === \"tracking\") {\n                  $scope.settings.tracking = state.subscribe;\n                } else {\n                  $scope.settings.notification = state.subscribe;\n                }\n              });\n            },\n            function (response) {\n              toastr.error(Utilities.getAlerts(response.status).message);\n            }\n          );\n      };\n\n      $scope.redirectToProfilePage = function () {\n        var currentUrl = window.location.href;\n        $location.path(\"/account\");\n        var emailType = null;\n        if (currentUrl.indexOf(\"accountFromTrackingMail\") > -1) {\n          emailType = \"tracking\";\n        } else {\n          emailType = \"notification\";\n        }\n\n        AccountSvc.unSubscribeMail(emailType)\n          .then(\n            function () {\n\n              toastr.error(Utilities.getAlerts(\"unsubscribeSucess\").message);\n            },\n            function (response) {\n              toastr.error(Utilities.getAlerts(response.status).message);\n\n            }\n          );\n      };\n\n      $scope.menuClick = function (menu) {\n        if (menu == \"cvMarketingNotes\") {\n          $scope.cvMarketingNotes();\n        }\n        if (menu == \"cvMarketing\") {\n          $scope.cvMarketing();\n        }\n        if (menu == \"cvMarketingNotifications\") {\n          $scope.cvMarketingNotifications();\n        }\n        if (menu == \"settingsPage\") {\n          $scope.settingsPage();\n        }\n      };\n\n      $scope.searchJob = function () {\n        Utilities.gotoJobPage();\n      };\n\n      $scope.notes = function () {\n        Utilities.gotoNotesPage();\n      };\n\n      $scope.myResumes = function () {\n        Utilities.gotoMyResumesPage();\n      };\n\n      $scope.jobs = function () {\n        Utilities.gotoJobPage();\n      };\n\n      $scope.trackResume = function () {\n        Utilities.gotoTrackResumePage();\n      };\n\n      $scope.notifications = function () {\n        Utilities.gotoNotificationsPage();\n      };\n\n      $scope.cvMarketing = function () {\n        Utilities.gotoCVMarketingPage();\n      };\n      $scope.cvMarketingNotes = function () {\n        Utilities.gotoCampaignNotesPage();\n      };\n\n      $scope.cvMarketingNotifications = function () {\n        Utilities.gotoCampaignNotificationsPage();\n      };\n\n      $scope.settingsPage = function () {\n        Utilities.gotoSettingsPage();\n      };\n\n      $scope.newSkill = function () {\n\n        $scope.skillLevel = 0;\n        $scope.skillType = \"\";\n      };\n\n      $scope.saveForm = function (model) {\n\n        angular.forEach(model.emailSubscribes, function (state) {\n          if (state.emailType == \"tracking\") {\n            state.subscribe = model.tracking;\n          } else {\n            state.subscribe = model.notification;\n          }\n        });\n        AccountSvc.saveProfileSettings(model)\n          .then(\n            function () {\n              toastr.success(Utilities.getAlerts(\"profileSaveSucess\").message);\n              Utilities.gotoProfilePage();\n\n            },\n            function (response) {\n              toastr.error(Utilities.getAlerts(response.status).message);\n\n            }\n          );\n      };\n\n      $scope.cancelForm = function () {\n        Utilities.gotoProfilePage();\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.bulkFolderResumes\")\n\n  .controller(\"BulkFolderResumeCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization\n    ) {\n      var mainSvc = $injector.get(\"BulkFolderResumeService\");\n      var utilities = $injector.get(\"Utilities\");\n      var userDetail = Authorization.getUserDetails();\n      var userId = userDetail.id;\n\n      $scope.resumes = [];\n      $scope.bulkFolderModal = null;\n      $scope.uploading = false;\n      $scope.uploadForm = {\n        resumeFile : null,\n        resumeFiles : [],\n        errorMap : {},\n        invalidSize : false,\n        invalidType : false,\n        uploaded : false\n      }\n\n      $scope.listFolderResumes = function() {\n        mainSvc.listResumes().then(function(data) {\n          $scope.resumes = data;\n        });\n      }\n\n      $scope.openNewResumeModal = function() {\n        $scope.bulkFolderModal = mainSvc.getUploadModal($scope, \"BulkFolderResumeModalCtrl\");\n      }\n\n      var noOfUploading = 0;\n      var noOfUploaded = 0;\n      function onFileUploaded(name, err) {\n        console.log(\"error\", name, err);\n        $scope.uploadForm.errorMap[name] = err;\n        noOfUploaded++;\n        console.log(\"noOfUploading\", noOfUploading);\n        console.log(\"noOfUploaded\", noOfUploaded);\n        if (noOfUploading === noOfUploaded) {\n          console.log(\"uploaded ne\");\n          $scope.listFolderResumes();\n          $scope.uploading = false;\n          $scope.uploadForm.uploaded = true;\n        }\n      }\n\n      function callUploadingApi(rFile) {\n        var rName = rFile.name;\n        mainSvc.uploadResumeToFolder(rFile).then(function(data) {\n          onFileUploaded(rName, null);\n        }).catch(function(err) {\n          var msg = \"Uploading resume has failed!\"\n          var rp = err.response;\n          if (!!rp && !!rp.message) {\n            msg = rp.message;\n          }\n          onFileUploaded(rName, msg);\n        });\n      }\n\n      $scope.uploadResume = function() {\n        var rFiles = $scope.uploadForm.resumeFiles;\n        noOfUploading = rFiles.length;\n        if (noOfUploading === 0) {\n          return;\n        }\n\n        if ($scope.uploading) return;\n        $scope.uploading = true;\n        $scope.uploadForm.uploaded = false;\n        noOfUploaded = 0;\n\n        for (var k = 0; k < noOfUploading; k++) {\n          callUploadingApi(rFiles[k])\n        }\n      }\n\n      $scope.closeModal = function() {\n        $scope.bulkFolderModal.dismiss();\n        $scope.uploadForm.resumeFiles = [];\n        $scope.uploadForm.errorMap = {};\n        $scope.uploadForm.invalidSize = false;\n        $scope.uploadForm.invalidType = false;\n        $scope.uploadForm.uploaded = false;\n        $scope.uploading = false;\n      }\n\n      $scope.getDownloadLink = function(name) {\n        return Constants.baseUrl + '/user/bulk-folder/download/' + userId + '/' + name;\n      }\n\n      $scope.getFormattedPostDate = function (utc) {\n        if (!!utc) {\n          var dateObj = new Date(utc);\n\n          var date = dateObj.getDate();\n          date = date < 10 ? (\"0\" + date) : (\"\" + date);\n          var month = dateObj.getMonth();\n          month = month < 10 ? (\"0\" + month) : (\"\" + month);\n          var hour = dateObj.getHours();\n          hour = hour < 10 ? (\"0\" + hour) : (\"\" + hour);\n          var minutes = dateObj.getMinutes();\n          minutes = minutes < 10 ? (\"0\" + minutes) : (\"\" + minutes);\n          return date + \"/\" + month + \"/\" + dateObj.getFullYear() + \" \" + hour + \":\" + minutes;\n        }\n\n        return \"\";\n      };\n\n      function init() {\n        $scope.listFolderResumes();\n      }\n\n      init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.bulkFolderResumes\")\n  .controller(\"BulkFolderResumeModalCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.bulkFolderResumes\")\n  .directive(\"resumeFileModel\", [\n    \"$parse\",\n    \"$injector\",\n    \"Constants\",\n    function (\n      $parse,\n      $injector,\n      Constants\n    ) {\n      return {\n        restrict : \"A\",\n        link : function (\n          scope,\n          element,\n          attrs\n        ) {\n          var model = $parse(attrs.resumeFileModel);\n          var modelSetter = model.assign;\n          var Utilities = $injector.get(\"Utilities\");\n\n          element.bind(\"change\", function () {\n            scope.$apply(function () {\n              scope.uploadForm.errorMap = {};\n              scope.uploadForm.invalidSize = false;\n              scope.uploadForm.invalidType = false;\n              scope.uploadForm.resumeFiles = [];\n              scope.uploadForm.uploaded = false;\n\n              var files = element[0].files;\n              if (files.size > 10) return;\n\n              var invalidSize = false;\n              var invalidType = false;\n              for (var i = 0, len = files.length; i < len; i++) {\n                var validExts = [\n                  \"application/pdf\",\n                  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                ];\n                var fileType = files[i].type;\n\n                invalidSize = files[i].size > 5000000;\n                invalidType = validExts.indexOf(fileType) < 0;\n\n                if (invalidSize || invalidType) {\n                  break;\n                }\n              }\n\n              scope.uploadForm.invalidSize = invalidSize;\n              scope.uploadForm.invalidType = invalidType;\n              if (!invalidSize && !invalidType) {\n                modelSetter(scope, element[0].files);\n              }\n\n              // scope.uploadForm.invalidSize = false;\n              // scope.uploadForm.invalidType = false;\n              // var file = scope.myFile;\n              // var validExts = [\n              //   \"application/pdf\",\n              //   \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n              // ];\n              // var fileExt = file.type;\n              // var input = $(\"#fileUpload\");\n              // if (validExts.indexOf(fileExt) < 0) {\n              //   scope.addAlert(Utilities.getAlerts(\"InputFileInputTypeValidation\"));\n              //   scope.resumeFile = null;\n              //   return false;\n              // }\n              //\n              // if (file.size >= Constants.fileUpload.fileSizeLimitInByte) {\n              //   scope.addAlert(Utilities.getAlerts(\"InputFileInputSizeValidation\"));\n              //   scope.resumeFile = null;\n              //   return false;\n              // }\n            });\n          });\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.bulkFolderResumes\")\n  .factory(\"BulkFolderResumeService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    \"Constants\",\n    function (\n      toastr,\n      RestConfig,\n      $injector,\n      Constants\n    ) {\n\n      return {\n        listResumes : function () {\n          return RestConfig.getBulkFolderResumes();\n        },\n        uploadResumeToFolder : function(file) {\n          return RestConfig.uploadFolderResume(file);\n        },\n        getUploadModal : function(scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/bulk-folder-resume/templates/upload-resume-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        }\n      };\n    }\n  ]);\n\n\n\n    angular.module('MyCvTracker.pages.CampaignNotes')\n\n    \t.factory('CampaignNotesSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\n                var Utilities = $injector.get('Utilities');\n\n            \treturn  {\n\n\t\t\t\t\tgetEditNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/edit_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetDeleteNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/delete_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetViewNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/view_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n            \t\tgetMyNotes: function (userId) {\n\n            \t\t\tvar url = Utilities.getMyCampaignNotesUrl();\n            \t\t\treturn  RestConfig.getMyNotes(url);\n            \t\t},\n\n\t\t\t\t\tviewMyNotes: function (noteId) {\n\n\t\t\t\t\t\tvar url = Utilities.viewMyCampaignNotesUrl() +\"?id=\" + noteId;\n\t\t\t\t\t\treturn  RestConfig.getMyNotes(url);\n\t\t\t\t\t},\n\n                    bulkUpdateNotes: function (requestOb) {\n                        var url = Utilities.bulkCampaignNotesUrl();\n                        return RestConfig.bulkUpdateNotes(url, requestOb);\n                    },\n\n\t\t\t\t\tsaveMyNotes: function (requestOb) {\n\n\t\t\t\t\t\tvar url = Utilities.getEditCampaignNotesUrl();\n\t\t\t\t\t\treturn RestConfig.saveNotesRequest(url, requestOb);\n\t\t\t\t\t}\n            \t}; \n            }\n        ]);\n\n\tangular.module('MyCvTracker.pages.CampaignNotes')\n\t  \t\t.controller('CampaignNotesCtrl', ['toastr', '$scope', '$injector', '$http', '$filter','$window',\n\n\t\t\tfunction (toastr, $scope, $injector, $http, $filter,$window) {\n\n\t\t\t\tvar Utilities = $injector.get('Utilities');\n\t\t\t\tvar NotesSvc = $injector.get('CampaignNotesSvc');\n\t\t\t\tvar AccountSvc = $injector.get('AccountSvc');\n\t\t\t\tvar NotificationsSvc = $injector.get('CampaignNotificationsSvc');\n\n\t\t\t\t//$scope.notesModal = {};\n\t\t\t\t//Used scopes\n\t\t\t\t$scope.user = {\n\t\t\t\t\tmyNotes: [],\n\t\t\t\t\tmyCampaigns : []\n\t\t\t\t};\n\n\t\t\t\t/////////////////////////////////////////////////////////////////////////////////////\n\t\t\t\t//open edit Notes Model Function\n\t\t\t\t$scope.editNotesModel = function (note) {\n\n\t\t\t\t\t$scope.note = note;\n\t\t\t\t\t$scope.notesModal = NotesSvc.getEditNotesModal($scope, 'CampaignNotesCtrl');\n\t\t\t\t};\n\n\t\t\t\t$scope.saveNote = function () {\n\n\t\t\t\t\tvar userId = $scope.user.id;\n\t\t\t\t\tvar notes = $scope.note;\n\n\t\t\t\t\t$scope.saveMyNotes(userId,notes);\n\n\t\t\t\t};\n\n\t\t\t\t//Listing Notifications Function\n\t\t\t\t$scope.getMyCampaigns = function () {\n\n\t\t\t\t\t$scope.user.myCampaigns = [];\n\n\t\t\t\t\tNotificationsSvc.getMyCampaigns().then(\n\n\t\t\t\t\t\tfunction (campaignsData) {\n\n\t\t\t\t\t\t\tcampaignsData.forEach(function (campaigns) {\n\t\t\t\t\t\t\t\t$scope.user.myCampaigns.push(campaigns);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.saveMyNotes = function(userId,notes){\n\n\t\t\t\t\tNotesSvc.saveMyNotes(requestModel).then(\n\t\t\t\t\t\tfunction (myNotesData) {\n\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('resumeTrackRequestSuccess'));\n\t\t\t\t\t\t\tUtilities.gotoProfilePage();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t//Close the resume model function\n\t\t\t\t$scope.closeModal = function () {\n\n\t\t\t\t\t$scope.notesModal.dismiss();\n\t\t\t\t\tUtilities.gotoCampaignNotesPage();\n\t\t\t\t\t$scope.recruiter=null;\n\t\t\t\t\t$scope.id=null;\n\t\t\t\t\t$scope.agency=null;\n\t\t\t\t\t$scope.createdDate=null;\n\t\t\t\t\t$scope.note=null;\n\n\n\t\t\t\t};\n\n\t\t\t\t//Close the resume model function\n\t\t\t\t$scope.closeDeleteNoteModal = function () {\n\t\t\t\t\t$scope.deleteNotesModal.dismiss();\n\t\t\t\t};\n\n\t\t\t\t$scope.getMyNotes = function () {\n\n\t\t\t\t\t$scope.user.myNotes = [];\n\n\t\t\t\t\tNotesSvc.getMyNotes().then(\n\n\t\t\t\t\t\tfunction (notesData) {\n\t\t\t\t\t\t\tnotesData.forEach(function (note) {\n\t\t\t\t\t\t\t\tnote.createdDate = $filter('date')(new Date(note.createdDate), 'EEE,MMM dd yyyy HH:mm:ss');\n\t\t\t\t\t\t\t\t$scope.user.myNotes.push(note);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.viewNotesModel = function (noteId, index) {\n\n\t\t\t\t\t$scope.user.viewNotes = [];\n\t\t\t\t\t$scope.noteId = noteId;\n\t\t\t\t\t$scope.index = index;\n\n\t\t\t\t\tNotesSvc.viewMyNotes(noteId).then(\n\n\t\t\t\t\t\tfunction (notesData) {\n\t\t\t\t\t\t\t$scope.notesContent = notesData.content;\n\t\t\t\t\t\t\t$scope.viewNotesModal = NotesSvc.getViewNotesModal($scope, 'CampaignNotesCtrl');\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t//Close the resume model function\n\t\t\t\t$scope.closeViewNoteModal = function () {\n\t\t\t\t\t$scope.viewNotesModal.dismiss();\n\t\t\t\t};\n\n\t\t\t\t$scope.postRequest = function (notesForm, notesModel) {\n\n\t\t\t\t\tif (notesForm.$valid ) {\n\n\t\t\t\t\t\tnotesModel.userId = $scope.note.userId;\n\t\t\t\t\t\tnotesModel.createdDate = new Date();\n\n\t\t\t\t\t\tNotesSvc.saveMyNotes(notesModel).then(\n\n\t\t\t\t\t\t\tfunction (notesData) {\n\t\t\t\t\t\t\t\t$scope.notesModal.dismiss();\n\t\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('resumeTrackRequestSuccess'));\n\t\t\t\t\t\t\t\tUtilities.gotoCampaignNotesPage();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t//deleting Notes Function\n\t\t\t\t$scope.deleteNotes = function (noteId, index) {\n\t\t\t\t\t$scope.noteId = noteId;\n\t\t\t\t\t$scope.index = index;\n\t\t\t\t\t$scope.deleteNotesModal = NotesSvc.getDeleteNotesModal($scope, 'CampaignNotesCtrl');\n\t\t\t\t};\n\n\t\t\t\t//deleting Notes Function\n\t\t\t\t$scope.deleteConfirmNotes = function (noteId, index) {\n\n\t\t\t\t\t$scope.closeDeleteNoteModal();\n\t\t\t\t\tvar url = Utilities.getDeleteCampaignNotesUrl() + \"?id=\" + noteId;\n\t\t\t\t\t$http.delete(url, {\n\t\t\t\t\t\ttransformRequest: angular.identity,\n\t\t\t\t\t\theaders: {'Content-Type': undefined}\n\t\t\t\t\t})\n\t\t\t\t\t.success(function (data, status, headers, config) {\n\t\t\t\t\t\tconsole.debug(data + '  ' + status + ' ' + headers + '  ' + config);\n\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('deleteNotesSuccess'));\n\t\t\t\t\t\t$scope.user.myNotes.splice(index, 1);\n\n\t\t\t\t\t\t/*//new code edited\n\t\t\t\t\t\tangular.forEach($scope.user.myNotes, function(obj, i) {\n\t\t\t\t\t\t\tif(noteId==obj.id){\n\t\t\t\t\t\t\t\t$scope.user.myNotes.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});*/\n\n\t\t\t\t\t\t//$scope.getMyNotes();\n\t\t\t\t\t\tdocument.location.reload(true);\n\n\t\t\t\t\t})\n\t\t\t\t\t.error(function (data, status, headers, config) {\n\t\t\t\t\t\t$scope.closeDeleteNoteModal();\n\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('defaultError'));\n\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t// edit Notes Function\n\n\t\t\t\t$scope.init = function () {\n\t\t\t\t\t$scope.getMyNotes();\n\t\t\t\t\t$scope.getMyCampaigns();\n\t\t\t\t};\n\n\t\t\t\t$scope.init();\n\t\t\t}\n\t\t]);\n\n    angular.module('MyCvTracker.pages.auth')\n\n        .controller('AuthCtrl', ['$scope','$location','$http','$injector','$uibModal','Utilities','$rootScope','$auth','$window','$state','AuthSvc','baSidebarService',\n\n            function ($scope,$location,$http,$injector,$uibModal,Utilities,$rootScope,$auth,$window,$state,AuthSvc,baSidebarService) {\n\n            $scope.loginModal = $rootScope.loginModal;\n                $scope.user = {\n                    register: {\n                        firstName: '',\n                        lastName: '',\n                        email: '',\n                        password: '',\n                        confirmPassword: ''\n                    },\n                        login: {\n                        email: '',\n                        password: '',\n                        rememberme: ''\n                    },\n                    resetPassword: {\n                        newPwd1: '',\n                        newPwd2: '',\n                    },\n                    userName: ''\n                };\n\n                $scope.register = function (registerModel, registerForm) {\n\n                    var activationKey = Utilities.getParameters().key;\n                    if (registerForm.$valid) {\n                        if ($scope.user.register.password == $scope.user.register.confirmPassword) {\n                            $(\"#btn-register\").html('Signing up');\n                            $auth.signup(registerModel)\n                                .then(function (response) {\n                                    Utilities.showSuccessMsg(Utilities.getAlerts('regsitrationSuccess').message);\n                                    if ($scope.loginModal) {\n                                        $scope.$close();\n                                        $rootScope.loginModal = false;\n                                        $scope.loginModal = false;\n                                    }\n                                    $state.go(\"login\");\n                                    $(\"#btn-register\").html('Sign up');\n                                })\n                                .catch(function (response) {\n                                    Utilities.showErrorMsg(Utilities.getAlerts(response.status));\n                                    $(\"#btn-register\").html('Sign up');\n                                });\n                        } else {\n                            Utilities.showErrorMsg(Utilities.getAlerts('confirmPasswordErorr').message);\n                        }\n                    }\n                };\n\n                $scope.login = function () {\n\n                    $(\"#btn-login\").html('Signing in');\n\n                    if($scope.user.login.rememberme){\n                        $auth.setStorageType('localStorage');\n                    }else {\n                        $auth.setStorageType('sessionStorage');\n                    }\n                    $auth.login($scope.user.login)\n                        .then(function(response) {\n                            var user = angular.toJson(response.data.user);\n                            if(!$scope.user.login.rememberme){\n                                $window.sessionStorage.loggedInUser = user;\n                            }else {\n                                $window.localStorage.loggedInUser = user;\n                            }\n                            $rootScope.loggedInUser = response.data.user;\n                            $rootScope.$isAuthenticated = $auth.isAuthenticated();\n                            Utilities.showSuccessMsg(\"Login is Successful\");\n                            if($scope.loginModal){\n                                $scope.$close();\n                                $rootScope.loginModal=false;\n                                $scope.loginModal = false;\n                            }\n\n                            var params = $location.search();\n                            var redirectUrl = params.redirect;\n                            if (!!redirectUrl) {\n                                $location.url(redirectUrl);\n                            } else {\n                                $location.url(\"/account\");\n                            }\n                            // var url = !!redirectUrl ? redirectUrl : \"/account\";\n\n                            //var baseURL = Utilities.baseUrl()+'?fromLogin';\n                            //setTimeout(function(){location.href=baseURL} , 5000);\n                        })\n                        .catch(function(response) {\n                            $(\"#error\").html('<div class=\"alert alert-danger\"> <span class=\"glyphicon glyphicon-info-sign\"></span> &nbsp; '+response+' !</div>');\n                            Utilities.showErrorMsg(response.message);\n                            $(\"#btn-login\").html('Sign in');\n                        });\n                };\n\n                $scope.authenticate = function(provider) {\n                    $auth.authenticate(provider);\n                };\n\n                $scope.logout = function () {\n                    AuthSvc.doLogout().then(function (response) {\n                        $auth.logout();\n                        if(sessionStorage.loggedInUser){\n                            sessionStorage.removeItem('loggedInUser');\n                        }else {\n                            localStorage.removeItem('loggedInUser');\n                        }\n                        $rootScope.loggedInUser = null;\n                        $rootScope.$isAuthenticated = $auth.isAuthenticated();\n                        baSidebarService.setMenuCollapsed(true);\n                        $state.go(\"login\");\n                    });\n                }\n\n                $scope.openForgetPasswordModal = function () {\n                    $scope.modalInstance = $uibModal.open({\n                        animation: true,\n                        templateUrl: 'app/pages/auth/templates/forgot_password.html',\n                        restrict: 'E',\n                        component:'forgetPasswordModal',\n                        size: 'sm',\n                        controller:'AuthCtrl',\n                        resolve: {\n                            items: function () {\n                                return $scope.items;\n                            }\n                        }\n                    });\n                };\n\n                $scope.forgotPasswordSubmit = function (userModel, userForm) {\n\n                    if ( userForm.$valid ) {\n\n                        AuthSvc.forgotPassword(userModel.userName).then(\n\n                            function (userData) {\n                                Utilities.showSuccessMsg(Utilities.getAlerts('forgotPasswordSuccess').message);\n                                $scope.$close();\n                            },\n\n                            function (response) {\n                                Utilities.showErrorMsg(Utilities.getAlerts(response.status).message);\n                                $scope.$close();\n\n                            }\n                        );\n                    }\n                };\n\n                $scope.resetPassword = function ($pwd1, $pwd, resetForm) {\n\n                    var activationKey = Utilities.getParameters().key;\n                    if (resetForm.$valid) {\n                        if ($scope.user.resetPassword.newPwd1 == $scope.user.resetPassword.newPwd2) {\n                            $scope.resetPassword = {\n                                password: $scope.user.resetPassword.newPwd1,\n                                activationKey: activationKey,\n                            }\n                            AuthSvc.resetNewPassword($scope.resetPassword).then(\n                                function (data) {\n                                    Utilities.showSuccessMsg(Utilities.getAlerts('resetPasswordSuccess').message);\n                                    $state.go(\"login\");\n                                },\n\n                                function (response) {\n                                    Utilities.showErrorMsg(Utilities.getAlerts(response.status));\n                                }\n                            );\n                        }else{\n                            Utilities.showErrorMsg(Utilities.getAlerts('confirmPasswordErorr').message);\n                        }\n                    }\n                };\n\n                $scope.resetPasswordAndActivate = function ($pwd1, $pwd, resetForm) {\n\n                    var activationKey = Utilities.getParameters().key;\n                    if (resetForm.$valid) {\n                        if ($scope.user.resetPassword.newPwd1 == $scope.user.resetPassword.newPwd2) {\n                            $scope.resetPassword = {\n                                password: $scope.user.resetPassword.newPwd1,\n                                activationKey: activationKey,\n                            }\n                            AuthSvc.resetPasswordAndActivate($scope.resetPassword).then(\n                                function (data) {\n                                    Utilities.showSuccessMsg(Utilities.getAlerts('resetPasswordSuccess').message);\n                                    $state.go(\"login\");\n                                },\n\n                                function (response) {\n                                    Utilities.showErrorMsg(Utilities.getAlerts(response.status));\n                                }\n                            );\n                        }else{\n                            Utilities.showErrorMsg(Utilities.getAlerts('confirmPasswordErorr').message);\n                        }\n                    }\n                };\n\n                $scope.activate = function () {\n                    var key = Utilities.getParameters().key;\n                    if (key) {\n                        AuthSvc.doActivate(key).then(function() {\n                            Utilities.showSuccessMsg(Utilities.getAlerts('activateSuccess').message);\n                            $state.go(\"login\");\n                        }, function (response) {\n                            Utilities.showErrorMsg(Utilities.getAlerts(response.status).message);\n                            $state.go(\"login\");\n                        });\n                    }\n                };\n            }\n        ]);\n\n\t\n    angular.module('MyCvTracker.pages.auth')\n\n    \t.factory('AuthSvc', ['$rootScope', 'RestConfig', '$injector','$http','$uibModal',\n\n            function ($rootScope, RestConfig, $injector,$http,$uibModal) {\n\n                var $q = $injector.get('$q');\n                var $modal = $uibModal;\n                var Utilities = $injector.get('Utilities');\n\n            \tvar AuthSvc = {\n                    \n                    doActivate: function(key) {\n                        var url = Utilities.getActivationUrl();\n                        return RestConfig.doActivate(url, key);\n            \t\t},\n\n                    doLogout: function () {\n                        var defered = $q.defer();\n                        var url = Utilities.getLogoutUrl();\n                        RestConfig.doLogout(url).then(\n                            function(logoutResponse) {\n                                defered.resolve(true);\n                            }\n                        );\n                        return defered.promise;\n                    },\n\n                    forgotPassword: function(userModel) {\n                        var url = Utilities.getForgotPasswordUrl();\n                        return RestConfig.forgotPassword(url, userModel);\n                    },\n\n                    resetNewPassword: function(passwordModel) {\n                        var url = Utilities.resetNewPasswordUrl();\n                        return RestConfig.resetNewPassword(url, passwordModel);\n                    },\n                    resetPasswordAndActivate: function(passwordModel) {\n                        var url = Utilities.resetPasswordAndActivate();\n                        return RestConfig.resetPasswordAndActivate(url, passwordModel);\n                    },\n            \t};\n\n                return AuthSvc;\n            }\n        ]);\n\n\n\tangular.module('MyCvTracker.pages.campaignNotifications')\n\n\t    .controller('CampaignNotificationsCtrl', ['toastr', '$scope', '$injector', '$http', '$filter',\n\n\t   function (toastr, $scope, $injector, $http, $filter) {\n\t    \t// Variables initialization \n\t\t\tvar Utilities = $injector.get('Utilities');\n\t\t\tvar NotificationsSvc = $injector.get('CampaignNotificationsSvc');\n\n\t\t\t//Used scopes\n\t\t\t$scope.user = {\n\t\t\t\tmyNotifications: [],\n\t\t\t\tviewNotifications: [],\n\t\t\t\tmyCampaigns : []\n\t\t\t};\n\n\t\t\t//Listing Notifications Function\n\t\t\t$scope.getMyNotifications = function () {\n\n\t\t\t\t$scope.user.myNotifications = [];\n\t\t\t\t\t\n\t\t\t\tNotificationsSvc.getMyNotifications().then(\n\n\t\t\t\t\tfunction (notificationsData) {\n\n\t\t\t\t\t\tnotificationsData.forEach(function (notifications) {\n\t\t\t\t\t\t\tnotifications.lastTrackedTime = $filter('date')(new Date(notifications.lastTrackedTime), 'EEE,MMM dd yyyy HH:mm');\n\t\t\t\t\t\t\t$scope.user.myNotifications.push(notifications);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\n\t\t   //Listing Notifications Function\n\t\t   $scope.getMyCampaigns = function () {\n\n\t\t\t   $scope.user.myCampaigns = [];\n\n\t\t\t   NotificationsSvc.getMyCampaigns().then(\n\n\t\t\t\t   function (campaignsData) {\n\n\t\t\t\t\t   campaignsData.forEach(function (campaigns) {\n\t\t\t\t\t\t   $scope.user.myCampaigns.push(campaigns);\n\t\t\t\t\t   });\n\t\t\t\t   }\n\t\t\t   );\n\t\t   };\n\n\n\t\t   //Listing Notifications Function\n\t\t   $scope.viewFullNotifications = function (notificationId, index) {\n\n\t\t\t   $scope.user.viewNotifications = [];\n\n\t\t\t   NotificationsSvc.viewFullNotifications(notificationId).then(\n\n\t\t\t\t   function (notificationsData) {\n\n\t\t\t\t\t   notificationsData.forEach(function (notifications) {\n\t\t\t\t\t\t   notifications.lastTrackedTime = $filter('date')(new Date(notifications.lastTrackedTime), 'EEE,MMM dd yyyy HH:mm');\n\t\t\t\t\t\t   $scope.user.viewNotifications.push(notifications);\n\t\t\t\t\t   });\n\n\t\t\t\t\t  // viewFullNotifications($scope.user.myNotifications);\n\t\t\t\t\t   $scope.notificationsModal = NotificationsSvc.getViewNotificationsModal($scope, 'CampaignNotificationsCtrlModal');\n\t\t\t\t   }\n\t\t\t   );\n\t\t   };\n\n\t\t   //Close the resume model function\n\t\t   $scope.closeModal = function () {\n\t\t\t   $scope.notificationsModal.dismiss();\n\t\t\t   Utilities.gotoCampaignNotificationsPage();\n\t\t   };\n\n\n\t\t   //deleting Notifications Function\n\t\t\t$scope.deleteNotification = function (notificationId, index) {\n\t\t\t\t\n\t\t\tvar url = Utilities.getDeleteCampaignNotificationsUrl()+\"?id=\"+notificationId;\n\t\t\t\t$http.delete(url, {\n\t\t\t\t\ttransformRequest: angular.identity,\n\t\t\t\t\theaders: {'Content-Type': undefined}\n\t\t\t\t})\n\t\t\t\t.success(function(data, status, headers, config) {\n\t\t\t\t\tconsole.debug(data+'  '+status+' ' +headers+'  '+config);\n\t\t\t\t\ttoastr.error(Utilities.getAlerts('deleteNotificationSuccess'));\n\t\t\t\t\t$scope.user.myNotifications.splice(index, 1);\n\t\t\t\t\t})\n\t\t\t\t\t.error(function(data, status, headers, config) {\n\t\t\t\t\t\t$scope.closeModal();\n\t\t\t\t\t\tif(data.message=='notificationDeleteLeastError'){\n\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('notificationDeleteLeastError'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('defaultError'));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t$scope.init = function () {\n\t\t\t\t$scope.getMyNotifications();\n\t\t\t\t$scope.getMyCampaigns();\n\t\t\t};\n\n\t\t\t$scope.init();\n\t    }\n\t]).controller('CampaignNotificationsCtrlModal', ['toastr', '$scope', '$injector', '$http', '$filter',\n\n\t\tfunction (toastr, $scope, $injector, $http, $filter) {\n\n\t\t\t$scope.modalNotifications = $scope.user.viewNotifications;\n\n\t\t\t$scope.closeModal = function (reason) {\n\n\t\t\t\t$scope.notificationsModal.dismiss();\n\t\t\t\tUtilities.gotoCampaignNotificationsPage();\n\t\t\t\t//$modalInstance.close(reason);\n\t\t\t};\n\t\t}]);\n\n\tangular.module('MyCvTracker.pages.campaignNotifications').directive('fileModel', ['$parse', function ($parse) {\n\t    return {\n\t        restrict: 'A',\n\t        link: function(scope, element, attrs) {\n\t            var model = $parse(attrs.fileModel);\n\t            var modelSetter = model.assign;\n\t            \n\t            element.bind('change', function(){\n\t                scope.$apply(function(){\n\t                    modelSetter(scope, element[0].files[0]);\n\t                });\n\t            });\n\t        }\n\t    };\n\t}]);\n\n\t//angular.module('App.filters', []).filter('companyFilter', [function () {\n\t//\treturn function (clients, selectedCompany) {\n\t//\t\tif (!angular.isUndefined(clients) && !angular.isUndefined(selectedCompany) && selectedCompany.length > 0) {\n\t//\t\t\tvar tempClients = [];\n\t//\t\t\tangular.forEach(selectedCompany, function (id) {\n\t//\t\t\t\tangular.forEach(clients, function (client) {\n\t//\t\t\t\t\tif (angular.equals(client.company.id, id)) {\n\t//\t\t\t\t\t\ttempClients.push(client);\n\t//\t\t\t\t\t}\n\t//\t\t\t\t});\n\t//\t\t\t});\n\t//\t\t\treturn tempClients;\n\t//\t\t} else {\n\t//\t\t\treturn clients;\n\t//\t\t}\n\t//\t};\n\t//}]);\n\n\n     angular.module('MyCvTracker.pages.campaignNotifications')\n\n    \t.factory('CampaignNotificationsSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\t\t\t\tvar Utilities = $injector.get('Utilities');\n\t\t\t\treturn {\n\t\t\t\t\tgetMyNotifications: function (userId) {\n\t\t\t\t\t\tvar url = Utilities.getMyCampaignNotificationsUrl();\n\t\t\t\t\t\treturn RestConfig.getMyNotifications(url);\n\t\t\t\t\t},\n\t\t\t\t\tgetMyCampaigns: function (userId) {\n\t\t\t\t\t\tvar url = Utilities.getMyCampaignsUrl();\n\t\t\t\t\t\treturn RestConfig.getMyCampaigns(url);\n\t\t\t\t\t},\n\t\t\t\t\tviewFullNotifications: function (notificationId) {\n\t\t\t\t\t\tvar Utilities = $injector.get('Utilities');\n\n\t\t\t\t\t\tvar url = Utilities.getViewCampaignNotificationsUrl()  + notificationId;\n\t\t\t\t\t\treturn RestConfig.viewFullNotifications(url);\n\t\t\t\t\t},\n\n\t\t\t\t\tgetViewNotificationsModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotifications/templates/campaign_view_notifications.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n                            size: 'lg',\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t}\n        ]);\n\nangular.module(\"MyCvTracker.pages.skillCategory\")\n  .factory(\"CategorySkillService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    \"Constants\",\n    function (\n      toastr,\n      RestConfig,\n      $injector,\n      Constants\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        getCreatingCategoryModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/categories-skills/templates/new-category-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getCreatingSkillModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/categories-skills/templates/adding-skill-confirm-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getCategoryListSkillModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/categories-skills/templates/skill-list-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        }, getListSkills : function() {\n          return RestConfig.listSkills();\n        }, newSkill : function(name) {\n          return RestConfig.addNewSkill(name);\n        }, newCategory : function(name, skillIds) {\n          return RestConfig.addNewCategorySkill(name, skillIds);\n        }, getListSkillCategories : function() {\n          return RestConfig.listSkillCategories();\n        }, getListSkillOfCategory : function(categoryId) {\n          return RestConfig.listSkillsOfCategory(categoryId);\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.skillCategory\")\n  .controller(\"CategoriesListingCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    \"$timeout\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location,\n      $timeout\n    ) {\n      var mainSvc = $injector.get(\"CategorySkillService\");\n\n      var defaultSkills = [];\n      $scope.newCategoryForm = {\n        name : \"\",\n        skills : [],\n        suggestionItems : [],\n        skillNameSearch : \"\",\n        suggestFocused : false,\n        creating : false\n      };\n      $scope.addingSkillForm = {\n        name : \"\",\n        adding : false\n      };\n      $scope.categorySkillModal = {\n        skills : []\n      };\n\n      $scope.skillCategories = [];\n\n      $scope.mainModal = null;\n      $scope.confirmModal = null;\n\n      $scope.openNewCategoryModal = function () {\n        $scope.mainModal = mainSvc.getCreatingCategoryModal($scope, \"SkillCategoryModalCtrl\");\n      };\n\n      $scope.openNewSkillModal = function () {\n        $scope.confirmModal = mainSvc.getCreatingSkillModal($scope, \"SkillCategoryModalCtrl\");\n      };\n\n      $scope.closeModal = function () {\n        $scope.mainModal.dismiss();\n\n        $scope.newCategoryForm.suggestionItems = [];\n        $scope.newCategoryForm.name = \"\";\n        $scope.newCategoryForm.skills = [];\n        $scope.newCategoryForm.creating = false;\n        $scope.newCategoryForm.skillNameSearch = \"\";\n        $scope.newCategoryForm.suggestFocused = false;\n\n        $scope.categorySkillModal.skills = [];\n      };\n\n      $scope.closeConfirmModal = function() {\n        $scope.confirmModal.dismiss();\n\n        $scope.addingSkillForm.name = \"\";\n        $scope.addingSkillForm.adding = false;\n      }\n\n      $scope.focusSuggestionInput = function() {\n        $scope.newCategoryForm.suggestFocused = true;\n        $scope.findSuggestionItems();\n      }\n\n      $scope.leaveSuggestionInput = function() {\n        $timeout(function() {\n          $scope.newCategoryForm.suggestFocused = false;\n        }, 100);\n      }\n\n      $scope.findSuggestionItems = function() {\n        var nameSearch =  $scope.newCategoryForm.skillNameSearch.toLowerCase();\n\n        var foundItems = [];\n        if (!nameSearch) {\n          foundItems = defaultSkills.slice(0, 10);\n        } else {\n          var noFound = 0;\n          for (var i = 0, len = defaultSkills.length; i < len; i++) {\n            var skill = defaultSkills[i];\n            var idx = skill.compareName.indexOf(nameSearch);\n\n            if (idx >= 0) {\n              noFound++;\n              foundItems.push(skill);\n            }\n\n            if (noFound > 20) {\n              break;\n            }\n          }\n        }\n\n        if (foundItems.length === 0) {\n          foundItems.push({\n            id : -1,\n            name : \"No matching. Click add to create new skill.\"\n          })\n        }\n\n        $scope.newCategoryForm.suggestionItems = foundItems;\n      }\n\n      $scope.applySkillToCategory = function() {\n        // $scope.subModal = mainSvc.getCreatingCategoryModal($scope, \"SkillCategoryModalCtrl\");\n        var nameSearch =  $scope.newCategoryForm.skillNameSearch;\n        var compareName = nameSearch.toLowerCase();\n        for (var i = 0, len = defaultSkills.length; i < len; i++) {\n          var skill = defaultSkills[i];\n          if (skill.compareName === compareName) {\n            $scope.newCategoryForm.skills.push(skill);\n            $scope.newCategoryForm.skillNameSearch = \"\";\n\n            return;\n          }\n        }\n\n        // if not exists then open create new modal\n        $scope.addingSkillForm.name = nameSearch;\n        $scope.openNewSkillModal();\n      }\n\n      $scope.removeSkillFromCategory = function(idx) {\n        $scope.newCategoryForm.skills.splice(idx, 1);\n      }\n\n      $scope.selectSuggestion = function(item) {\n        $scope.newCategoryForm.skillNameSearch = item.name;\n      }\n\n      $scope.registerNewSkill = function() {\n        if ($scope.addingSkillForm.adding) return;\n        $scope.addingSkillForm.adding = true;\n\n        var name = $scope.addingSkillForm.name.trim();\n        if (!name) {\n          return;\n        }\n\n        mainSvc.newSkill(name).then(function(data) {\n          // adding skill to list\n          var id = data.id;\n          defaultSkills.push({\n            id : id,\n            name : name,\n            compareName : name.toLowerCase()\n          });\n          defaultSkills.sort(sortSkillByName);\n\n          $scope.applySkillToCategory();\n\n          $scope.closeConfirmModal();\n        });\n      }\n\n      $scope.registerCategory = function() {\n        if ($scope.newCategoryForm.creating) return;\n        $scope.newCategoryForm.creating = true;\n\n        var name = $scope.newCategoryForm.name.trim();\n        var skills = $scope.newCategoryForm.skills;\n        if (!name || skills.length <= 0) {\n          return;\n        }\n\n        var skillIds = [];\n        for (var i = 0, len = skills.length; i < len; i++) {\n          skillIds.push(skills[i].id);\n        }\n        mainSvc.newCategory(name, skillIds).then(function(data) {\n          $scope.skillCategories.push(data);\n          $scope.skillCategories.sort(sortSkillByName);\n\n          toastr.success(\"New category has been created successfully.\", \"Success\");\n          $scope.closeModal();\n        }).catch(function() {\n          toastr.error(\"Creating category has failed!.\", \"Failed\");\n          $scope.closeModal();\n        });\n      }\n\n      $scope.openModalShowingCategorySkills = function(categoryId) {\n        mainSvc.getListSkillOfCategory(categoryId).then(function(data) {\n          $scope.categorySkillModal.skills = data;\n        });\n\n        $scope.mainModal = mainSvc.getCategoryListSkillModal($scope, \"SkillCategoryModalCtrl\");\n      }\n\n      function sortSkillByName(\n        a,\n        b\n      ) {\n        return a.name.localeCompare(b.name);\n      }\n\n      $scope.init = function () {\n        mainSvc.getListSkillCategories().then(function (data) {\n          data.sort(sortSkillByName);\n          $scope.skillCategories = data;\n        });\n\n        mainSvc.getListSkills()\n          .then(function (data) {\n            for (var i = 0, len = data.length; i < len; i++) {\n              var skill = data[i];\n              skill.compareName = skill.name.toLowerCase();\n            }\n\n            data.sort(sortSkillByName);\n            defaultSkills = data;\n          });\n\n      };\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.skillCategory\")\n  .controller(\"SkillCategoryModalCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.cvBoxCandidates\")\n  .controller(\"CvBoxCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"$location\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      $location\n    ) {\n      var referralLink = \"\";\n\n      var Utilities = $injector.get(\"Utilities\");\n      var service = $injector.get(\"CvBoxService\");\n\n      $scope.mainModal = null;\n      $scope.cvboxDetail = {};\n      $scope.candidates = [];\n      $scope.removingInfo = {\n        resume : null,\n        idx : -1,\n        removing : false\n      };\n\n      $scope.formatDateTime = function (utcStr) {\n        return !!utcStr ? Utilities.getFormattedDate(utcStr) : \"\";\n      };\n\n      $scope.loadRefContent = function(refCode) {\n        service.getReferralDetail(refCode).then(function (rpData) {\n          $scope.cvboxDetail = rpData;\n        });\n      }\n\n      $scope.loadBoxCandidates = function(refCode) {\n        service.getCandidates(refCode).then(function (rpData) {\n          $scope.candidates = rpData;\n        });\n      }\n\n      $scope.removeCandidate = function() {\n        $scope.removingInfo.removing = true;\n\n        var idx = $scope.removingInfo.idx;\n        var resumeId = $scope.removingInfo.resume.resumeId;\n        var referralId = $scope.cvboxDetail.id;\n\n        service.unregisterCandidate(referralId, resumeId).then(function () {\n          $scope.candidates.splice(idx, 1);\n          $scope.closeModal();\n          toastr.success(\"The candidate has been removed successfully!\");\n        }).catch(function() {\n          $scope.closeModal();\n          toastr.error(\"Removing candidate has failed!\");\n        });\n      }\n\n      $scope.openPreviewResume = function (resume) {\n        var url =  \"/job-resume-preview?previewToken=\" + resume.previewToken;\n\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = '_blank';\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      }\n\n      $scope.openRemoveModal = function(resume, idx) {\n        $scope.removingInfo = {\n          resume : resume,\n          idx : idx\n        };\n        $scope.mainModal = service.getRemoveCandidateModal($scope, \"CvBoxModalCtrl\");\n      }\n\n      $scope.closeModal = function() {\n        $scope.mainModal.dismiss();\n        $scope.removingInfo = {\n          resume : null,\n          idx : -1,\n          removing : false\n        };\n      }\n\n      $scope.init = function () {\n        var params = $location.search();\n        referralLink = params.referralLink;\n\n        $scope.loadRefContent(referralLink);\n        $scope.loadBoxCandidates(referralLink);\n      };\n\n      $scope.init();\n    }\n  ]);\n\n\nangular.module(\"MyCvTracker.pages.cvBoxCandidates\")\n  .controller(\"CvBoxModalCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.cvBoxCandidates\")\n  .factory(\"CvBoxService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    function (\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        getReferralDetail: function(referralLink) {\n          var url = utilities.getReferralContentUrl();\n          return RestConfig.getReferralContent(url, referralLink);\n        },\n        getCandidates: function(referralLink) {\n          return RestConfig.getBoxCandidates(referralLink);\n        },\n        unregisterCandidate: function(referralId, resumeId) {\n          return RestConfig.removeCandidateFromBox(resumeId, referralId);\n        },\n        getRemoveCandidateModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/cvbox-candidates/templates/remove-candidate-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        }\n      };\n    }\n  ]);\n\n\n\tangular.module('MyCvTracker.pages.CvMarketing')\n\n\t    .controller('CvMarketingCtrl', ['toastr', '$scope', '$injector','$location',\n\n\t        function (toastr, $scope, $injector,$location) {\n\n\t\t\t\tvar Utilities = $injector.get('Utilities');\n\t\t\t\tvar AccountSvc = $injector.get('AccountSvc');\n\t\t\t\tvar ResumesSvc = $injector.get('ResumesSvc');\n\t\t\t\tvar CvMarketingSvc = $injector.get('CvMarketingSvc');\n\t\t\t\tvar NotificationsSvc = $injector.get('CampaignNotificationsSvc');\n\n\t\t\t\t$scope.user = {\n\t\t\t\t\tmyResumes: [],\n\t\t\t\t\tmyCampaigns : []\n\t\t\t\t};\n\n                $scope.manualUpload = 0;\n\n                $scope.specialValue = {\n                    \"id\": \"12345\",\n                    \"value\": \"green\"\n                };\n\n\t\t\t\t$scope.CvMarketing = {\n\t\t\t\t\tsubject: '',\n\t\t\t\t\tcontent: '',\n\t\t\t\t\tcategory: '',\n\t\t\t\t\tnotes  : 'campaignType:<emailBrite>,campaignTemplate:<eventpromo>,campaignURL:<https://javacourse.eventbrite.com/?aff=cvtracker>,campaignTitle:<Java Course>',\n\t\t\t\t\tphoneNo : '',\n\t\t\t\t\tresumeId: '',\n\t\t\t\t\tuserAccount: '',\n\t\t\t\t\tuserPassword: '',\n\t\t\t\t\ttrackingNotescreated: '0',\n\t\t\t\t\ttarget: '',\n                    discountCode: '',\n\t\t\t\t\tuserId: ''\n\t\t\t\t};\n\n\t\t\t\t$scope.getUserDetails = function () {\n\n\t\t\t\t\tAccountSvc.getUser().then(\n\n\t\t\t\t\t\tfunction (userData) {\n\n\t\t\t\t\t\t\t$scope.user = userData;\n\t\t\t\t\t\t\t$scope.getMyResumes();\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tfunction (response) {\n\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts(response.status));\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t//Listing Notifications Function\n\t\t\t\t$scope.getMyCampaigns = function () {\n\n\t\t\t\t\t$scope.user.myCampaigns = [];\n\n\t\t\t\t\tNotificationsSvc.getMyCampaigns().then(\n\n\t\t\t\t\t\tfunction (campaignsData) {\n\n\t\t\t\t\t\t\tconsole.log(\"campaign Data\" , campaignsData);\n\t\t\t\t\t\t\t\t$scope.user.myCampaigns = campaignsData;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t $scope.getMyResumes = function () {\n\n\t\t\t\t\t$scope.user.myResumes = [];\n\t\t\t\t\t\t\n\t\t\t\t\tResumesSvc.getMyResumes($scope.user.id).then(\n\n\t\t\t\t\t\tfunction (resumesData) {\n\t\t\t\t\t\t\t$scope.user.myResumes = resumesData;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.update = function (mycampaign,campaignData) {\n\n\t\t\t\t\tconsole.log(\"campaign to update \" , mycampaign);\n\n                    $scope.user.myCampaigns.forEach(function (campaign) {\n\n                    \tconsole.log(\"please match \", campaign.id)\n                    \tif(mycampaign == campaign.id){\n                    \t\tconsole.log(\"matched \");\n                            $scope.CvMarketing = campaign;\n\t\t\t\t\t\t}\n                    });\n\n                    $scope.user.myCampaigns = [];\n\n                    NotificationsSvc.getMyCampaigns().then(\n\n                        function (campaignsData) {\n\n                            console.log(\"campaign Data\" , campaignsData);\n                            $scope.user.myCampaigns = campaignsData;\n\n                        }\n                    );\n\n                }\n\n                $scope.loadResume = function (resumeLookUp) {\n\n                    $scope.user.myResumes = [];\n\n                    ResumesSvc.getOtherResumes($scope.user.id,resumeLookUp).then(\n\n                        function (resumesData) {\n                            $scope.user.myResumes = resumesData;\n                        }\n                    );\n\n                }\n\n\t\t\t\t$scope.postRequest = function (requestForm, requestModel) {\n\n                    if ( requestForm.$valid ) {\n\n                        requestModel.userId = $scope.user.id;\n\n                        CvMarketingSvc.saveCvMarketingRequest(requestModel).then(\n\n                            function (CvMarketingRequestData) {\n                                toastr.success(Utilities.getAlerts('CvMarketingRequestSuccess'));\n                                Utilities.gotoProfilePage();\n                            }\n                        );\n                    }\n                };\n\n                $scope.editRequest = function (requestForm, requestModel) {\n\n                    if ( requestForm.$valid ) {\n\n                        requestModel.userId = $scope.user.id;\n\n                        CvMarketingSvc.editCvMarketingRequest(requestModel).then(\n\n                            function (CvMarketingRequestData) {\n                                toastr.success(Utilities.getAlerts('CvMarketingRequestSuccess'));\n                                Utilities.gotoProfilePage();\n                            }\n                        );\n                    }\n                };\n\n                $scope.bulkUpdate = function (requestForm, requestModel) {\n\n                    if ( requestForm.$valid ) {\n\n                        requestModel.userId = $scope.user.id;\n\n                        CvMarketingSvc.bulkUpdateMarketingRequest(requestModel).then(\n\n                            function (CvMarketingRequestData) {\n                                toastr.success(Utilities.getAlerts('CvMarketingRequestSuccess'));\n                                Utilities.gotoProfilePage();\n                            }\n                        );\n                    }\n                };\n\n                $scope.cloneRequest = function (requestForm, requestModel) {\n\n                    if ( requestForm.$valid ) {\n\n                        requestModel.userId = $scope.user.id;\n\n                        CvMarketingSvc.cloneCvMarketingRequest(requestModel).then(\n\n                            function (CvMarketingRequestData) {\n                                toastr.success(Utilities.getAlerts('CvMarketingRequestSuccess'));\n                                Utilities.gotoProfilePage();\n                            }\n                        );\n                    }\n                };\n\n                $scope.deleteRequest = function (requestForm, requestModel) {\n\n                    if ( requestForm.$valid ) {\n\n                        requestModel.userId = $scope.user.id;\n\n                        CvMarketingSvc.deleteCvMarketingRequest(requestModel.id).then(\n\n                            function (CvMarketingRequestData) {\n                                toastr.error(Utilities.getAlerts('CvMarketingRequestSuccess'));\n                                Utilities.gotoProfilePage();\n                            }\n                        );\n                    }\n                };\n\n\t\t\t\t$scope.init = function () {\n\t\t\t\t\t$scope.getUserDetails();\n\t\t\t\t\t$scope.getMyCampaigns();\n\t\t\t\t};\n\n\t\t\t\t$scope.callCollectCVApi = function () {\n\t\t\t\t\tvar trackingId = $location.search().trackingId;\n\t\t\t\t\tCvMarketingSvc.collectCV(trackingId).then(\n\n\t\t\t\t\t\tfunction (obj) {\n\t\t\t\t\t\t\tconsole.log('sucess');\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.callCollectCVFromMailApi = function () {\n\t\t\t\t\tvar trackingId = $location.search().trackingId;\n\t\t\t\t\tCvMarketingSvc.collectCVFromEmail(trackingId).then(\n\n\t\t\t\t\t\tfunction (obj) {\n\t\t\t\t\t\t\tconsole.log('sucess');\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.init();           \n\t        }\n\t    ]);\n\n\n    angular.module('MyCvTracker.pages.CvMarketing')\n\n    \t.factory('CvMarketingSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\n                var Utilities = $injector.get('Utilities');\n\n            \treturn  {\n\n                    saveCvMarketingRequest: function (requestOb) {\n\n                        var url = Utilities.getCvMarketingUrl();\n                        return RestConfig.saveCvMarketingRequest(url, requestOb);\n                    },\n\n                    editCvMarketingRequest: function (requestOb) {\n                        var url = Utilities.getCvMarketingEditUrl();\n                        return RestConfig.editCvMarketingRequest(url, requestOb);\n                    },\n\n                    cloneCvMarketingRequest: function (requestOb) {\n                        var url = Utilities.getCvMarketingCloneUrl();\n                        return RestConfig.cloneCvMarketingRequest(url, requestOb);\n                    },\n\n                    deleteCvMarketingRequest: function (noteId) {\n                        var url = Utilities.getCvMarketingDeleteUrl()+\"?id=\" + noteId;;\n                        return RestConfig.deleteCvMarketingRequest(url);\n                    },\n\n                    collectCV: function (trackingId) {\n\n                        var url = Utilities.getcollectCVUrl()+'/'+trackingId;\n                        return RestConfig.collectCV(url);\n                    },\n\n                    collectCVFromEmail: function (trackingId) {\n\n                        var url = Utilities.getcollectCVFromMailUrl()+'/'+trackingId;\n                        return RestConfig.collectCV(url);\n                    }\n            \t}; \n            }\n        ]);\n\n\n\tangular.module('MyCvTracker.pages.groupdata')\n\t  \t\t.controller('GroupDataCtrl', ['toastr', '$scope', '$injector', '$http', '$filter','$window',\n\n\t\t\tfunction (toastr, $scope, $injector, $http, $filter,$window) {\n\n\t\t\t\tvar Utilities = $injector.get('Utilities');\n\t\t\t\tvar GroupDataSvc = $injector.get('GroupDataSvc');\n\t\t\t\tvar AccountSvc = $injector.get('AccountSvc');\n\t\t\t\tvar NotificationsSvc = $injector.get('CampaignNotificationsSvc');\n\n\t\t\t\t//$scope.notesModal = {};\n\t\t\t\t//Used scopes\n\t\t\t\t$scope.user = {\n\t\t\t\t\tmyNotes: [],\n\t\t\t\t\tmyGroups : [],\n\t\t\t\t\tgroupMembers : []\n\t\t\t\t};\n\n\t\t\t\t$scope.isAdmin = true;\n\n                $scope.newMemberData = {\n                    id: '',\n                    memberFirstName : '',\n                    memberLastName : '',\n                    memberEmail : '',\n                    cvMarketingGroup : {\n                        id : ''\n                    }\n                };\n\n                $scope.selectedMembers = '';\n\n\t\t\t\t$scope.groupData = {\n\t\t\t\t    id: '',\n                    groupName: '',\n                    groupType: '',\n                    groupLocation: '',\n                    userAccounts: ''\n\n\n       \t\t\t};\n\n       \t\t\t$scope.addGroup = function(groupForm,groupData){\n\n       \t\t\t    GroupDataSvc.addGroups(groupData).then(function(groupData){\n\n                        $scope.getMyGroups();\n\n       \t\t\t    }, function(data){\n\n       \t\t\t    });\n       \t\t\t}\n\n       \t\t\t$scope.editGroup = function(groupForm,groupData){\n\n                    GroupDataSvc.editGroups(groupData).then(function(groupData){\n\n\n                    }, function(data){\n\n                    });\n                }\n\n                $scope.bulkUpload = function(bulkData,groupId){\n                var request = new FormData();\n                request.append(\"file\", bulkData);\n                request.append(\"groupId\" , groupId);\n\n                var url = Utilities.getBulkUploadMembersUrl();\n                   $http.put(url, request , {\n                     transformRequest : angular.identity,\n                     headers : { \"Content-Type\" : undefined }\n                   })\n                     .success(function (\n                       data,\n                       status,\n                       headers,\n                       config\n                     ) {\n                       $scope.formProcessing = false;\n                     })\n                     .error(function (\n                       data,\n                       status,\n                       headers,\n                       config\n                     ) {\n                       $scope.formProcessing = false;\n                     });\n                }\n\n                 $scope.editMember = function(memberData,groupId){\n\n                 if(groupId != null){\n                    memberData.cvMarketingGroup.id = groupId;\n                 }\n\n                 GroupDataSvc.saveMembers(memberData).then(function(selectedMembers){\n\n                  $scope.newMemberData = {\n                 id: '',\n                 memberFirstName : '',\n                 memberLastName : '',\n                 memberEmail : '',\n                 cvMarketingGroup : {\n                     id : ''\n                 }\n                };\n                 $scope.getGroupMembers(memberData.cvMarketingGroup.id);\n\n                 }, function(data){\n                 });\n\n                 }\n\n                 $scope.removeMember = function(memberData){\n\n                 if(memberData.id == ''){\n                    return;\n                 }\n\n                  GroupDataSvc.deleteMembers(memberData).then(function(selectedMembers){\n\n\n                   $scope.newMemberData =\n                   {\n                      id: '',\n                      memberFirstName : '',\n                      memberLastName : '',\n                      memberEmail : '',\n                      cvMarketingGroup : {\n                          id : ''\n                      }\n                   };\n\n                   $scope.getGroupMembers(memberData.cvMarketingGroup.id);\n\n\n                  }, function(response){\n                        alert(response.data);\n                        alert(response.status);\n                  });\n\n                  }\n\n\n                 $scope.copyMember = function(memberData){\n                    $scope.newMemberData.memberFirstName = memberData.memberFirstName;\n                    $scope.newMemberData.memberLastName = memberData.memberLastName;\n                    $scope.newMemberData.memberEmail = memberData.memberEmail;\n                    $scope.newMemberData.cvMarketingGroup.id = memberData.cvMarketingGroup.id;\n                 }\n\n\n\t\t\t\t//Listing Notifications Function\n\t\t\t\t$scope.getMyGroups = function () {\n\n\t\t\t\t\t$scope.user.myGroups = [];\n\n\t\t\t\t\tGroupDataSvc.getGroups().then(\n\n\t\t\t\t\t\tfunction (groupsData) {\n\n\t\t\t\t\t\t\tgroupsData.forEach(function (groups) {\n\t\t\t\t\t\t\t\t$scope.user.myGroups.push(groups);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.getUserDetails = function () {\n\n                    AccountSvc.getUser().then(\n\n                        function (userData) {\n\n                            if(userData.userRole == 'ADMIN'){\n                                $scope.isAdmin = true;\n\n                            }else{\n                                $scope.isAdmin = false;\n                            }\n                        }\n                    );\n                };\n\n\t\t\t\t//Listing Notifications Function\n                $scope.getGroupMembers = function (groupId) {\n\n                    $scope.user.groupMembers = [];\n\n                    $scope.user.myGroups.forEach(function(groups){\n                        if(groups.id == groupId){\n                        $scope.groupData.id = groups.id;\n                        $scope.groupData.groupName = groups.groupName;\n                        $scope.groupData.groupType = groups.groupType\n                        $scope.groupData.groupLocation = groups.groupLocation;\n                        $scope.groupData.userAccounts = groups.userAccounts;\n\n                        }\n                    });\n\n                    GroupDataSvc.getMembers(groupId).then(\n\n                        function (membersData) {\n\n                        membersData.forEach(function (members) {\n                        \t$scope.user.groupMembers.push(members);\n                        });\n                        }\n                    );\n                };\n\n\n\t\t\t\t$scope.postRequest = function (notesForm, notesModel) {\n\n\t\t\t\t\tif (notesForm.$valid ) {\n\n\t\t\t\t\t\tnotesModel.userId = $scope.note.userId;\n\t\t\t\t\t\tnotesModel.createdDate = new Date();\n\n\t\t\t\t\t\tNotesSvc.saveMyNotes(notesModel).then(\n\n\t\t\t\t\t\t\tfunction (notesData) {\n\t\t\t\t\t\t\t\t$scope.notesModal.dismiss();\n\t\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('resumeTrackRequestSuccess'));\n\t\t\t\t\t\t\t\tUtilities.gotoCampaignNotesPage();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\n\t\t\t\t// edit Notes Function\n\n\t\t\t\t$scope.init = function () {\n\t\t\t\t\t//$scope.getMyGroups();\n\t\t\t\t\t$scope.getMyGroups();\n\t\t\t\t\t$scope.getUserDetails();\n\t\t\t\t};\n\n\t\t\t\t$scope.init();\n\t\t\t}\n\t\t]);\nangular.module('MyCvTracker.pages.groupdata')\n\n    \t.factory('GroupDataSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\n                var Utilities = $injector.get('Utilities');\n\n            \treturn  {\n\n\t\t\t\t\tgetEditNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/edit_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetDeleteNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/delete_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetViewNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/view_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tbulkUpload: function(file,groupId){\n\n\t\t                return RestConfig.bulkUpload(url,request);\n\t\t\t\t\t},\n\n\t\t\t\t\taddGroups: function (groupData) {\n                        var url = Utilities.addGroupsUrl();\n                        return  RestConfig.addGroup(url,groupData);\n                    },\n\n                    editGroups: function (groupData) {\n                        var url = Utilities.editGroupsUrl();\n                        return  RestConfig.editGroup(url,groupData);\n                    },\n\n            \t\tgetGroups: function (userId) {\n            \t\t\tvar url = Utilities.getGroupsUrl();\n            \t\t\treturn  RestConfig.getGroupsList(url);\n            \t\t},\n\n                    getMembers: function (groupId) {\n            \t\t\tvar url = Utilities.getGroupMembersUrl(groupId)+\"?groupId=\" + groupId;\n            \t\t\treturn  RestConfig.getMembersList(url);\n            \t\t},\n                    saveMembers: function (requestOb) {\n                        var url = Utilities.getEditMembersUrl();\n                        return  RestConfig.saveMembersList(url,requestOb);\n                    },\n                    deleteMembers: function (requestOb) {\n                        var url = Utilities.getDeleteMembersUrl();\n                        return  RestConfig.deleteGroupMembersList(url,requestOb);\n                    },\n\t\t\t\t\tviewMyNotes: function (noteId) {\n\n\t\t\t\t\t\tvar url = Utilities.viewMyCampaignNotesUrl() +\"?id=\" + noteId;\n\t\t\t\t\t\treturn  RestConfig.getMyNotes(url);\n\t\t\t\t\t},\n\n                    bulkUpdateNotes: function (requestOb) {\n                        var url = Utilities.bulkCampaignNotesUrl();\n                        return RestConfig.bulkUpdateNotes(url, requestOb);\n                    },\n\n\t\t\t\t\tsaveMyNotes: function (requestOb) {\n\n\t\t\t\t\t\tvar url = Utilities.getEditCampaignNotesUrl();\n\t\t\t\t\t\treturn RestConfig.saveNotesRequest(url, requestOb);\n\t\t\t\t\t}\n            \t}; \n            }\n        ]);\nangular.module(\"MyCvTracker.pages.jobResumePreview\")\n  .controller(\"JobResumePreviewCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    \"$sce\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location,\n      $sce\n    ) {\n      var EMAIL_REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      var Utilities = $injector.get(\"Utilities\");\n      var mainSvc = $injector.get(\"JobResumePreviewService\");\n      var accessToken = \"\",\n        previewToken = \"\",\n        extendToken = \"\",\n        originalToken = \"\",\n        extendOriginalToken = \"\",\n      previewLinkId = \"\",\n      previewContextId = \"\";\n      var fileType = \"\";\n      var resumeId = \"\";\n      var userEmail = \"\";\n      var reviewToken = \"\";\n      var pdfViewerHeight = window.innerHeight - 100;\n\n      var userDetail = Authorization.getUserDetails();\n      var rqUserId = 0;\n      var isAdminUser = false, isReviewer = false;\n      if (!!userDetail) {\n        rqUserId = userDetail.id;\n        userEmail = userDetail.email;\n        var role = userDetail.userRole;\n        isAdminUser = role === \"ADMIN\";\n        isReviewer = role === \"REVIEWER\";\n      }\n\n      $scope.resumePreview = {\n        tokenValid : null,\n        url : null,\n        urlCdt : 0,\n        rqUserId : rqUserId,\n        loginRedirect : \"\",\n        withReviewToken : false,\n        reviewTokenExpired : false,\n        pdfViewerHeight : pdfViewerHeight,\n        isAdminUser : isAdminUser,\n        isReviewer : isReviewer,\n        noOfReviews : 0\n      };\n\n      $scope.jobDetail = {};\n\n      $scope.writingForm = {\n        email : userEmail,\n        content : \"\",\n        submitting : false,\n        submitted : false,\n        expired : false,\n        emailInvalid : false,\n        contentInvalid : false,\n        inAuth : !!userEmail,\n        firstName : \"\"\n      };\n\n      $scope.extendForm = {\n        submitting : false,\n        submitted : false,\n        failed : false\n      };\n\n      $scope.maskingForm = {\n        submitting : false,\n        texts : \"\"\n      };\n\n      $scope.listReviews = [];\n\n      $scope.loadJobSpec = function () {\n        mainSvc.getJobDetail(accessToken, previewToken, extendToken, originalToken, extendOriginalToken, previewLinkId)\n          .then(function (data) {\n            $scope.jobDetail = data;\n            fileType = data.fileType;\n            resumeId = data.resumeId;\n            if (!!previewLinkId) {\n              var maskedLinkId = data.maskedLinkId;\n              var originalLinkId = data.originalLinkId;\n              var dataMaskedToken = data.maskedToken;\n              var dataOriginalToken = data.originalToken;\n\n              if (previewLinkId === maskedLinkId) {\n                previewToken = dataMaskedToken;\n              } else if (previewLinkId === originalLinkId) {\n                originalToken = dataOriginalToken;\n              }\n            }\n\n            $scope.resumePreview.tokenValid = true;\n            $scope.resumePreview.noOfReviews = data.noOfReviews;\n            $scope.loadPreview();\n\n            if (!extendToken && !extendOriginalToken) {\n              if (!reviewToken) {\n                $scope.loadListReviews();\n              } else {\n                $scope.loadReviewByToken();\n              }\n            } else {\n              $scope.jobDetail[\"isExtend\"] = true;\n            }\n          })\n          .catch(function () {\n            $scope.resumePreview.pdfViewerHeight = 0;\n            $scope.resumePreview.tokenValid = false;\n          });\n      };\n\n      $scope.loadPreview = function () {\n        var param = \"\";\n        if (!!accessToken) {\n          param = \"accessToken=\" + accessToken;\n        } else if (!!previewToken) {\n          param = \"token=\" + previewToken;\n        } else if (!!extendToken) {\n          param = \"extendToken=\" + extendToken;\n        } else if (!!originalToken) {\n          param = \"originalToken=\" + originalToken;\n        } else if (!!extendOriginalToken) {\n          param = \"extendOriginalToken=\" + extendOriginalToken;\n        }\n\n        if (!!previewContextId) {\n          param += \"%26ctx=\" + previewContextId;\n        }\n\n        var url = \"\";\n        if (fileType !== \"application/pdf\") {\n          url = \"https://view.officeapps.live.com/op/embed.aspx?src=\" + Constants.baseUrl +\"/user/previewResume?\" + param;\n        } else {\n          url = Constants.viewUrl +\"/pdf-viewer.html?pdf=\"+ Constants.baseUrl + \"/user/previewResume?\" + param;\n        }\n\n        $scope.resumePreview.url = url;\n        $scope.resumePreview.urlCdt = new Date().getTime();\n      };\n\n      $scope.loadListReviews = function () {\n        mainSvc.getResumeReviews(resumeId)\n          .then(function (data) {\n            $scope.listReviews = data;\n          });\n      };\n\n      $scope.loadReviewByToken = function () {\n        mainSvc.getReview(reviewToken)\n          .then(function (data) {\n            $scope.listReviews.push(data);\n          })\n          .catch(function () {\n            reviewToken = null;\n            $scope.resumePreview.reviewTokenExpired = true;\n          });\n      };\n\n      $scope.extendPreview = function () {\n        $scope.extendForm.submitting = true;\n        mainSvc.extendResumePreview(extendToken, extendOriginalToken)\n          .then(function () {\n            $scope.extendForm.submitted = true;\n            $scope.extendForm.failed = false;\n            $scope.extendForm.submitting = false;\n          })\n          .catch(function () {\n            $scope.extendForm.submitted = false;\n            $scope.extendForm.failed = true;\n            $scope.extendForm.submitting = false;\n          });\n      };\n\n      $scope.submitReview = function () {\n        var email = $scope.writingForm.email;\n        var content = $scope.writingForm.content;\n        var name = $scope.writingForm.firstName;\n\n        var emailInvalid = false;\n        // var emailInvalid = !EMAIL_REGEX.test(email);\n        // $scope.writingForm.emailInvalid = emailInvalid;\n        var contentInvalid = content.length <= 0;\n        $scope.writingForm.contentInvalid = contentInvalid;\n\n        if (!emailInvalid && !contentInvalid) {\n          $scope.writingForm.submitting = true;\n          mainSvc.submitResumeReview(accessToken, previewToken, originalToken, email, content, name)\n            .then(function () {\n              $scope.writingForm.submitted = true;\n              $scope.writingForm.submitting = false;\n            })\n            .catch(function () {\n              $scope.writingForm.expired = true;\n              $scope.writingForm.submitting = false;\n            });\n        }\n      };\n\n      $scope.activeReply = function (review) {\n        if (!review[\"replyActive\"]) {\n          review.listReply = [];\n          review[\"replyActive\"] = true;\n\n          var reviewId = review.id;\n\n          // load list comments\n          mainSvc.getReviewComments(reviewId, reviewToken)\n            .then(function (data) {\n              review.listReply = data;\n            });\n        }\n      };\n\n      $scope.writeReviewComment = function (review) {\n        if (!review.inReviewSubmitting) {\n          review.inReviewSubmitting = true;\n          var reviewId = review.id;\n          var content = review.replyContent;\n\n          if (!!content) {\n            review.replyContent = \"\";\n\n            mainSvc.submitReviewComment(reviewId, content, reviewToken)\n              .then(function (data) {\n                data.userEmail = \"You\";\n                review.listReply.push(data);\n\n                var noReply = review.noOfReply;\n                if (!noReply) noReply = 0;\n                noReply++;\n                review.noOfReply = noReply;\n\n                review.inReviewSubmitting = false;\n              })\n              .catch(function () {\n                toastr.error(\"You are not authorized to reply to this thread!\");\n                review.inReviewSubmitting = false;\n              });\n          }\n        }\n      };\n\n      $scope.maskText = function() {\n        if (!!$scope.maskingForm.submitting) return;\n        $scope.maskingForm.submitting = true;\n        var textsStr = $scope.maskingForm.texts;\n        var texts = textsStr.split(\",\");\n\n        mainSvc.maskExtraTextsInResume(resumeId, texts)\n          .then(function () {\n            $scope.resumePreview.urlCdt = new Date().getTime();\n            $scope.maskingForm.texts = \"\";\n            toastr.success(\"Resume has been masked successfully!\");\n            $scope.maskingForm.submitting = false;\n          })\n          .catch(function () {\n            toastr.error(\"Masking resume has failed!\");\n            $scope.maskingForm.submitting = false;\n          });\n\n        $scope.resumePreview.urlCdt = new Date().getTime();\n        $scope.maskingForm.submitting = false;\n      }\n\n      $scope.trustSrc = function (src, cdt) {\n        return $sce.trustAsResourceUrl((src + \"%26cdt=\" + cdt));\n      };\n\n      $scope.formatDateTime = function (utcStr) {\n        return !!utcStr ? Utilities.getFormattedDate(utcStr) : \"\";\n      };\n\n      $scope.init = function () {\n        var searchQuery = window.location.search;\n        var reviewTokenIdx = searchQuery.indexOf(\"&accToken=\");\n        if (reviewTokenIdx > 0) {\n          var newQuery = searchQuery.substring(0, reviewTokenIdx);\n          var leftPart = searchQuery.substring(reviewTokenIdx + 1);\n          var nextQueryIdx = leftPart.indexOf(\"&\");\n          var nextQuery = \"\";\n          if (nextQueryIdx > 0) {\n            nextQuery = leftPart.substring(nextQueryIdx);\n          }\n\n          searchQuery = newQuery + nextQuery;\n        }\n\n        var pathName = window.location.pathname;\n        var linkIdIdx = pathName.indexOf(\"/resumes/\");\n        if (linkIdIdx >= 0) {\n          var linkPath = pathName.substring(linkIdIdx + 9);\n          var ctxIdx = linkPath.indexOf(\"/\");\n          if (ctxIdx > 0) {\n            previewLinkId = linkPath.substring(0, ctxIdx);\n            previewContextId = linkPath.substring(ctxIdx + 1);\n          } else {\n            previewLinkId = linkPath;\n          }\n        }\n        var currentUrl = pathName + searchQuery;\n\n        var params = $location.search();\n        if (!!params.accessToken) {\n          accessToken = params.accessToken;\n        }\n        if (!!params.previewToken) {\n          previewToken = params.previewToken;\n        }\n        if (!!params.extendToken) {\n          extendToken = params.extendToken;\n        }\n        if (!!params.originalToken) {\n          originalToken = params.originalToken;\n        }\n        if (!!params.extendOriginalToken) {\n          extendOriginalToken = params.extendOriginalToken;\n        }\n        if (!!params.accToken) {\n          reviewToken = params.accToken;\n        }\n\n        $scope.resumePreview.loginRedirect = currentUrl;\n        $rootScope.headerLoginRedirect = currentUrl;\n\n        if (!!reviewToken) {\n          $scope.resumePreview.withReviewToken = true;\n        }\n\n        // var iframeE = document.querySelector(\".resume-preview-iframe iframe\");\n        // iframeE.setAttribute(\"height\", pdfViewerHeight + \"px\");\n\n        // load job spec from access token\n        $scope.loadJobSpec();\n      };\n\n      $scope.$on(\"$destroy\", function () {\n        $rootScope.headerLoginRedirect = \"\";\n      });\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.jobResumePreview\")\n  .factory(\"JobResumePreviewService\", [\n    \"Constants\",\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    function (\n      Constants,\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        getJobDetail: function(accessToken, previewToken, extendToken, originalToken, extendOriginalToken, previewLinkId) {\n          var url = Constants.baseUrl + \"/user/resume/ref/detail\";\n          return RestConfig.getJobSpecDetailFromAccessToken(url, accessToken, previewToken, extendToken, originalToken, extendOriginalToken, previewLinkId);\n        },\n        getResumeReviews: function(resumeId) {\n          var url = Constants.baseUrl + \"/user/resume/\" + resumeId + \"/reviews/list\";\n          return RestConfig.getResumeReviews(url);\n        },\n        getReview: function(token) {\n          var url = Constants.baseUrl + \"/user/resume/review/detail?token=\" + token;\n          return RestConfig.getReviewDetail(url);\n        },\n        extendResumePreview: function(token, originalToken) {\n          var url = Constants.baseUrl + \"/user/resume/preview/extend\";\n          return RestConfig.extendResumePreviewFromToken(url, token, originalToken);\n        },\n        submitResumeReview: function(accessToken, previewToken, originalToken, email, review, name) {\n          var url = Constants.baseUrl + \"/user/resume/review/new\";\n          console.log(\"name\", name);\n          return RestConfig.leaveResumeReview(url, accessToken, previewToken, originalToken, email, review, name);\n        },\n        submitReviewComment : function(reviewId, content, reviewToken) {\n          var url = Constants.baseUrl + \"/user/resume/review/reply\";\n\n          return RestConfig.leaveReviewComment(url, reviewId, content, reviewToken);\n        },\n        getReviewComments: function(reviewId, reviewToken) {\n          var url = Constants.baseUrl + \"/user/reviews/\" + reviewId + \"/reply/list\" + (!!reviewToken ? (\"?reviewToken=\" + reviewToken) : \"\");\n          return RestConfig.getReviewComments(url);\n        },\n        maskExtraTextsInResume : function(resumeId, texts) {\n          var url = Constants.baseUrl + \"/user/resume/edit/text-mask\";\n\n          return RestConfig.maskTextsInResume(url, resumeId, texts);\n        }\n      };\n    }\n  ]);\n\n\n\tangular.module('MyCvTracker.pages.jobs')\n\n\t\t.controller('JobsCtrl', ['toastr', '$scope', '$injector','$http','$location','$filter','Constants','$uibModal','$auth','$rootScope',\n\n\t\t\tfunction (toastr, $scope, $injector,$http,$location,$filter,Constants,$uibModal,$auth,$rootScope) {\n\n\t\t\t\t$scope.allJobs = [];\n\n\t\t\t\tvar JobsSvc = $injector.get('JobsSvc');\n\t\t\t\tvar AccountSvc = $injector.get('AccountSvc');\n\t\t\t\tvar Utilities = $injector.get('Utilities');\n\n\t\t\t\t$scope.user = {\n\n\t\t\t\t};\n\n                $scope.dragData = [];\n\n                $scope.basicConfig = {\n                    core: {\n                        multiple: false,\n                        check_callback: true,\n                        worker: true\n                    },\n                    'types': {\n                        'folder': {\n                            'icon': 'ion-navicon-round'\n                        },\n                        'default': {\n                            'icon': 'ion-ios-minus-empty'\n                        }\n                    },\n                    'plugins': ['types'],\n                    'version': 1\n                };\n\n\t\t\t\t$scope.disableEditor = true;\n\n\t\t\t\t$scope.viewJobEditor= {};\n\n\t\t\t\t$scope.isAdmin = false;\n\n                $scope.searchMode = false;\n\n\t\t\t\t$scope.isFromMail = false;\n\n\t\t\t\t$scope.selectedJob = JobsSvc.getViewJobData();\n\n\t\t\t\t$scope.currentPage = 1;\n\t\t\t\t$scope.pageSize = 10;\n\t\t\t\t$scope.totalJobs = 0;\n\n\t\t\t\t$scope.searchText = '';\n\n\t\t\t\t$scope.jobTypeList = Constants.jobTypeDropDown;\n\n\t\t\t\t$scope.jobsSearchCriteriaSortDropDown = Constants.jobsSearchCriteriaSortDropDown;\n\t\t\t\t$scope.jobStatustDropDown = Constants.jobStatusText;\n\n\t\t\t\t$scope.JobsSearch = {\n\t\t\t\t\tpageNumber :'',\n\t\t\t\t\tpageSize: '',\n\t\t\t\t\tcriteriaDetails:'',\n\t\t\t\t\tcriteriaType:'',\n\t\t\t\t\tsortyBy: 1\n\t\t\t\t};\n\n\t\t\t\t$scope.getJobStatus = function (jobStatus) {\n\t\t\t\t\tvar jobStatusTextArray = Constants.jobStatusText;\n\t\t\t\t\tvar jobStatusTextLength = jobStatusTextArray.length;\n\t\t\t\t\tvar jobStatusText = '';\n\t\t\t\t\tfor (var i = 0; i < jobStatusTextLength; i++) {\n\t\t\t\t\t\tvar obj = jobStatusTextArray[i];\n\t\t\t\t\t\tif(obj.id == jobStatus){\n\t\t\t\t\t\t\tjobStatusText = obj.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn jobStatusText;\n\t\t\t\t};\n\n\t\t\t\t//////////////////////////////////////////////////////////////////////////////////////\n\t\t\t\t//Listing Jobs Function\n\t\t\t\t$scope.getAllJobs = function () {\n\n\t\t\t\t\t$scope.allJobs = [];\n\t\t\t\t\tJobsSvc.getJobs($scope.JobsSearch).then(\n\n\t\t\t\t\t\tfunction (jobsData) {\n\t\t\t\t\t\t\t$scope.totalJobs = jobsData.totalElements;\n\t\t\t\t\t\t\tjobsData.content.forEach(function (jobOb) {\n\t\t\t\t\t\t\t\tjobOb.createdDate = $filter('date')(new Date(jobOb.createdDate), 'EEE,MMM dd yyyy HH:mm:ss');\n\t\t\t\t\t\t\t\t$scope.allJobs.push(jobOb);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n                        function (response) {\n                            toastr.error(Utilities.getAlerts(response.status));\n                        }\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.getCitiesList = function () {\n\t\t\t\t\t$scope.citiesList = [];\n\t\t\t\t\tJobsSvc.getCitiesList().then(\n\t\t\t\t\t\tfunction (response) {\n\t\t\t\t\t\t\tresponse.forEach(function (obj) {\n\t\t\t\t\t\t\t\t$scope.citiesList.push(obj);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.searchForJobs = function () {\n                    $scope.searchMode = true;\n\t\t\t\t\t$scope.JobsSearch.pageNumber=  0;\n\t\t\t\t\t$scope.JobsSearch.pageSize= $scope.pageSize;\n\t\t\t\t\t$scope.JobsSearch.criteriaDetails= $scope.searchText;\n\t\t\t\t\t$scope.JobsSearch.criteriaType= Constants.jobsSearchCriteriaType.JOBS_CRITERIA_TYPE_JOB_TITLE;\n\t\t\t\t\t$scope.getAllJobs();\n\t\t\t\t};\n\n\t\t\t\t$scope.updateSortedJobs = function () {\n\t\t\t\t\t$scope.JobsSearch.pageNumber=  0;\n\t\t\t\t\t$scope.JobsSearch.pageSize= $scope.pageSize;\n\t\t\t\t\t$scope.getAllJobs();\n\t\t\t\t};\n\n                $scope.slideToggle = function (input) {\n                    $(input).find('div').slideToggle();\n                };\n\n                $scope.getJobCriteriaList = function () {\n\n                    $scope.jobCriteriaList = [];\n\n                    JobsSvc.getJobCriteriaList().then(\n\n                        function (response) {\n                            response.forEach(function (jobCriteriaResponseObj) {\n                                // obj.open = true;\n                                // $scope.jobCriteriaList.push(obj);\n                                var jobCriteriaObj = {\n                                    \"id\": jobCriteriaResponseObj.id,\n                                    \"parent\": \"#\",\n                                    \"type\": \"folder\",\n                                    \"text\": jobCriteriaResponseObj.name,\n                                    \"state\": {\n                                        \"opened\": true\n                                    }\n                                };\n                                $scope.dragData.push(jobCriteriaObj);\n                                jobCriteriaResponseObj.jobCriteriaDetailsList.forEach(function (jobCriteriaDetailsResponseObj) {\n                                    var jobCriteriaDetailsObj = {\n                                        \"id\": jobCriteriaDetailsResponseObj.id,\n                                        \"parent\": jobCriteriaResponseObj.id,\n                                        \"text\": jobCriteriaDetailsResponseObj.name,\n                                        \"state\": {\n                                            \"opened\": true\n                                        }\n                                    };\n                                    $scope.dragData.push(jobCriteriaDetailsObj);\n                                });\n                            });\n                        },\n                        function (response) {\n                            toastr.error(Utilities.getAlerts(response.status));\n                        }\n                    );\n                };\n\n\t\t\t\t$scope.pageChanged = function(newPage) {\n\t\t\t\t\t$scope.JobsSearch.pageNumber=  newPage -1;\n\t\t\t\t\t$scope.JobsSearch.pageSize= $scope.pageSize;\n\t\t\t\t\t$scope.getAllJobs();\n\t\t\t\t};\n\n                $scope.selectNode = function(event,selected) {\n                \tif(selected.node.parent != '#'){\n                        $scope.searchMode = true;\n                \t\t\tvar jobCriteriaDetails = {\n                \t\t\t\tid:selected.node.id,\n\t\t\t\t\t\t\t\tname:selected.node.text\n\t\t\t\t\t\t\t};\n                \t\t\tvar jobCriteria = {id:selected.node.parent};\n                        $scope.filterJobs(jobCriteriaDetails,jobCriteria);\n\t\t\t\t\t}\n                }\n\n\t\t\t\t$scope.filterJobs = function (jobCriteriaDetails,jobCriteria) {\n\t\t\t\t\t$scope.JobsSearch.pageNumber=  0;\n\t\t\t\t\t$scope.JobsSearch.pageSize= $scope.pageSize;\n\t\t\t\t\tif(jobCriteria.id == Constants.jobsSearchCriteriaType.JOBS_CRITERIA_TYPE_LOCATION || jobCriteria.id == Constants.jobsSearchCriteriaType.JOBS_CRITERIA_TYPE_RECRUITER){\n\t\t\t\t\t\t$scope.JobsSearch.criteriaDetails= jobCriteriaDetails.name;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t$scope.JobsSearch.criteriaDetails= jobCriteriaDetails.id;\n\t\t\t\t\t}\n\t\t\t\t\t$scope.JobsSearch.criteriaType= jobCriteria.id;\n\t\t\t\t\t$scope.getAllJobs();\n\t\t\t\t}n\n\t\t\t\t/////////////////////////////////////////////////////////////////////////////////////\n\n\t\t\t\t$scope.viewJobsDetailsModel = function (jobDetails, index) {\n\n\t\t\t\t\t$scope.index = indexn\t\t\t\t\tJobsSvc.setViewJobData(jobDetails);\n\t\t\t\t\t// Utilities.gotoViewJobPage();\n\t\t\t\t};\n\n\t\t\t\t$scope.getUserDetails = function () {\n\n\t\t\t\t\tAccountSvc.getUser().then(\n\n\t\t\t\t\t\tfunction (userData) {\n\t\t\t\t\t\t\t$scope.user = userData;\n\t\t\t\t\t\t\tif($scope.user.userRole == 'ADMIN'){\n\t\t\t\t\t\t\t\t$scope.isAdmin = true;\n\t\t\t\t\t\t\t\t$scope.disableEditor = false;\n\t\t\t\t\t\t\t\t$scope.viewJobEditor= {\n\t\t\t\t\t\t\t\t\t\"height\": \"370\",\n\t\t\t\t\t\t\t\t\t\"removePlugins\": \"resize\"\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t$scope.isAdmin = false;\n\t\t\t\t\t\t\t\t$scope.disableEditor = true;\n\t\t\t\t\t\t\t\t$scope.viewJobEditor= {\n\t\t\t\t\t\t\t\t\t\"height\": \"470\",\n\t\t\t\t\t\t\t\t\t\"removePlugins\": \"toolbar,resize\",\n\t\t\t\t\t\t\t\t\t\"readOnly\" : \"true\"\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tfunction (response) {\n                            $scope.isAdmin = false;\n                            $scope.disableEditor = true;\n                            $scope.viewJobEditor= {\n                                \"height\": \"470\",\n                                \"removePlugins\": \"toolbar,resize\",\n                                \"readOnly\" : \"true\"\n                            };\n\t\t\t\t\t\t\t// toastr.error(Utilities.getAlerts(response.status));\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.init = function () {\n\t\t\t\t\t$scope.searchMode = false;\n\t\t\t\t\t$scope.getUserDetails();\n\t\t\t\t\t$scope.JobsSearch.pageNumber=  0;\n\t\t\t\t\t$scope.JobsSearch.pageSize= $scope.pageSize;\n\t\t\t\t\t$scope.getAllJobs();\n                    $scope.getJobCriteriaList();\n\t\t\t\t};\n\n                $scope.resetJobSearch = function () {\n                    $scope.JobsSearch = {\n                        pageNumber :'',\n                        pageSize: '',\n                        criteriaDetails:'',\n                        criteriaType:'',\n                        sortyBy: 1\n                    };\n                    $scope.searchText = '';\n                    $scope.searchMode = false;\n                    $scope.JobsSearch.pageNumber=  0;\n                    $scope.JobsSearch.pageSize= $scope.pageSize;\n                    $scope.getAllJobs();\n                };\n\n\t\t\t\t$scope.initJiewPage = function () {\n\t\t\t\t\t$scope.selectedJob.jobLocation = parseInt($scope.selectedJob.jobLocation, 10);\n\t\t\t\t\t$scope.selectedJob.jobType = parseInt($scope.selectedJob.jobType, 10);\n\t\t\t\t\t$scope.selectedJob.salaryRange = parseInt($scope.selectedJob.salaryRange, 10);\n\t\t\t\t\t$scope.getCitiesList();\n\t\t\t\t\t$scope.formProcessing = true;\n\t\t\t\t\t$scope.getUserDetails();\n\t\t\t\t\tvar key = $location.search().key;\n\t\t\t\t\tif(key!=null){\n\t\t\t\t\t\t$scope.isFromMail = true;\n\t\t\t\t\t\tJobsSvc.viewJob(key).then(\n\t\t\t\t\t\t\tfunction (obj) {\n\t\t\t\t\t\t\t\t$scope.selectedJob = obj;\n\t\t\t\t\t\t\t\t$scope.formProcessing = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t$scope.JobsCtrl = function ($scope) {\n\t\t\t\t\t$scope.applyJob = function(){\n\t\t\t\t\t\t$scope.formProcessing = true;\n\t\t\t\t\t\tJobsSvc.applyJob($scope.selectedJob).then(\n\t\t\t\t\t\t\tfunction (obj) {\n\t\t\t\t\t\t\t\t$scope.closeModal();\n\t\t\t\t\t\t\t\t// Utilities.gotoJobPage();\n\t\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('applyJobSucsessMessage'));\n\t\t\t\t\t\t\t\t$scope.formProcessing = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t\t$scope.editJob = function(){\n\t\t\t\t\t\t$scope.formProcessing = true;\n\t\t\t\t\t\tJobsSvc.saveJob($scope.selectedJob).then(\n\t\t\t\t\t\t\tfunction (obj) {\n\t\t\t\t\t\t\t\t$scope.closeModal();\n\t\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('jobContentSaveSucess'));\n\t\t\t\t\t\t\t\t$scope.formProcessing = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t\t$scope.activateJob = function(action,successMessage){\n\t\t\t\t\t\t$scope.formProcessing = true;\n\t\t\t\t\t\tJobsSvc.activateJob(action,$scope.selectedJob).then(\n\t\t\t\t\t\t\tfunction (obj) {\n\t\t\t\t\t\t\t\t$scope.closeModal();\n\t\t\t\t\t\t\t\tUtilities.gotoJobPage();\n\t\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts(successMessage));\n\t\t\t\t\t\t\t\t$scope.formProcessing = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t\t$scope.modelFunction = function () {\n\t\t\t\t\t\tif($scope.modelType=='EditJob'){\n\t\t\t\t\t\t\t$scope.editJob();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($scope.modelType=='ApplyJob'){\n\t\t\t\t\t\t\t$scope.applyJob();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($scope.modelType=='ApproveJob'){\n\t\t\t\t\t\t\t$scope.activateJob('approve','approveJobSuccessMessage');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($scope.modelType=='RejectJob'){\n\t\t\t\t\t\t\t$scope.activateJob('rejected','rejectJobSuccessMessage');\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t$scope.openAdvancedSearchModel = function () {\n\t\t\t\t\t$scope.jobModal = JobsSvc.getAdvancedSearchModal($scope, $scope.JobsCtrl);\n\t\t\t\t\t$scope.modelType='AdvancedSearch';\n\t\t\t\t};\n\n\t\t\t\t$scope.openApplyJobModel = function () {\n                    if(!$auth.isAuthenticated()){\n                        $scope.openLoginModal();\n                    }else{\n\t\t\t\t\t\t$scope.jobModal = JobsSvc.getWarningModal($scope, $scope.JobsCtrl);\n\t\t\t\t\t\t$scope.id=$scope.selectedJob.id;\n\t\t\t\t\t\t$scope.modelType='ApplyJob';\n\t\t\t\t\t\t$scope.modelTitle = Utilities.getAlerts('applyJobTitle').message;\n\t\t\t\t\t\t$scope.modelMessage = Utilities.getAlerts('applyJobMessage').message;\n                    }\n\t\t\t\t};\n\n\t\t\t\t$scope.openEditJobModel = function () {\n\t\t\t\t\t$scope.jobModal = JobsSvc.getWarningModal($scope, $scope.JobsCtrl);\n\t\t\t\t\t$scope.id=$scope.selectedJob.id;\n\t\t\t\t\t$scope.modelType='EditJob';\n\t\t\t\t\t$scope.modelTitle = Utilities.getAlerts('editJobTitle').message;\n\t\t\t\t\t$scope.modelMessage = Utilities.getAlerts('editJobMessage').message;\n\t\t\t\t};\n\n\t\t\t\t$scope.openApproveJobModel = function () {\n\t\t\t\t\t$scope.jobModal = JobsSvc.getWarningModal($scope, $scope.JobsCtrl);\n\t\t\t\t\t$scope.id=$scope.selectedJob.id;\n\t\t\t\t\t$scope.modelType='ApproveJob';\n\t\t\t\t\t$scope.modelTitle = Utilities.getAlerts('approveJobTitle').message;\n\t\t\t\t\t$scope.modelMessage = Utilities.getAlerts('approveJobMessage').message;\n\t\t\t\t};\n\n\t\t\t\t$scope.openRejectJobModel = function () {\n\t\t\t\t\t$scope.jobModal = JobsSvc.getWarningModal($scope, $scope.JobsCtrl);\n\t\t\t\t\t$scope.id=$scope.selectedJob.id;\n\t\t\t\t\t$scope.modelType='RejectJob';\n\t\t\t\t\t$scope.modelTitle = Utilities.getAlerts('rejectJobTitle').message;\n\t\t\t\t\t$scope.modelMessage = Utilities.getAlerts('rejectJobMessage').message;\n\t\t\t\t};\n\n\t\t\t\t$scope.backButton = function () {\n\t\t\t\t\tUtilities.gotoJobPage();\n\t\t\t\t};\n\n\t\t\t\t$scope.closeModal = function () {\n\t\t\t\t\t$scope.jobModal.dismiss();\n\t\t\t\t};\n\n                $scope.openLoginModal = function () {\n                    $rootScope.loginModal = true;\n                    $scope.modalInstance = $uibModal.open({\n                        animation: true,\n                        templateUrl: 'app/pages/auth/templates/login.html',\n                        controller:'AuthCtrl'\n                    });\n                };\n\n\t\t\t\t$scope.redirectToProfilePage = function () {\n\n\t\t\t\t\tvar key = $location.search().key;\n\n\t\t\t\t\tJobsSvc.activateJob(key,2,$scope.selectedJob).then(\n\t\t\t\t\t\tfunction () {\n\n\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('jobActivateSaveSucess'));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (response) {\n\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts(response.status));\n\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\t        }\n\n\n\t    ]);\n\n\n    angular.module('MyCvTracker.pages.jobs')\n\n        .factory('JobsSvc', ['toastr', 'RestConfig', '$injector','Utilities',\n\n            function (toastr, RestConfig, $injector,Utilities) {\n\n                var viewJobData = {};\n                function setViewJobData(data) {\n                    viewJobData = data;\n                }\n                function getViewJobData() {\n                    return viewJobData;\n                }\n\n                return  {\n\n                    getJobs: function (jobsSearchObj) {\n\n                        var url = Utilities.getJobsListUrl();\n                        return RestConfig.getJobs(url,jobsSearchObj);\n                    },\n\n                    getJobCriteriaList: function (currentPage,pageSize) {\n\n                        var url = Utilities.getJobCriteriaListUrl();\n                        return RestConfig.getJobCriteriaList(url);\n                    },\n\n                    getCitiesList: function () {\n\n                        var url = Utilities.getCitiesListUrl();\n                        return RestConfig.getCitiesList(url);\n                    },\n\n                    viewJob: function (key) {\n\n                        var url = Utilities.getViewJobUrl();\n                        return RestConfig.viewJob(url,key);\n                    },\n\n                    activateJob: function (actionParam,object) {\n\n                        var url = Utilities.getActivateJobUrl();\n                        return RestConfig.activateJob(url,actionParam,object);\n                    },\n\n                    getViewJobDetailsModal: function (scope, ctrlName) {\n\n                        var modalOpts = {\n                            templateUrl: '/app/pages/jobs/templates/view_job.html',\n                            controller: ctrlName,\n                            scope: scope\n                        };\n\n                        return $injector.get('$uibModal').open(modalOpts);\n\n                    },\n\n                    saveJob: function (obj) {\n\n                        var url = Utilities.getEditJobUrl();\n                        return RestConfig.saveJob(url, obj);\n                    },\n\n                    getWarningModal: function (scope, ctrlName) {\n\n                        var modalOpts = {\n                            templateUrl: '/app/pages/resumes/templates/warning.html',\n                            controller: ctrlName,\n                            scope: scope\n                        };\n\n                        return $injector.get('$uibModal').open(modalOpts);\n                    },\n\n                    applyJob: function (obj) {\n\n                        var url = Utilities.getApplyJobUrl();\n                        return RestConfig.applyJob(url, obj);\n                    },\n\n                    getEditJobModal: function (scope, ctrlName) {\n\n                        var modalOpts = {\n                            templateUrl: '/app/pages/jobs/templates/edit_job.html',\n                            controller: ctrlName,\n                            scope: scope\n                        };\n\n                        return $injector.get('$uibModal').open(modalOpts);\n\n                    },\n                    getAdvancedSearchModal: function (scope, ctrlName) {\n\n                        var modalOpts = {\n                            templateUrl: '/app/pages/jobs/templates/advanced_search.html',\n                            controller: ctrlName,\n                            scope: scope\n                        };\n\n                        return $injector.get('$uibModal').open(modalOpts);\n\n                    },\n                    setViewJobData: setViewJobData,\n                    getViewJobData: getViewJobData\n                };\n            }\n        ]);\n\nangular.module(\"MyCvTracker.pages.jobList\")\n  .factory(\"JobSpecListService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    function (\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        listJobSpecs: function(page, title, location) {\n          var url = utilities.getJobSpecListUrl() + \"?page=\" + page;\n          if (!!title) {\n            url = url + \"&title=\" + title;\n          }\n          if (!!location) {\n            url = url + \"&location=\" + location;\n          }\n\n          return RestConfig.getJobSpecList(url);\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.jobList\")\n  .controller(\"JobSpecListCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location\n    ) {\n      var Utilities = $injector.get(\"Utilities\");\n      var mainSvc = $injector.get(\"JobSpecListService\");\n\n      $scope.searchForm = {\n        title : \"\",\n        location : \"\",\n        page : 1,\n      };\n      $scope.listJob = [];\n      $scope.loading = false;\n      $scope.hasNext = true;\n\n      $scope.getJobList = function () {\n        $scope.loading = true;\n\n        var page = $scope.searchForm.page;\n        var title = $scope.searchForm.title;\n        var location = $scope.searchForm.location;\n\n        mainSvc.listJobSpecs(page, title, location)\n          .then(function (rpData) {\n            var len = rpData.length;\n            if (len > 0) {\n              for (var i = 0; i < len; i++) {\n                var newJob = rpData[i];\n                if (!!newJob.referralTargetSubject && !!newJob.jobLocation && !!newJob.jobType) {\n                  $scope.listJob.push(newJob);\n                }\n              }\n            }\n            $scope.loading = false;\n            $scope.hasNext = len >= 12;\n          });\n      };\n\n      $scope.searchJobList = function () {\n        $scope.searchForm.page = 1;\n        $scope.listJob = [];\n        $scope.getJobList();\n      };\n\n      $scope.loadMore = function () {\n        $scope.searchForm.page += 1;\n        $scope.getJobList();\n      };\n\n      $scope.getFormattedPostDate = function (utc) {\n        if (!!utc) {\n          var dateObj = new Date(utc + \"Z\");\n\n          var date = dateObj.getDate();\n          date = date < 10 ? (\"0\" + date) : (\"\" + date);\n          var month = dateObj.getMonth();\n          month = month < 10 ? (\"0\" + month) : (\"\" + month);\n          var hour = dateObj.getHours();\n          hour = hour < 10 ? (\"0\" + hour) : (\"\" + hour);\n          var minutes = dateObj.getMinutes();\n          minutes = minutes < 10 ? (\"0\" + minutes) : (\"\" + minutes);\n          return date + \"/\" + month + \"/\" + dateObj.getFullYear() + \" \" + hour + \":\" + minutes;\n        }\n\n        return \"\";\n      };\n\n      $scope.getLink = function(refCode, title) {\n        var url = \"job-spec.html?\" + \"ref=\" +  refCode + \"&title=\" + encodeURIComponent(title);\n        return url;\n      }\n\n      $scope.init = function () {\n        $scope.getJobList();\n      };\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.resumeListing\")\n  .controller(\"ResumesListingCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location\n    ) {\n      var NO_RECORDS = 12;\n      var Utilities = $injector.get(\"Utilities\");\n      var mainSvc = $injector.get(\"ResumesListingService\");\n\n      var userDetail = Authorization.getUserDetails();\n      var role = !!userDetail ? Authorization.getUserRole() : \"\";\n      var isAdmin =  role=== \"ADMIN\";\n      var isReviewer =  role=== \"REVIEWER\";\n      var isRecruiter =  role=== \"RECRUITER\";\n      var isManagement = isAdmin || isReviewer || isRecruiter;\n\n      $scope.listResumes = [];\n      $scope.loadInfo = {\n        page : 1,\n        hasNext : false,\n        loading : false,\n        isAdmin : isAdmin,\n        isReviewer : isReviewer,\n        isRecruiter : isRecruiter,\n        isManagement : isManagement\n      };\n      $scope.extendModal = null;\n      $scope.extendForm = {\n        days : 7,\n        extendOriginal : false,\n        resume : null,\n        extending : false\n      };\n      $scope.cvBoxForm = {\n        resume : null,\n        selectedReferralId : -1,\n        findingBox : false,\n        foundBoxes : null,\n        boxName : \"\",\n        addingToBox : false\n      };\n      $scope.jobCategorizingForm = {\n        resumeId : null,\n        skills : []\n      };\n\n      $scope.getResume = function () {\n        $scope.loadInfo.loading = true;\n\n        var page = $scope.loadInfo.page;\n        mainSvc.listResumes(page, NO_RECORDS)\n          .then(function (rpData) {\n            var len = rpData.length;\n            if (len > 0) {\n              var hasNext = len >= NO_RECORDS;\n              if (hasNext) {\n                len = NO_RECORDS;\n              }\n\n              for (var i = 0; i < len; i++) {\n                var resume = rpData[i];\n                initExpiration(resume);\n                $scope.listResumes.push(resume);\n              }\n\n              $scope.loadInfo.hasNext = hasNext;\n              $scope.loadInfo.loading = false;\n            }\n          });\n      };\n\n      $scope.toggleListingActive = function (resume) {\n        var timeout = resume.timeout;\n        if (!!timeout) {\n          clearTimeout(timeout);\n        }\n\n        var id = resume.id;\n        var listingActive = !resume.listingActive;\n        resume.listingActive = listingActive;\n\n        resume.timeout = setTimeout(function () {\n          mainSvc.updateResumeListingStatus(id, listingActive);\n        }, 1000);\n      };\n\n      $scope.loadMore = function () {\n        $scope.loadInfo.page++;\n        $scope.getResume();\n      };\n\n      $scope.findCvBox = function() {\n        if ($scope.cvBoxForm.findingBox) return;\n\n        $scope.cvBoxForm.findingBox = true;\n        $scope.cvBoxForm.foundBoxes = [];\n        $scope.cvBoxForm.selectedReferralId = -1;\n        var name = $scope.cvBoxForm.boxName;\n\n        mainSvc.findCvBoxByName(name).then(function(data) {\n          $scope.cvBoxForm.foundBoxes = data;\n          $scope.cvBoxForm.findingBox = false;\n        });\n      }\n\n      $scope.addCvToBox = function() {\n        if ($scope.cvBoxForm.addingToBox) return;\n\n        $scope.cvBoxForm.addingToBox = true;\n        var selectedReferralId = $scope.cvBoxForm.selectedReferralId;\n        var resumeId = $scope.cvBoxForm.resume.id;\n\n        mainSvc.addResumeToCvBox(selectedReferralId, resumeId).then(function() {\n          toastr.success(\"Resume has been added to cv box successfully.\");\n          $scope.closeModal();\n        }).catch(function() {\n          toastr.error(\"Adding resume to cv box has failed!\");\n          $scope.closeModal();\n        });\n      }\n\n      $scope.getFormattedPostDate = function (utc) {\n        if (!!utc) {\n          var dateObj = new Date(utc);\n\n          var date = dateObj.getDate();\n          date = date < 10 ? (\"0\" + date) : (\"\" + date);\n          var month = dateObj.getMonth() + 1;\n          month = month < 10 ? (\"0\" + month) : (\"\" + month);\n          var hour = dateObj.getHours();\n          hour = hour < 10 ? (\"0\" + hour) : (\"\" + hour);\n          var minutes = dateObj.getMinutes();\n          minutes = minutes < 10 ? (\"0\" + minutes) : (\"\" + minutes);\n          return date + \"/\" + month + \"/\" + dateObj.getFullYear() + \" \" + hour + \":\" + minutes;\n        }\n\n        return \"\";\n      };\n\n      $scope.getFormattedDate = function (utc) {\n        if (!!utc) {\n          var dateObj = new Date(utc);\n\n          var date = dateObj.getDate();\n          date = date < 10 ? (\"0\" + date) : (\"\" + date);\n          var month = dateObj.getMonth() + 1;\n          month = month < 10 ? (\"0\" + month) : (\"\" + month);\n          var hour = dateObj.getHours();\n          hour = hour < 10 ? (\"0\" + hour) : (\"\" + hour);\n          var minutes = dateObj.getMinutes();\n          minutes = minutes < 10 ? (\"0\" + minutes) : (\"\" + minutes);\n          return date + \"/\" + month + \"/\" + dateObj.getFullYear();\n        }\n\n        return \"\";\n      };\n\n      function isExpired(date) {\n        var now = new Date();\n        return (!!date && now.getTime() > date.getTime());\n      }\n\n      function initExpiration(resume) {\n        var maskedExpiresAt = resume.previewExpiresAt;\n        var originalExpiresAt = resume.originalPreviewExpiresAt;\n\n        if (!!maskedExpiresAt) {\n          var dateObj = new Date(maskedExpiresAt);\n          resume.maskedExpired = isExpired(dateObj);\n        }\n\n        if (!!originalExpiresAt) {\n          var dateObj = new Date(originalExpiresAt);\n          resume[\"originalExpired\"] = isExpired(dateObj);\n        }\n      }\n\n      function extendResumeDays(resume, noOfDays, extendOriginal) {\n        var now = new Date();\n        var maskedExpiresAt = resume.previewExpiresAt;\n        var originalExpiresAt = resume.originalPreviewExpiresAt;\n\n        var dateObj = null;\n        if (!extendOriginal) {\n           dateObj = new Date(maskedExpiresAt);\n        } else {\n          dateObj = new Date(originalExpiresAt);\n        }\n\n        if (now.getTime() > dateObj.getTime()) {\n          dateObj = now;\n        }\n\n        dateObj.setDate(dateObj.getDate() + noOfDays);\n        if (!extendOriginal) {\n          resume.previewExpiresAt = dateObj.toISOString();\n        } else {\n          resume.originalPreviewExpiresAt = dateObj.toISOString();\n        }\n        initExpiration(resume);\n      }\n\n      $scope.openExtendModal = function(resume, original) {\n        $scope.extendForm.resume = resume;\n        $scope.extendForm.extendOriginal = original;\n        $scope.extendModal = mainSvc.getAdminExtendResumeModal($scope, \"ReferalModalCtrl\");\n      }\n\n      $scope.openAddToCvBoxModal = function(resume) {\n        $scope.cvBoxForm.resume = resume;\n        $scope.extendModal = mainSvc.getCvBoxSelectionModal($scope, \"ReferalModalCtrl\");\n      }\n\n      $scope.openUpdateSkillModal = function (id) {\n        mainSvc.getResumeCategories(id).then(function(data) {\n          $scope.jobCategorizingForm.skills = data;\n        });\n        $scope.extendModal = mainSvc.getUpdatingResumeSkillModal($scope, \"ReferalModalCtrl\");\n      };\n\n      $scope.closeModal = function () {\n        $scope.extendModal.dismiss();\n        $scope.extendForm.days = 7;\n        $scope.extendForm.extending = false;\n        $scope.extendForm.resume = null;\n        $scope.cvBoxForm = {\n          resume : null,\n          selectedReferralId : -1,\n          findingBox : false,\n          foundBoxes : null,\n          boxName : \"\"\n        };\n        $scope.jobCategorizingForm.skills = [];\n      }\n\n      $scope.extendResume = function() {\n        $scope.extendForm.extending = true;\n        var resume = $scope.extendForm.resume;\n        var resumeId = resume.id;\n        var extendOriginal = $scope.extendForm.extendOriginal;\n        var extendDays = $scope.extendForm.days;\n        mainSvc.extendResumePreview(resumeId, extendOriginal, extendDays).then(function() {\n          extendResumeDays(resume, extendDays, extendOriginal);\n          $scope.closeModal();\n          var msg = Utilities.getAlerts(\"extendResumeSuccessMessage\");\n          toastr.success(msg, \"Success\");\n        }).catch(function() {\n          $scope.closeModal();\n          var msg = Utilities.getAlerts(\"extendResumeSuccessFail\");\n          toastr.error(msg, \"Error\");\n        });\n      }\n\n      $scope.removeCategoryFromList = function(idx) {\n        $scope.jobCategorizingForm.categories.splice(idx, 1);\n      }\n\n      $scope.addCategoryToList = function() {\n        var newCategoryId = $scope.jobCategorizingForm.newCategoryId;\n        if (!newCategoryId) return;\n        newCategoryId = parseInt(newCategoryId);\n\n        // check whether new category exist\n        for (var i = 0, len = $scope.jobCategorizingForm.categories.length; i < len; i++) {\n          var category = $scope.jobCategorizingForm.categories[i];\n          if (newCategoryId === category.categoryId) {\n            $scope.jobCategorizingForm.newCategoryId = null;\n            return;\n          }\n        }\n\n        var categories = $scope.jobCategorizingForm.defaultCategories;\n        for (var i = 0, len = categories.length; i < len; i++) {\n          var category = categories[i];\n          var id = category.id;\n          var name = category.name;\n\n          if (id === newCategoryId) {\n            $scope.jobCategorizingForm.categories.push({\n              categoryId : id,\n              name : name\n            });\n            $scope.jobCategorizingForm.newCategoryId = null;\n            break;\n          }\n        }\n      }\n\n      $scope.categorizeJob = function() {\n        if ($scope.jobCategorizingForm.updating) return;\n        $scope.jobCategorizingForm.updating = true;\n\n        var resumeId = $scope.jobCategorizingForm.resumeId;\n        var categoryIds = [];\n        var categories = $scope.jobCategorizingForm.categories;\n        for (var i = 0, len = categories.length; i < len; i++) {\n          categoryIds.push(categories[i].categoryId);\n        }\n\n        mainSvc.categorizeResumeSkills(resumeId, categoryIds).then(function() {\n          toastr.success(\"Resume has been updated successfully.\", \"Success\");\n          $scope.closeModal();\n        }).catch(function() {\n          toastr.error(\"Updating resume has failed!\", \"Failed\");\n          $scope.closeModal();\n        });\n      }\n\n      $scope.addNewResumeModel = function () {\n\n        $scope.resumeModal = mainSvc.getNewResumeModal($scope, \"ResumeCtrl\");\n        $scope.myFile = null;\n        $scope.id = null;\n        $scope.resumeTitle = null;\n        $scope.resumeType = null;\n      };\n\n      $scope.closeNewResumeModal = function() {\n        $scope.resumeModal.dismiss();\n        $scope.myFile = null;\n        $scope.id = null;\n        $scope.resumeTitle = null;\n        $scope.resumeType = null;\n      };\n\n      //Save Resume Function, Used for both new and edit resume\n      $scope.saveMyResume = function (\n        file,\n        resumeTitle,\n        resumeType\n      ) {\n        if ($scope.formProcessing) {\n          return;\n        }\n        $scope.formProcessing = true;\n\n        var fd = new FormData();\n        const userEmail = userDetail.email;\n        fd.append(\"userEmail\", userEmail);\n        fd.append(\"file\", file);\n        fd.append(\"resumeReference\", resumeTitle);\n        fd.append(\"resumeType\", resumeType);\n        fd.append(\"resumeReviewer\", \"randeep\");\n\n        //ResumesSvc.saveMyResume(fd).\n        //This must be changed to call the service layer\n        var url = Utilities.getSaveResumesUrl();\n        console.log(\"url\", url);\n        $http.post(url, fd, {\n          transformRequest : angular.identity,\n          headers : { \"Content-Type\" : undefined }\n        })\n          .success(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            console.log(\"success\");\n            $scope.closeNewResumeModal();\n            // $rootScope.$broadcast(\"quickCV\");\n            toastr.success(Utilities.getAlerts(\"resumeAddedSuccess\").message);\n\n            $scope.listResumes.unshift(data);\n            $scope.formProcessing = false;\n          })\n          .error(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            console.log(\"error\");\n            $scope.formProcessing = false;\n            $scope.closeNewResumeModal();\n\n            if (data.message == \"resumeSaveTitleDuplicatedError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveTitleDuplicatedError\").message);\n            } else if (data.message == \"resumeSaveTypeDuplicatedError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveTypeDuplicatedError\").message);\n            } else if (data.message == \"resumeSaveLimitError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveLimitError\").message);\n            } else if (data.message == \"resumeSaveNameDuplicatedError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveNameDuplicatedError\").message);\n            } else {\n              toastr.error(Utilities.getAlerts(\"defaultError\"));\n            }\n          });\n      };\n\n      $scope.editLinkForm = {\n        selectedResume : null,\n        linkId : \"\",\n        type : null,\n        inUse : false,\n        editing : false\n      };\n      $scope.closeEditPreviewLinkModal = function() {\n        $scope.resumeModal.dismiss();\n        $scope.editLinkForm.selectedResume = null;\n        $scope.editLinkForm.linkId = \"\";\n        $scope.editLinkForm.type = null;\n        $scope.editLinkForm.editing = false;\n        $scope.editLinkForm.inUse = false;\n      }\n\n      $scope.openEditPreviewLink = function (\n        resume,\n        type\n      ) {\n        $scope.editLinkForm.selectedResume = resume;\n        var linkId = \"\";\n        if (type === \"MASKED\") {\n          linkId = !!resume.maskedLinkId ? resume.maskedLinkId : \"\";\n        } else {\n          linkId = !!resume.originalLinkId ? resume.originalLinkId : \"\";\n        }\n        $scope.editLinkForm.linkId = linkId;\n        $scope.editLinkForm.type = type;\n\n        $scope.resumeModal = mainSvc.getEditPreviewLinkModal($scope, \"ResumeCtrl\");\n      };\n\n      $scope.editResumeLink = function () {\n        var linkId = $scope.editLinkForm.linkId;\n        var resumeId = $scope.editLinkForm.selectedResume.id;\n        var type = $scope.editLinkForm.type;\n\n        mainSvc.updateResumeLink(resumeId, linkId, type)\n          .then(function () {\n            if (type === \"MASKED\") {\n              $scope.editLinkForm.selectedResume.maskedLinkId = linkId;\n            } else if (type === \"ORIGINAL\") {\n              $scope.editLinkForm.selectedResume.originalLinkId = linkId;\n            }\n\n            toastr.success(\"Preview link has been updated successfully.\");\n            $scope.closeEditPreviewLinkModal();\n          })\n          .catch(function () {\n            toastr.error(\"Updating preview link has failed!\", \"Error\");\n            $scope.closeEditPreviewLinkModal();\n          });\n      };\n\n      $scope.checkPreviewId = function () {\n        if ($scope.editLinkForm.editing) return;\n        $scope.editLinkForm.editing = true;\n\n        var linkId = $scope.editLinkForm.linkId;\n        if (!linkId) {\n          $scope.editLinkForm.editing = false;\n          return;\n        }\n\n        var resumeId = $scope.editLinkForm.selectedResume.id;\n        var type = $scope.editLinkForm.type;\n\n        mainSvc.checkResumePreviewLink(linkId)\n          .then(function () {\n            $scope.editResumeLink();\n          })\n          .catch(function () {\n            $scope.editLinkForm.inUse = true;\n            $scope.editLinkForm.editing = false;\n          });\n      };\n\n      $scope.init = function () {\n        $scope.getResume();\n\n        mainSvc.getListSkillCategories()\n          .then(function (data) {\n            $scope.jobCategorizingForm.defaultCategories = data;\n          });\n      };\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.resumeListing\")\n  .controller(\"ExtendResumeModalCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.resumeListing\")\n  .controller(\"ResumeCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var Utilities = $injector.get(\"Utilities\");\n\n      $scope.saveResume = function () {\n        var file = $scope.myFile;\n        var resumeTitle = $scope.resumeTitle;\n        var resumeType = $scope.resumeType;\n        if (file != null && file.size >= 5000000) {\n          $scope.addAlert(Utilities.getAlerts(\"InputFileInputSizeValidation\"));\n          $scope.myFile = null;\n          return false;\n        }\n        if (file != null) {\n          $scope.saveMyResume(file, resumeTitle, resumeType);\n        } else {\n          $scope.addAlert(Utilities.getAlerts(\"InputFileInputRequiredValidation\"));\n        }\n\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.resumeListing\")\n  .factory(\"ResumesListingService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    \"Constants\",\n    function (\n      toastr,\n      RestConfig,\n      $injector,\n      Constants\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        listResumes : function (\n          page,\n          size\n        ) {\n          var url = utilities.getListingResumeUrl() + \"?page=\" + page + \"&noOfRecords=\" + size;\n          return RestConfig.listingResumes(url);\n        },\n        updateResumeListingStatus : function (resumeId, listing) {\n          var url = utilities.updateListingResumeStatusUrl() + \"?listing=\" + listing;\n          url = url.replace(\"{resumeId}\", resumeId);\n\n          return RestConfig.toggleResumeListing(url);\n        },\n        getAdminExtendResumeModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/list-resumes/templates/extend-resume-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        }, extendResumePreview: function(resumeId, original, extendDays) {\n          var url = Constants.baseUrl + \"/user/resume/preview/extend\";\n          return RestConfig.extendResumePreviewForAdmin(url, resumeId, original, extendDays);\n        },\n        getCvBoxSelectionModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/list-resumes/templates/cv-box-selection-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getUpdatingResumeSkillModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/list-resumes/templates/categorizing-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        }, getListSkillCategories : function() {\n          return RestConfig.listSkillCategories();\n        }, findCvBoxByName : function (\n          name\n        ) {\n          return RestConfig.findCvBox(name);\n        }, addResumeToCvBox : function (\n          referralId,\n          resumeId\n        ) {\n          return RestConfig.addResumeToCvBox(referralId, resumeId);\n        }, getResumeCategories : function(resumeId) {\n          return RestConfig.listCategoriesOfResume(resumeId);\n        }, categorizeResumeSkills : function(resumeId, categoryIds) {\n          return RestConfig.updateResumeSkillCategories(resumeId, categoryIds);\n        },\n        getNewResumeModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/list-resumes/templates/new_resume.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        },\n        getEditPreviewLinkModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/list-resumes/templates/edit-link.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        },\n        checkResumePreviewLink : function (id) {\n          return RestConfig.checkUniquePreviewLink(id);\n        },\n        updateResumeLink : function (resumeId, linkId, type) {\n          return RestConfig.updateResumePreviewLink(resumeId, linkId, type);\n        },\n      };\n    }\n  ]);\n\n\n\n     angular.module('MyCvTracker.pages.notifications')\n\n    \t.factory('NotificationsSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\t\t\t\tvar Utilities = $injector.get('Utilities');\n\t\t\t\treturn {\n\t\t\t\t\tgetMyNotifications: function (userId) {\n\t\t\t\t\t\tvar url = Utilities.getMyNotificationsUrl();\n\t\t\t\t\t\treturn RestConfig.getMyNotifications(url);\n\t\t\t\t\t},\n\t\t\t\t\tviewFullNotifications: function (notificationId,isLimited) {\n\t\t\t\t\t\tvar Utilities = $injector.get('Utilities');\n\n\t\t\t\t\t\tvar url = Utilities.getViewNotificationsUrl()  + notificationId + '&isLimited=' + isLimited;\n\t\t\t\t\t\treturn RestConfig.viewFullNotifications(url);\n\t\t\t\t\t},\n\n\t\t\t\t\tgetViewNotificationsModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/notifications/templates/view_notifications.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n                            size: 'lg',\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t}\n        ]);\n\n/**\n * Created by Hisham on 5/26/2015.\n */\nangular.module('MyCvTracker.pages.notifications')\n    .factory(\"PushNotificationsSvc\", ['$q', '$timeout', 'Constants','$injector', function ($q, $timeout, Constants,$injector) {\n\n\n        var connected = false;\n        var service = {}, listener = $q.defer(), socket = {\n            client: null,\n            stomp: null\n        }, messageIds = [];\n\n        service.receive = function () {\n            return listener.promise;\n        };\n\n        service.send = function (message) {\n            if(connected){\n                socket.stomp.send(Constants.websocket.sendUrl, {}, message);\n            }\n        };\n\n        service.isConnected = function () {\n            return connected;\n        };\n\n        var reconnect = function () {\n            $timeout(function () {\n                initialize();\n            }, Constants.websocket.reconnect);\n        };\n\n        var getMessage = function (data) {\n            return JSON.parse(data.body);\n        };\n\n        var startListener = function () {\n            socket.stomp.subscribe(Constants.websocket.notificationsDestination, function (data) {\n                listener.notify(getMessage(data));\n                return getMessage(data);\n            });\n            return listener.promise;\n            connected = true;\n        };\n\n        var initialize = function () {\n            socket.client = new SockJS(Constants.websocket.webSocketUrl);\n            socket.stomp = Stomp.over(socket.client);\n            socket.stomp.connect({}, startListener);\n            socket.stomp.onclose = reconnect;\n            service.send('data');\n        };\n\n        initialize();\n        return service;\n    }]);\nangular.module(\"MyCvTracker.pages.notifications\")\n\n  .controller(\"NotificationsCtrl\", [\n    \"toastr\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"$filter\",\n\n    function (\n      toastr,\n      $scope,\n      $injector,\n      $http,\n      $filter\n    ) {\n      // Variables initialization\n      var Utilities = $injector.get(\"Utilities\");\n      var NotificationsSvc = $injector.get(\"NotificationsSvc\");\n\n      //Used scopes\n      $scope.user = {\n        myNotifications : [],\n        viewNotifications : []\n      };\n      $scope.modalNotifications = [];\n      $scope.modalNotiCount = 0;\n      $scope.isFullLoaded = false;\n\n      //Listing Notifications Function\n      $scope.getMyNotifications = function () {\n\n        $scope.user.myNotifications = [];\n\n        NotificationsSvc.getMyNotifications()\n          .then(\n            function (notificationsData) {\n              notificationsData.forEach(function (notifications) {\n                notifications.lastTrackedTime = $filter(\"date\")(\n                  new Date(notifications.lastTrackedTime),\n                  \"EEE,MMM dd yyyy HH:mm:ss\"\n                );\n                $scope.user.myNotifications.push(notifications);\n              });\n            }\n          );\n      };\n\n\n      //deleting Notifications Function\n      $scope.deleteNotification = function (\n        notificationId,\n        index\n      ) {\n        var url = Utilities.getDeleteNotificationsUrl() + \"?id=\" + notificationId;\n        $http.delete(url, {\n          transformRequest : angular.identity,\n          headers : { \"Content-Type\" : undefined }\n        })\n          .success(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            $scope.getMyNotifications();\n            toastr.success(Utilities.getAlerts(\"deleteNotificationSuccess\"));\n            $scope.modalNotifications.splice(index, 1);\n          })\n          .error(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            $scope.closeModal();\n            if (data.message == \"notificationDeleteLeastError\") {\n              toastr.error(Utilities.getAlerts(\"notificationDeleteLeastError\"));\n            } else {\n              toastr.error(Utilities.getAlerts(\"defaultError\"));\n            }\n          });\n      };\n\n      //Listing Notifications Function\n      $scope.viewFullNotifications = function (\n        notificationId,\n        isLimited,\n        count,\n        isFull\n      ) {\n        if (isFull) {\n          $scope.isFullLoaded = true;\n        }\n        $scope.modalNotiCount = count;\n\n        NotificationsSvc.viewFullNotifications(notificationId, isLimited)\n          .then(\n            function (notificationsData) {\n              $scope.modalNotifications = [];\n              notificationsData.forEach(function (notifications) {\n                notifications.lastTrackedTime = $filter(\"date\")(\n                  new Date(notifications.lastTrackedTime),\n                  \"EEE,MMM dd yyyy HH:mm:ss\"\n                );\n                $scope.modalNotifications.push(notifications);\n              });\n\n              // viewFullNotifications($scope.user.myNotifications);\n              if (!isFull) {\n                $scope.notificationsModal = NotificationsSvc.getViewNotificationsModal($scope, \"NotificationsCtrlModal\");\n              }\n            }\n          );\n      };\n\n      //Close the resume model function\n      $scope.closeModal = function () {\n        $scope.notificationsModal.dismiss();\n        $scope.modalNotifications = [];\n        $scope.modalNotiCount = 0;\n        $scope.isFullLoaded = false;\n      };\n\n      $scope.init = function () {\n        $scope.getMyNotifications();\n      };\n\n      $scope.init();\n    }\n  ])\n  .controller(\"NotificationsCtrlModal\", [\n    \"toastr\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"$filter\",\n\n    function (\n      toastr,\n      $scope,\n      $injector,\n      $http,\n      $filter\n    ) {\n      var Utilities = $injector.get(\"Utilities\");\n      // $scope.closeModal = function (reason) {\n      //\n      //   $scope.notificationsModal.dismiss();\n      //   Utilities.gotoNotificationsPage();\n      //   //$modalInstance.close(reason);\n      // };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.notifications\")\n  .directive(\"fileModel\", [\n    \"$parse\",\n    function ($parse) {\n      return {\n        restrict : \"A\",\n        link : function (\n          scope,\n          element,\n          attrs\n        ) {\n          var model = $parse(attrs.fileModel);\n          var modelSetter = model.assign;\n\n          element.bind(\"change\", function () {\n            scope.$apply(function () {\n              modelSetter(scope, element[0].files[0]);\n            });\n          });\n        }\n      };\n    }\n  ]);\n\n\n\tangular.module('MyCvTracker.pages.notes')\n\t  \t\t.controller('NotesCtrl', ['toastr', '$scope', '$injector', '$http', '$filter','$window',\n\n\t\t\tfunction (toastr, $scope, $injector, $http, $filter,$window) {\n\n\t\t\t\tvar Utilities = $injector.get('Utilities');\n\t\t\t\tvar NotesSvc = $injector.get('NotesSvc');\n\t\t\t\tvar AccountSvc = $injector.get('AccountSvc');\n\n\t\t\t\t//$scope.notesModal = {};\n\t\t\t\t//Used scopes\n\t\t\t\t$scope.user = {\n\t\t\t\t\tmyNotes: [],\n\t\t\t\t\trole : ''\n\t\t\t\t};\n\n                $scope.busy = false;\n                $scope.stopScroll = false;\n                var count = 5;\n                var page = 1;\n\n                //Get User Details Function\n                $scope.getUserDetails = function () {\n\n                    AccountSvc.getUser().then(\n\n                        function (userData) {\n\n                            $scope.user.role = userData.userRole;\n                        },\n\n                        function (response) {\n                            toastr.error(Utilities.getAlerts(response.status));\n                        }\n                    );\n                };\n\n\t\t\t\t$scope.getMyNotes = function () {\n                    if ($scope.busy) return;\n                    $scope.busy = true;\n\n\t\t\t\t\tNotesSvc.getMyNotes(page,count).then(\n\n\t\t\t\t\t\tfunction (notesData) {\n\t\t\t\t\t\t\tnotesData.content.forEach(function (note) {\n\t\t\t\t\t\t\t\tnote.createdDate = $filter('date')(new Date(note.createdDate), 'EEE,MMM dd yyyy HH:mm:ss');\n\t\t\t\t\t\t\t\t$scope.user.myNotes.push(note);\n\t\t\t\t\t\t\t});\n                            $scope.total = notesData.totalElements;\n                            if(count*page>=$scope.total) $scope.stopScroll = true;\n                            page++;\n                            $scope.busy = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n                // SCROLL\n                $scope.addMoreItems = function() {\n                    $scope.getMyNotes();\n                };\n\n\t\t\t\t/////////////////////////////////////////////////////////////////////////////////////\n\t\t\t\t//open edit Notes Model Function\n\t\t\t\t$scope.editNotesModel = function (note) {\n\n\t\t\t\t\t$scope.selectedNote =  {\n\t\t\t\t\t\tid : note.id,\n\t\t\t\t\t\ttoRecruiter : note.toRecruiter,\n\t\t\t\t\t\trecruiter : note.recruiter,\n\t\t\t\t\t\tagency : note.agency,\n\t\t\t\t\t\tsubject : note.subject,\n\t\t\t\t\t\tcontent : note.content,\n\t\t\t\t\t\tresumeId : note.resumeId,\n\t\t\t\t\t\tuserId : note.userId,\n\t\t\t\t\t\tnotes : note.notes,\n\t\t\t\t\t\tcreatedDate : note.createdDate\n\t\t\t\t\t};\n\t\t\t\t\t$scope.notesModal = NotesSvc.getEditNotesModal($scope, 'NotesCtrl');\n\t\t\t\t};\n\n\t\t\t\t//open update Notes Model Function\n\t\t\t\t$scope.updateNotesModel = function (note) {\n\n\t\t\t\t\t$scope.selectedNote =  {\n\t\t\t\t\t\tid : note.id,\n\t\t\t\t\t\ttoRecruiter : note.toRecruiter,\n\t\t\t\t\t\trecruiter : note.recruiter,\n\t\t\t\t\t\tagency : note.agency,\n\t\t\t\t\t\tsubject : note.subject,\n\t\t\t\t\t\tcontent : note.content,\n\t\t\t\t\t\tresumeId : note.resumeId,\n\t\t\t\t\t\tuserId : note.userId,\n\t\t\t\t\t\tnotes : note.notes,\n\t\t\t\t\t\tcreatedDate : note.createdDate\n\t\t\t\t\t};\n\t\t\t\t\t$scope.notesModal = NotesSvc.getUpdateNotesModal($scope, 'NotesCtrl');\n\t\t\t\t};\n\n\t\t\t\t$scope.viewNotesModel = function (noteId, index) {\n\t\t\t\t\t$scope.user.viewNotes = [];\n\t\t\t\t\t$scope.noteId = noteId;\n\t\t\t\t\t$scope.index = index;\n\n\t\t\t\t\tNotesSvc.viewMyNotes(noteId).then(\n\n\t\t\t\t\t\tfunction (notesData) {\n\t\t\t\t\t\t\t$scope.notesContent = notesData.content;\n\t\t\t\t\t\t\t$scope.viewNotesModal = NotesSvc.getViewNotesModal($scope, 'NotesCtrl');\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n                $scope.referCandidates = function (note,referGroup,referContent,index) {\n\n                \tnote.targetList = referGroup;\n                    note.createdDate = new Date();\n                    note.referContent = referContent;\n\t\t\t\t\trequestObj = note;\n                    NotesSvc.referCandidates(requestObj);\n\n                };\n\n                $scope.campaignCandidates = function (note,referGroup,referContent,index) {\n                    note.targetList = referGroup;\n                    note.createdDate = new Date();\n                    note.referContent = referContent;\n                    requestObj = note;\n                    NotesSvc.campaignCandidates(requestObj);\n\n                };\n\n\t\t\t\t$scope.sendTrackedApplicaion = function (note, index) {\n\n\t\t\t\t\t$scope.notesModal = NotesSvc.getSendTrackedApplicationModal($scope, 'NotesCtrl');\n\t\t\t\t\t$scope.note=note;\n\t\t\t\t\t$scope.modelType='Delete';\n\t\t\t\t\t//Setting the title and message\n\t\t\t\t\t$scope.modelTitle = Utilities.getAlerts('sendTrackedApplicationModelTitle').message;\n\t\t\t\t\t$scope.modelMessage = Utilities.getAlerts('sendTrackedApplicationlMessage').message;\n\t\t\t\t};\n\n\t\t\t\t//deleting Notes Function\n\t\t\t\t$scope.deleteNotes = function (noteId, index) {\n\t\t\t\t\t$scope.noteId = noteId;\n\t\t\t\t\t$scope.index = index;\n\t\t\t\t\t$scope.deleteNotesModal = NotesSvc.getDeleteNotesModal($scope, $scope.NotesCtrl);\n\t\t\t\t};\n\t\t\t\t\n                $scope.checkUserRole = function () {\n\t\t\t\t\tif($scope.user.role == 'ADMIN'){\n                        return false;\n                    }else {\n                        return true;\n                    }\n                }\n\n\t\t\t\t$scope.NotesCtrl = function () {\n\n\t\t\t\t\t//deleting Notes Function\n\t\t\t\t\t$scope.deleteConfirmNotes = function (noteId, index) {\n\t\t\t\t\t\t$scope.closeDeleteNoteModal();\n\t\t\t\t\t\tvar url = Utilities.getDeleteNotesUrl() + \"?id=\" + noteId;\n\t\t\t\t\t\tconsole.log(Utilities.getDeleteNotesUrl() + \"?id=\" + noteId);\n\t\t\t\t\t\t$http.delete(url, {\n\t\t\t\t\t\t\ttransformRequest: angular.identity,\n\t\t\t\t\t\t\theaders: {'Content-Type': undefined}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.success(function (data, status, headers, config) {\n\t\t\t\t\t\t\t\tconsole.debug(data + '  ' + status + ' ' + headers + '  ' + config);\n\t\t\t\t\t\t\t\ttoastr.success(Utilities.getAlerts('deleteNotesSuccess').message);\n\t\t\t\t\t\t\t\t// new code edited\n\t\t\t\t\t\t\t\tangular.forEach($scope.user.myNotes, function(obj, i) {\n\t\t\t\t\t\t\t\t\tif(noteId==obj.id){\n\t\t\t\t\t\t\t\t\t\t$scope.user.myNotes.splice(i, 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.error(function (data, status, headers, config) {\n\t\t\t\t\t\t\t\t$scope.closeDeleteNoteModal();\n\t\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('defaultError'));\n\n\t\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\t\t\n\t\t\t\t\t$scope.closeDeleteNoteModal = function () {\n\t\t\t\t\t\t$scope.deleteNotesModal.dismiss();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t//Close the resume model function\n\t\t\t\t$scope.closeModal = function () {\n\t\t\t\t\t$scope.notesModal.dismiss();\n\t\t\t\t\tUtilities.gotoNotesPage();\n\t\t\t\t\t$scope.recruiter=null;\n\t\t\t\t\t$scope.id=null;\n\t\t\t\t\t$scope.agency=null;\n\t\t\t\t\t$scope.createdDate=null;\n\t\t\t\t\t$scope.note=null;\n\t\t\t\t\t$window.location.reload();\n\n\t\t\t\t};\n\n\t\t\t\t//Close the resume model function\n\n\n\t\t\t\t//Close the resume model function\n\t\t\t\t$scope.closeViewNoteModal = function () {\n\t\t\t\t\t$scope.viewNotesModal.dismiss();\n\t\t\t\t};\n\n\t\t\t\t$scope.saveNote = function (notesForm, notesModel) {\n\n\t\t\t\t\tif (notesForm.$valid ) {\n\n\t\t\t\t\t\t//notesModel.userId = $scope.note.userId;\n\t\t\t\t\t\tnotesModel.createdDate = new Date();\n\n\t\t\t\t\t\tNotesSvc.saveMyNotes(notesModel).then(\n\n\t\t\t\t\t\t\tfunction (notesData) {\n\t\t\t\t\t\t\t\t$scope.notesModal.dismiss();\n\t\t\t\t\t\t\t\ttoastr.success(Utilities.getAlerts('updateNoteSuccess').message);\n\t\t\t\t\t\t\t\t$window.location.reload();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\n\t\t\t\t$scope.checkNotesStyle = function (note) {\n\n\t\t\t\t\tif(note.tracked){\n\t\t\t\t\t\treturn \"background-color:green;color:white;padding:20px;\";\n\t\t\t\t\t}\n                }\n\n\t\t\t\t$scope.modelFunction = function () {\n\t\t\t\t\tif($scope.modelType=='Delete'){\n\t\t\t\t\t\t$scope.sendTrackedApplication();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t$scope.sendTrackedApplication = function () {\n\n\t\t\t\t\t$scope.note.tracked = $scope.note.tracked ? false :true;\n\t\t\t\t\t$scope.note.createdDate = null;\n\t\t\t\t\tNotesSvc.sendTrackedApplication($scope.note).then(\n\t\t\t\t\t\tfunction (notesData) {\n\t\t\t\t\t\t\t$scope.notesModal.dismiss();\n\t\t\t\t\t\t\t$scope.note.createdDate = notesData.createdDate;\n\t\t\t\t\t\t\t$scope.note.tracked = notesData.tracked;\n\t\t\t\t\t\t\ttoastr.error(notesData.tracked ? Utilities.getAlerts('sendTrackedApplicationSuccess').message:Utilities.getAlerts('sendUnTrackedApplicationSuccess').message);\n\t\t\t\t\t\t\tUtilities.gotoNotesPage();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t// edit Notes Function\n\n\t\t\t\t$scope.init = function () {\n\t\t\t\t\t$scope.referGroup = '';\n\t\t\t\t\t$scope.getUserDetails();\n\n\t\t\t\t};\n\n\t\t\t\t$scope.init();\n\t\t\t}\n\t\t]);\n\n\n    angular.module('MyCvTracker.pages.notes')\n\n    \t.factory('NotesSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\n                var Utilities = $injector.get('Utilities');\n\n            \treturn  {\n\n\t\t\t\t\tgetEditNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/notes/templates/edit_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetUpdateNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/notes/templates/update_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetDeleteNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/notes/templates/delete_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSendTrackedApplicationModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/resumes/templates/warning.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\t\t\t\t\t},\n\n\t\t\t\t\tgetViewNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/notes/templates/view_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\treferCandidates: function(requestOb){\n                    \tvar url = Utilities.referCandidatesUrl();\n                    \treturn RestConfig.referCandidates(url,requestOb);\n\t\t\t\t\t},\n\n                    campaignCandidates: function(requestOb){\n                        var url = Utilities.campaignCandidatesUrl();\n                        return RestConfig.campaignCandidates(url,requestOb);\n                    },\n\n            \t\tgetMyNotes: function (pageNumber,pageSize) {\n            \t\t\tvar url = Utilities.getMyNotesUrl()+\"/\"+pageNumber+\"/\"+pageSize;\n            \t\t\treturn  RestConfig.getMyNotes(url);\n            \t\t},\n\n\t\t\t\t\tviewMyNotes: function (noteId) {\n\n\t\t\t\t\t\tvar url = Utilities.viewMyNotesUrl()+\"?id=\" + noteId;\n\t\t\t\t\t\treturn  RestConfig.getMyNotes(url);\n\t\t\t\t\t},\n\n\n\t\t\t\t\tsaveMyNotes: function (requestOb) {\n\n\t\t\t\t\t\tvar url = Utilities.getEditNotesUrl();\n\t\t\t\t\t\treturn RestConfig.saveNotesRequest(url, requestOb);\n\t\t\t\t\t},\n\t\t\t\t\tsendTrackedApplication: function (requestOb) {\n\n\t\t\t\t\t\tvar url = Utilities.sendTrackedApplicationUrl();\n\t\t\t\t\t\treturn RestConfig.sendTrackedApplication(url, requestOb);\n\t\t\t\t\t}\n            \t}; \n            }\n        ]);\nangular.module('MyCvTracker.pages.payment')\n\n    .controller('PaymentCtrl', ['toastr', '$scope', '$injector','$window',\n\n        function (toastr, $scope, $injector,$window) {\n\n            var Utilities = $injector.get('Utilities');\n            var PaymentSvc = $injector.get('PaymentSvc');\n\n            $scope.executePayment = function(ticksNo,planId,description,currency,price,tax) {\n                var dataObj = {\n                    description : description,\n                    currency : currency,\n                    price : price,\n                    tax : tax,\n                    ticksNo :ticksNo,\n                    planId: planId\n                };\n                PaymentSvc.executePayment(dataObj).then(\n\n                    function (response) {\n                        $window.location.href =  response.returnURL;\n                    }\n                );\n            };\n\n            $scope.paymentSuccess = function () {\n                toastr.error(Utilities.getAlerts('PaymentSuccessfullyExecuted'));\n                Utilities.gotoProfilePage();\n            };\n\n            ////////////////////////////////////////////////////////////////////////////\n            $scope.init = function () {\n                $scope.getPaymentPlans();\n            };\n\n            $scope.getPaymentPlans = function () {\n\n                $scope.payments = [];\n\n                PaymentSvc.getPaymentPlans('GBP').then(\n\n                    function (data) {\n\n                        data.forEach(function (obj) {\n                            $scope.payments.push(obj);\n                        });\n                    }\n                );\n            };\n        }\n    ]);\n\nangular.module('MyCvTracker.pages.payment')\n\n    .factory('PaymentSvc', ['toastr', 'RestConfig', '$injector',\n\n        function (toastr, RestConfig, $injector) {\n\n            var Utilities = $injector.get('Utilities');\n\n            return {\n                executePayment: function (paymentObj) {\n\n                    var url = Utilities.getExecutePaymentrUrl();\n                    return RestConfig.executePayment(url,paymentObj);\n                },\n                getPaymentPlans: function (data) {\n\n                    var url = Utilities.getPaymentPlansrUrl()+\"?currency=\"+data;\n                    return RestConfig.getPaymentPlans(url);\n                },\n                getUserTick: function () {\n\n                    var url = Utilities.getUserTickUrl();\n                    return RestConfig.getUserTick(url);\n                },\n                validateUserTickNumber: function () {\n\n                    var url = Utilities.getValidateUserTickNumberUrl();\n                    return RestConfig.getValidateUserTickNumber(url);\n                }\n            };\n        }\n    ]);\n\nangular.module('MyCvTracker.pages.questions')\n\n    \t.factory('QuestionDataSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\n                var Utilities = $injector.get('Utilities');\n\n            \treturn  {\n\n\t\t\t\t\tgetEditNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/edit_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetDeleteNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/delete_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tgetViewNotesModal: function (scope, ctrlName) {\n\n\t\t\t\t\t\tvar modalOpts = {\n\t\t\t\t\t\t\ttemplateUrl: 'app/pages/campaignNotes/templates/view_note.html',\n\t\t\t\t\t\t\tcontroller: ctrlName,\n\t\t\t\t\t\t\tscope: scope\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn $injector.get('$uibModal').open(modalOpts);\n\n\t\t\t\t\t},\n\n\t\t\t\t\tbulkUpload: function(file,groupId){\n\n\t\t                return RestConfig.bulkUpload(url,request);\n\t\t\t\t\t},\n\n\t\t\t\t\taddGroups: function (groupData) {\n                        var url = Utilities.addGroupsUrl();\n                        return  RestConfig.addGroup(url,groupData);\n                    },\n\n                    editGroups: function (groupData) {\n                        var url = Utilities.editGroupsUrl();\n                        return  RestConfig.editGroup(url,groupData);\n                    },\n\n            \t\tgetGroups: function (userId) {\n            \t\t\tvar url = Utilities.getGroupsUrl();\n            \t\t\treturn  RestConfig.getGroupsList(url);\n            \t\t},\n\n                    getMembers: function (groupId) {\n            \t\t\tvar url = Utilities.getGroupMembersUrl(groupId)+\"?groupId=\" + groupId;\n            \t\t\treturn  RestConfig.getMembersList(url);\n            \t\t},\n                    saveMembers: function (requestOb) {\n                        var url = Utilities.getEditMembersUrl();\n                        return  RestConfig.saveMembersList(url,requestOb);\n                    },\n                    deleteMembers: function (requestOb) {\n                        var url = Utilities.getDeleteMembersUrl();\n                        return  RestConfig.deleteGroupMembersList(url,requestOb);\n                    },\n                    getQuestions: function (type) {\n                        var url = Utilities.getQuestionsListUrl() + \"?interviewType=\" + type;\n                        return  RestConfig.getQuestionsList(url);\n                    },\n                    editQuestions: function(questions) {\n                        var url = Utilities.editQuestionsListUrl();\n                        return  RestConfig.editQuestionsList(url,questions);\n                    },\n                    deleteQuestions: function(questions) {\n                        var url = Utilities.deleteQuestionsListUrl();\n                        return  RestConfig.deleteQuestionsList(url,questions);\n                    },\n                    addQuestions: function(questions) {\n                        var url = Utilities.addQuestionUrl();\n                        return RestConfig.addQuestions(url,questions);\n                    },\n                    assignInterview: function(interviewRequest) {\n                       var url = Utilities.assignInterviewUrl();\n                       return RestConfig.assignInterview(url,interviewRequest);\n                    },\n                    sendReminders: function(interviewRequest) {\n                       var url = Utilities.sendReminderUrl();\n                       return RestConfig.sendReminders(url,interviewRequest);\n                    },\n                    getResults: function(candidateDetails){\n                     var url = Utilities.getResultsUrl();\n                      return RestConfig.getResults(url,candidateDetails);\n                    }\n            \t};\n            }\n        ]);\nangular.module(\"MyCvTracker.pages.questions\")\n  .controller(\"QuestionListingCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    \"$sce\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location,\n      $sce\n    ) {\n      var EMAIL_REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      var Utilities = $injector.get(\"Utilities\");\n      var mainSvc = $injector.get(\"QuestionDataSvc\");\n\n\n      var userDetail = Authorization.getUserDetails();\n      var rqUserId = 0;\n      var isAdminUser = false, isReviewer = false;\n      if (!!userDetail) {\n        rqUserId = userDetail.id;\n        userEmail = userDetail.email;\n        var role = userDetail.userRole;\n        isAdminUser = role === \"ADMIN\";\n        isReviewer = role === \"REVIEWER\";\n      }\n\n      $scope.questionDetail = {};\n      $scope.questions = [];\n\n      $scope.loadQuestions = function () {\n       var type = $scope.interviewType;\n        mainSvc.getQuestions(type)\n          .then(function (data) {\n            $scope.questions = data;\n          });\n      };\n\n      $scope.editQuestions = function (question) {\n          mainSvc.editQuestions(question)\n            .then(function (data) {\n              $scope.questions = data;\n              toastr.success(\"Your question has been edited \");\n            });\n      };\n\n    $scope.deleteQuestions = function (question) {\n        mainSvc.deleteQuestions(question)\n          .then(function (data) {\n            $scope.questions = data;\n            toastr.success(\"Your question has been deleted \");\n          });\n    };\n\n     $scope.addQuestion = function (question) {\n          mainSvc.addQuestions(question)\n            .then(function (data) {\n              $scope.questions = data;\n              toastr.success(\"Your question has been submitted \");\n            });\n      };\n\n      $scope.getResults = function(candidateDetails){\n\n       mainSvc.getResults(candidateDetails)\n       .then(function (data) {\n        toastr.success(\"Your request has been submitted \");\n        })\n       .catch(function () {\n\n        });\n      };\n\n      $scope.assignInterview = function(myfile,interviewRequest){\n\n        if(myfile != null){\n        var Reader = new FileReader();\n        Reader.readAsText(myfile, \"UTF-8\");\n        Reader.onload = function (evt) {\n            $scope.interviewRequest.candidateList = Reader.result;\n        }\n        }\n\n       mainSvc.assignInterview(interviewRequest)\n      .then(function (data) {\n        toastr.success(\"Your request has been submitted \");\n      })\n      .catch(function () {\n        toastr.error(\"Your request is failed \");\n      });\n      };\n\n       $scope.sendReminders = function(myfile,interviewRequest){\n\n          if(myfile != null){\n          var Reader = new FileReader();\n          Reader.readAsText(myfile, \"UTF-8\");\n          Reader.onload = function (evt) {\n              $scope.interviewRequest.candidateList = Reader.result;\n          }\n          }\n\n         mainSvc.sendReminders(interviewRequest)\n        .then(function (data) {\n          toastr.success(\"Your request has been submitted \");\n        })\n        .catch(function () {\n          toastr.error(\"Your request is failed \");\n        });\n        };\n\n      $scope.trustSrc = function (src, cdt) {\n        return $sce.trustAsResourceUrl((src + \"%26cdt=\" + cdt));\n      };\n\n      $scope.formatDateTime = function (utcStr) {\n        return !!utcStr ? Utilities.getFormattedDate(utcStr) : \"\";\n      };\n\n      $scope.init = function () {\n        $scope.loadQuestions();\n\n        $scope.candidateResultsEmail = \"\";\n        $scope.token = \"\";\n\n        $scope.candidateDetails = {\n            candidate: \"\",\n            token: \"\",\n            jobLink: \"\",\n            candidateName: \"\",\n            candidateEmail: \"\",\n            resultOwners: \"\",\n            invite:\"\",\n            interviewType:\"\",\n            candidateList: \"\"\n        }\n\n        $scope.interviewRequest = {\n             candidateName: \"\",\n             candidateEmail: \"\",\n             resultOwners: \"\",\n             invite:\"\",\n             interviewType:\"\",\n             jobLink: \"\",\n             candidateList: \"\"\n             };\n        }\n\n      $scope.$on(\"$destroy\", function () {\n        $rootScope.headerLoginRedirect = \"\";\n      });\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.referral\")\n  .controller(\"ReferralCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location\n    ) {\n      var JOB_STATUS = Constants.jobAppStatus;\n      var NO_RECORDS = 12;\n\n      $scope.REFERRAL_TYPE = {\n        TEXT_LINK : \"TEXT_LINK\",\n        JOB_SPEC : \"JOB_SPEC\",\n        SOCIAL_SHARE : \"SOCIAL_SHARE\",\n        CV_BOX : \"CV_BOX\"\n      };\n      $scope.PREVIEW_TYPE = {\n        NONE : \"NONE\",\n        WEB_PAGE_URL : \"WEB_PAGE_URL\",\n        FILE : \"FILE\"\n      };\n\n      var Utilities = $injector.get(\"Utilities\");\n      var AccountSvc = $injector.get(\"AccountSvc\");\n      var ReferralSvc = $injector.get(\"ReferralSvc\");\n\n      var userId = 0;\n      var userEmail = \"\",\n        parentLink = \"\";\n      var userDetail = Authorization.getUserDetails();\n      var role = !!userDetail ? Authorization.getUserRole() : \"\";\n      var isAdmin = role === \"ADMIN\";\n      var isReviewer = role === \"REVIEWER\";\n      var isRecruiter = role === \"RECRUITER\";\n      var isManagement = isAdmin || isReviewer || isRecruiter;\n\n      var scanUserId = 0;\n      if (isAdmin || isReviewer || isRecruiter) {\n        scanUserId = userDetail.id;\n      }\n      $scope.scanUserId = scanUserId;\n      $scope.isRecruiter = isRecruiter;\n\n      $scope.referralModal = {};\n      $scope.buildModal = {};\n\n      $scope.referral = {\n        isManagement : isManagement,\n        isAdmin : isAdmin,\n        isReviewer : isReviewer,\n        isRecruiter : isRecruiter,\n        links : [],\n        modal : null,\n        selectedDescription : \"\",\n        selectedTargetEmail : \"\",\n        descriptionConfig : {\n          \"height\" : \"470\",\n          \"removePlugins\" : \"toolbar,resize\",\n          \"readOnly\" : \"true\"\n        },\n        shareReferral : {\n          generating : false,\n          refCode : \"\",\n          referralType : \"\",\n          referralTargetSubject : \"\"\n        },\n        shareResume : {\n          referral : null,\n          sharing : false,\n          success : false\n        },\n        page : 1,\n        listing : false,\n        hasNext : false\n      };\n      $scope.newReferralForm = {\n        type : $scope.REFERRAL_TYPE.JOB_SPEC,\n        isChildRef : false,\n        editing : false,\n        description : null,\n        title : null,\n        email : null,\n        location : null,\n        jobType : null,\n        previewType : $scope.PREVIEW_TYPE.WEB_PAGE_URL,\n        previewLink : null,\n        previewFile : null,\n        refPublic : false,\n        bountyEnable : false,\n        generating : false,\n        previewLinkInvalid : false,\n        previewFileInvalidSize : false,\n        previewFileInvalidType : false,\n        editingReferral : {},\n        REFERRAL_TYPE : {},\n        showError : false\n      };\n      $scope.jobCategorizingForm = {\n        jobId : null,\n        referralLink : null,\n        defaultCategories : [],\n        categories : [],\n        newCategoryId : null,\n        updating : false,\n        smartBuilding : false\n      };\n      $scope.buildingSmartForm = {\n        defaultSkills : [],\n        selectedSkills : {},\n        categoryName : \"\",\n        rankOrder : 0,\n        building : false\n      };\n\n      $scope.scanFolderModalForm = {\n        resumes : [],\n        loaded : false\n      };\n\n      $scope.deletingReferralLink = \"\";\n      $scope.deletingReferralIdx = -1;\n      $scope.inDeletingReferral = false;\n\n      $scope.reloadListReferralLinks = function () {\n        $scope.referral.page = 1;\n        $scope.referral.links = [];\n        $scope.referral.hasNext = true;\n\n        $scope.loadListReferralLinks();\n      };\n\n      $scope.loadListReferralLinks = function () {\n        if (!!userId) {\n          // ReferralSvc.getListReferralLinksOfUser(userId)\n          //   .then(function (rpData) {\n          //     $scope.referral.links = rpData;\n          //   });\n        } else {\n          if (!$scope.referral.listing) {\n            $scope.referral.listing = true;\n            var page = $scope.referral.page;\n\n            ReferralSvc.getListReferralLinks(page, NO_RECORDS)\n              .then(function (rpData) {\n                var newLinks = rpData;\n                var noRecords = newLinks.length;\n                var hasNext = noRecords >= NO_RECORDS;\n\n                for (\n                  var i = 0,\n                    len = Math.min(NO_RECORDS, noRecords); i < len; i++\n                ) {\n                  $scope.referral.links.push(newLinks[i]);\n                }\n\n                $scope.referral.hasNext = hasNext;\n                $scope.referral.listing = false;\n              });\n          }\n        }\n      };\n\n      $scope.loadNextPage = function () {\n        $scope.referral.page++;\n        $scope.loadListReferralLinks();\n      };\n\n      $scope.newReferralTypeChanged = function () {\n        var type = $scope.newReferralForm.type;\n        if (type === $scope.REFERRAL_TYPE.CV_BOX) {\n          $scope.newReferralForm.previewType = $scope.PREVIEW_TYPE.NONE;\n        } else {\n          $scope.newReferralForm.previewType = $scope.PREVIEW_TYPE.WEB_PAGE_URL;\n        }\n      };\n\n      $scope.openNewReferralLinkModal = function (referral) {\n        $scope.newReferralForm.editing = !!referral;\n        if (!!referral) {\n          $scope.newReferralForm.description = referral.referralDetails;\n          $scope.newReferralForm.type = referral.referralType;\n          $scope.newReferralForm.title = referral.referralTargetSubject;\n          $scope.newReferralForm.email = referral.referralTargetEmail;\n          $scope.newReferralForm.location = referral.jobLocation;\n          $scope.newReferralForm.jobType = referral.jobType;\n          $scope.newReferralForm.previewType = referral.previewType;\n          $scope.newReferralForm.previewLink = referral.previewLink;\n          $scope.newReferralForm.bountyEnable = referral.bountyEnable;\n          $scope.newReferralForm.refPublic = referral.refPublic;\n          $scope.newReferralForm.editingReferral = referral;\n          $scope.newReferralForm.isChildRef = !!referral.parentReferralId;\n        }\n\n        $scope.referralModal = ReferralSvc.getNewReferralLinkModal($scope, \"ReferalModalCtrl\");\n      };\n\n      $scope.openDeleteReferralLinkModal = function (\n        referralLink,\n        idx\n      ) {\n        $scope.deletingReferralLink = referralLink;\n        $scope.deletingReferralIdx = idx;\n        $scope.referralModal = ReferralSvc.getDeleteReferralLinkModal($scope, \"ReferalModalCtrl\");\n      };\n\n      $scope.openReferralDescriptionModal = function (\n        desc,\n        email\n      ) {\n        $scope.referral.selectedDescription = desc;\n        $scope.referral.selectedTargetEmail = email;\n        $scope.referralModal = ReferralSvc.getReferralDescriptionModal($scope, \"ReferalModalCtrl\");\n      };\n\n      $scope.openShareReferralModal = function () {\n        var shareReferral = $scope.referral.shareReferral;\n        shareReferral.generating = true;\n\n        $scope.referralModal = ReferralSvc.getShareReferralModal($scope, \"ReferalModalCtrl\");\n\n        ReferralSvc.shareReferralLink(parentLink)\n          .then(function (data) {\n            $scope.referral.shareReferral.refCode = data.referralLink;\n            $scope.referral.shareReferral.referralType = data.referralType;\n            $scope.referral.shareReferral.referralTargetSubject = data.referralTargetSubject;\n            $scope.referral.shareReferral.generating = false;\n          });\n      };\n\n      $scope.openUpdateSkillModal = function (\n        id,\n        referralLink\n      ) {\n        ReferralSvc.getJobCategories(referralLink)\n          .then(function (data) {\n            $scope.jobCategorizingForm.categories = data;\n          });\n        $scope.jobCategorizingForm.jobId = id;\n        $scope.jobCategorizingForm.referralLink = referralLink;\n        $scope.referralModal = ReferralSvc.getUpdatingJobSkillsModal($scope, \"ReferalModalCtrl\");\n      };\n\n      $scope.openBuildingSmartCategory = function () {\n        $scope.buildModal = ReferralSvc.getBuildingSmartCategoryModal($scope, \"BuildingReferalModalCtrl\");\n      };\n\n      $scope.removeCategoryFromList = function (idx) {\n        if ($scope.jobCategorizingForm.updating) return;\n\n        $scope.jobCategorizingForm.categories.splice(idx, 1);\n      };\n\n      $scope.addCategoryToList = function () {\n        if ($scope.jobCategorizingForm.updating) return;\n\n        var newCategoryId = $scope.jobCategorizingForm.newCategoryId;\n        if (!newCategoryId) return;\n        newCategoryId = parseInt(newCategoryId);\n\n        // check whether new category exist\n        for (\n          var i = 0,\n            len = $scope.jobCategorizingForm.categories.length; i < len; i++\n        ) {\n          var category = $scope.jobCategorizingForm.categories[i];\n          if (newCategoryId === category.categoryId) {\n            $scope.jobCategorizingForm.newCategoryId = null;\n            return;\n          }\n        }\n\n        var categories = $scope.jobCategorizingForm.defaultCategories;\n        for (\n          var i = 0,\n            len = categories.length; i < len; i++\n        ) {\n          var category = categories[i];\n          var id = category.id;\n          var name = category.name;\n\n          if (id === newCategoryId) {\n            $scope.jobCategorizingForm.categories.push({\n              categoryId : id,\n              name : name\n            });\n            $scope.jobCategorizingForm.newCategoryId = null;\n            break;\n          }\n        }\n      };\n\n      $scope.buildSmartCategories = function () {\n        if ($scope.jobCategorizingForm.smartBuilding) return;\n        $scope.jobCategorizingForm.smartBuilding = true;\n\n        var jobId = $scope.jobCategorizingForm.jobId;\n        ReferralSvc.buildSmartCategories(jobId)\n          .then(function (data) {\n            if (data.length > 0) {\n              for (var i = 0; i < data.length; i++) {\n                var newCat = data[i];\n                $scope.buildingSmartForm.defaultSkills.push(newCat);\n              }\n              $scope.openBuildingSmartCategory();\n            } else {\n              toastr.error(\"No skills matching to the job!\", \"Notify\");\n            }\n\n            $scope.jobCategorizingForm.smartBuilding = false;\n          });\n      };\n\n      $scope.addToSmartCategory = function (idx) {\n        var skills = $scope.buildingSmartForm.defaultSkills;\n        var skill = skills[idx];\n        var skillRank = skill[\"rank\"];\n        if (!skillRank) {\n          $scope.buildingSmartForm.rankOrder++;\n          skill[\"rank\"] = $scope.buildingSmartForm.rankOrder;\n        } else {\n          skill[\"rank\"] = 0;\n          $scope.buildingSmartForm.rankOrder--;\n          for (\n            var i = 0,\n              len = skills.length; i < len; i++\n          ) {\n            var aSkill = skills[i];\n            if (!!aSkill.rank && aSkill.rank > skillRank) {\n              aSkill.rank--;\n            }\n          }\n        }\n      };\n\n      function sortByRank(\n        a,\n        b\n      ) {\n        if (a.rank < b.rank) {\n          return -1;\n        }\n        if (a.rank > b.rank) {\n          return 1;\n        }\n        return 0;\n      }\n\n      $scope.applySmartCategory = function () {\n        if ($scope.buildingSmartForm.building) return;\n\n        var name = $scope.buildingSmartForm.categoryName;\n        var skills = $scope.buildingSmartForm.defaultSkills;\n        $scope.buildingSmartForm.building = true;\n\n        var selectedSkills = [];\n        for (\n          var i = 0,\n            len = skills.length; i < len; i++\n        ) {\n          var skill = skills[i];\n          if (!!skill[\"rank\"]) {\n            selectedSkills.push(skill);\n          }\n        }\n\n        if (!name || selectedSkills.length === 0) {\n          $scope.buildingSmartFor.building = false;\n        }\n\n        selectedSkills.sort(sortByRank);\n        var skillIds = [];\n        for (\n          var i = 0,\n            len = selectedSkills.length; i < len; i++\n        ) {\n          skillIds.push(selectedSkills[i].id);\n        }\n\n        ReferralSvc.newCategory(name.trim(), skillIds)\n          .then(function (data) {\n            $scope.jobCategorizingForm.categories.push({\n              categoryId : data.id,\n              name : data.name\n            });\n\n            $scope.categorizeJob(true);\n\n            $scope.closeBuildingModal();\n          })\n          .catch(function () {\n            toastr.error(\"Creating category has failed!.\", \"Failed\");\n            $scope.closeBuildingModal();\n          });\n\n      };\n\n      $scope.categorizeJob = function (keepModal) {\n        if ($scope.jobCategorizingForm.updating) return;\n        $scope.jobCategorizingForm.updating = true;\n\n        var jobId = $scope.jobCategorizingForm.jobId;\n        var categoryIds = [];\n        var categories = $scope.jobCategorizingForm.categories;\n        for (\n          var i = 0,\n            len = categories.length; i < len; i++\n        ) {\n          categoryIds.push(categories[i].categoryId);\n        }\n\n        ReferralSvc.categorizeJobSkills(jobId, categoryIds)\n          .then(function () {\n            toastr.success(\"Job has been updated successfully.\", \"Success\");\n            $scope.jobCategorizingForm.updating = false;\n            if (!keepModal) $scope.closeModal();\n          })\n          .catch(function () {\n            toastr.error(\"Updating job has failed!\", \"Failed\");\n            $scope.jobCategorizingForm.updating = false;\n            if (!keepModal) $scope.closeModal();\n          });\n      };\n\n      $scope.closeModal = function () {\n        // console.log($scope.referralModal);\n        $scope.referralModal.dismiss();\n        $scope.newReferralForm.editing = false;\n        $scope.newReferralForm.description = null;\n        $scope.newReferralForm.title = null;\n        $scope.newReferralForm.email = null;\n        $scope.newReferralForm.location = null;\n        $scope.newReferralForm.jobType = null;\n        $scope.newReferralForm.previewType = $scope.PREVIEW_TYPE.WEB_PAGE_URL;\n        $scope.newReferralForm.previewLink = null;\n        $scope.newReferralForm.previewFile = null;\n        $scope.newReferralForm.bountyEnable = false;\n        $scope.newReferralForm.refPublic = false;\n        $scope.newReferralForm.previewLinkInvalid = false;\n        $scope.newReferralForm.previewFileInvalidSize = false;\n        $scope.newReferralForm.previewFileInvalidType = false;\n        $scope.newReferralForm.generating = false;\n        $scope.newReferralForm.isChildRef = false;\n        $scope.newReferralForm.editingReferral = {};\n        $scope.referral.selectedDescription = null;\n        $scope.referral.selectedTargetEmail = null;\n        $scope.referral.shareReferral.generating = false;\n        $scope.referral.shareReferral.refCode = \"\";\n        $scope.referral.shareResume.sharing = false;\n        $scope.referral.shareResume.success = false;\n        $scope.referral.shareResume.referral = null;\n        $scope.deletingReferralLink = \"\";\n        $scope.deletingReferralIdx = -1;\n        $scope.jobCategorizingForm.categories = [];\n        $scope.jobCategorizingForm.jobId = null;\n        $scope.jobCategorizingForm.referralLink = null;\n        $scope.jobCategorizingForm.newCategoryId = null;\n        $scope.jobCategorizingForm.updating = false;\n        $scope.jobCategorizingForm.smartBuilding = false;\n        $scope.inDeletingReferral = false;\n        $scope.scanFolderModalForm.resumes = [];\n        $scope.scanFolderModalForm.loaded = false;\n\n        if (!!parentLink) {\n          $location.url(\"/referral\");\n\n          $scope.loadListReferralLinks();\n        }\n      };\n\n      $scope.closeBuildingModal = function () {\n        $scope.buildModal.dismiss();\n        $scope.buildingSmartForm.defaultSkills = [];\n        $scope.buildingSmartForm.selectedSkills = {};\n        $scope.buildingSmartForm.categoryName = \"\";\n        $scope.buildingSmartForm.rankOrder = 0;\n        $scope.buildingSmartForm.building = false;\n      };\n\n      function isUrlValid(userInput) {\n        var regexQuery = \"^(https?://)?(www\\\\.)?([-a-z0-9]{1,63}\\\\.)*?[a-z0-9][-a-z0-9]{0,61}[a-z0-9]\\\\.[a-z]{2,6}(/[-\\\\w@\\\\+\\\\.~#\\\\?&/=%]*)?$\";\n        var url = new RegExp(regexQuery, \"i\");\n        return url.test(userInput);\n      }\n\n      $scope.generateLink = function () {\n        if ($scope.newReferralForm.isChildRef) {\n          return;\n        }\n\n        $scope.newReferralForm.generating = true;\n\n        var context = \"\";\n        var type = $scope.newReferralForm.type;\n        var email = \"\",\n          title = \"\",\n          location = \"\",\n          jobType = \"\",\n          previewLink = \"\",\n          previewFile = null,\n          previewType = $scope.PREVIEW_TYPE.NONE,\n          refPublic = false,\n          bountyEnable = false;\n        switch (type) {\n          case  $scope.REFERRAL_TYPE.JOB_SPEC:\n            email = $scope.newReferralForm.email;\n            location = $scope.newReferralForm.location;\n            jobType = $scope.newReferralForm.jobType;\n            break;\n          case  $scope.REFERRAL_TYPE.SOCIAL_SHARE:\n            break;\n          case $scope.REFERRAL_TYPE.TEXT_LINK:\n            break;\n        }\n\n        title = $scope.newReferralForm.title;\n        context = $scope.newReferralForm.description;\n        refPublic = $scope.newReferralForm.refPublic;\n        bountyEnable = $scope.newReferralForm.bountyEnable;\n        previewType = $scope.newReferralForm.previewType;\n        var previewFileCheck = true;\n        if ($scope.newReferralForm.editing) {\n          var oldPreviewType = $scope.newReferralForm.editingReferral.previewType;\n          previewFileCheck = previewType !== oldPreviewType;\n        }\n\n        var previewLinkInvalid = false,\n          previewFileInvalidSize = false,\n          previewFileInvalidType = false;\n        switch (previewType) {\n          case $scope.PREVIEW_TYPE.FILE:\n            previewFileInvalidType = previewFileCheck;\n            previewFile = $scope.newReferralForm.previewFile;\n            if (!!previewFile) {\n              var validExts = [\n                \"application/pdf\",\n                \"image/jpeg\",\n                \"image/png\"\n              ];\n              var fileType = previewFile.type;\n\n              previewFileInvalidSize = previewFile.size > 5000000;\n              previewFileInvalidType = validExts.indexOf(fileType) < 0;\n            }\n            break;\n          case $scope.PREVIEW_TYPE.WEB_PAGE_URL:\n            previewLink = $scope.newReferralForm.previewLink;\n            previewLinkInvalid = !isUrlValid(previewLink);\n            break;\n        }\n\n        $scope.newReferralForm.previewLinkInvalid = previewLinkInvalid;\n        $scope.newReferralForm.previewFileInvalidSize = previewFileInvalidSize;\n        $scope.newReferralForm.previewFileInvalidType = previewFileInvalidType;\n        if (previewLinkInvalid || previewFileInvalidSize || previewFileInvalidType) {\n          $scope.newReferralForm.generating = false;\n          return;\n        }\n\n        if (!!userId) {\n          // ReferralSvc.generateLinkForUser(context, userEmail, type, title, email, jobType, location)\n          //   .then(function () {\n          //     $scope.newReferralForm.generating = false;\n          //     $scope.closeModal();\n          //     $scope.loadListReferralLinks();\n          //     var msg = Utilities.getAlerts(\"newReferralLinkSuccessMsg\");\n          //     toastr.success(msg, \"Success\");\n          //   });\n        } else {\n          if (!$scope.newReferralForm.editing) {\n            ReferralSvc.generateLink(\n              context,\n              type,\n              title,\n              email,\n              jobType,\n              location,\n              refPublic,\n              bountyEnable,\n              previewType,\n              previewLink,\n              previewFile\n            )\n              .then(function () {\n                $scope.newReferralForm.generating = false;\n                $scope.closeModal();\n                $scope.reloadListReferralLinks();\n                var msg = Utilities.getAlerts(\"newReferralLinkSuccessMsg\");\n                toastr.success(msg, \"Success\");\n              });\n          } else {\n            var referralLink = $scope.newReferralForm.editingReferral.referralLink;\n            ReferralSvc.editRefLink(\n              referralLink,\n              title,\n              context,\n              jobType,\n              location,\n              refPublic,\n              bountyEnable,\n              previewType,\n              previewLink,\n              previewFile\n            )\n              .then(function () {\n                $scope.newReferralForm.editingReferral.referralTargetSubject = title;\n                $scope.newReferralForm.editingReferral.referralDetails = context;\n                $scope.newReferralForm.editingReferral.jobType = jobType;\n                $scope.newReferralForm.editingReferral.jobLocation = location;\n                $scope.newReferralForm.editingReferral.refPublic = refPublic;\n                $scope.newReferralForm.editingReferral.bountyEnable = bountyEnable;\n                $scope.newReferralForm.editingReferral.previewType = previewType;\n                $scope.newReferralForm.editingReferral.previewLink = previewLink;\n\n                $scope.newReferralForm.generating = false;\n                $scope.closeModal();\n\n                var msg = Utilities.getAlerts(\"editReferralLinkSuccessMsg\");\n                toastr.success(msg, \"Success\");\n              });\n          }\n        }\n      };\n\n      $scope.openPreviewResume = function (id, fileType) {\n        service.getResumeToken(id, referralLink)\n            .then(function (data) {\n              // var url = \"http://localhost:8080/user/previewResume?accessToken=\" + data.token;\n              // if (fileType !== \"application/pdf\") {\n              //   url = \"https://view.officeapps.live.com/op/embed.aspx?src=\" + url;\n              // }\n              var url =  \"/job-resume-preview?accessToken=\" + data.token;\n\n              const link = document.createElement('a');\n              link.href = url;\n              link.target = '_blank';\n              document.body.appendChild(link);\n              link.click();\n              link.remove();\n            }, function () {\n            });\n      };\n\n      $scope.shareReferredResumes = function () {\n        var shareResume = $scope.referral.shareResume;\n        var refCode = shareResume.referral.referralLink;\n        shareResume.sharing = true;\n\n        ReferralSvc.shareResumeToParent(refCode)\n          .then(function () {\n            $scope.referral.shareResume.referral.jobAppStatus = JOB_STATUS.SHARED_WITH_TARGET;\n            shareResume.success = true;\n            shareResume.sharing = false;\n          }, function () {\n            $scope.referral.shareResume.referral.jobAppStatus = JOB_STATUS.SHARED_WITH_TARGET;\n            shareResume.success = true;\n            shareResume.sharing = false;\n          });\n      };\n\n      $scope.deleteReferral = function () {\n        if ($scope.inDeletingReferral) return;\n        $scope.inDeletingReferral = true;\n\n        ReferralSvc.deleteReferralLink($scope.deletingReferralLink)\n          .then(function () {\n            $scope.referral.links.splice($scope.deletingReferralIdx, 1);\n            $scope.inDeletingReferral = false;\n            $scope.closeModal();\n            var msg = Utilities.getAlerts(\"deleteReferralLinkSuccessMsg\");\n            toastr.success(msg, \"Success\");\n          })\n          .catch(function () {\n            toastr.error(\"Deleting the referral has failed!\", \"Error\");\n            $scope.inDeletingReferral = false;\n            $scope.closeModal();\n          });\n      };\n\n      $scope.getResumesLink = function (\n        type,\n        link,\n        parentLink\n      ) {\n        var path = \"\";\n        switch (type) {\n          case $scope.REFERRAL_TYPE.SOCIAL_SHARE:\n            path = \"/social-registrations\";\n            break;\n          case $scope.REFERRAL_TYPE.CV_BOX:\n            path = \"/cvbox\";\n            break;\n          default:\n            path = \"/referred-resumes\";\n            break;\n        }\n        var url = path + \"?referralLink=\" + link;\n        if (!!parentLink && parentLink !== link) url = url + \"&parentLink=\" + parentLink;\n\n        return url;\n      };\n\n      $scope.scanResumeFolder = function(id) {\n        $scope.scanFolderModalForm.loaded = false;\n        $scope.openScanFolderResultModal();\n        ReferralSvc.findMatchingResumesInFolder(id).then(function(data) {\n          $scope.scanFolderModalForm.resumes = data;\n          $scope.scanFolderModalForm.loaded = true;\n        });\n      }\n\n      $scope.scanResumeMultipleFolder = function(id) {\n        $scope.scanFolderModalForm.loaded = false;\n        $scope.openScanFolderResultModal();\n        ReferralSvc.findMatchingResumesInMultipleFolder(id).then(function(data) {\n          $scope.scanFolderModalForm.resumes = data;\n          $scope.scanFolderModalForm.loaded = true;\n        });\n      }\n\n      $scope.openScanFolderResultModal = function() {\n        $scope.referralModal = ReferralSvc.getScanFolderResultModal($scope, \"ReferalModalCtrl\");\n      }\n\n      $scope.getReferralLink = function (referral) {\n        var refType = referral.referralType;\n        var link = referral.referralLink;\n        var tt = referral.referralTargetSubject;\n\n        return $scope.getRefLink(refType, link, tt);\n      };\n\n      $scope.getRefLink = function (\n        refType,\n        link,\n        subject\n      ) {\n        var text = \"\";\n        switch (refType) {\n          case $scope.REFERRAL_TYPE.JOB_SPEC:\n            text = Constants.viewUrl + \"/job-spec.html?ref=\";\n            break;\n          case $scope.REFERRAL_TYPE.SOCIAL_SHARE:\n            text = Constants.viewUrl + \"/network-share.html?ref=\";\n            break;\n          case $scope.REFERRAL_TYPE.CV_BOX:\n            text = Constants.viewUrl + \"/cv-box.html?ref=\";\n            break;\n          default:\n            text = Constants.viewUrl + \"/context-link.html?ref=\";\n            break;\n        }\n        if (!subject) subject = \"\";\n\n        subject = subject.replace(/  +/g, \" \")\n          .replaceAll(\" \", \"-\");\n\n        return text + link + (!!subject ? \"&title=\" + encodeURIComponent(subject) : \"\");\n      };\n\n      $scope.copyLink = function (referral) {\n        var text = $scope.getReferralLink(referral);\n        var input = document.createElement(\"input\");\n        input.setAttribute(\"value\", text);\n        document.body.appendChild(input);\n        input.select();\n        var result = document.execCommand(\"copy\");\n        document.body.removeChild(input);\n        var msg = Utilities.getAlerts(\"referralLinkCopySuccessMsg\");\n        toastr.success(msg, \"Success\");\n        return result;\n      };\n\n      $scope.getScanDownloadLink = function(name) {\n        return Constants.baseUrl + '/user/bulk-folder/download/' + scanUserId + '/' + name;\n      }\n\n      /*\n      //https://mycvtracker.com/pdf-viewer.html?pdf=http://localhost:8080/user/bulk-folder/download/1/CVAmitDavara%20(1).pdf\n      $scope.getScanPreviewLink = function(name) {\n        console.log(name)\n        return Constants.viewUrl + '/pdf-viewer.html?pdf=' + Constants.baseUrl + '/user/bulk-folder/download/' + scanUserId + '/' + name;\n      }*/\n\n      $scope.getScanPreviewLink = function(name) {\n\n        console.log(userDetail.email)\n\n        if (name.split('.').pop() !== \"pdf\") {\n          return 'https://view.officeapps.live.com/op/embed.aspx?src=' + Constants.baseUrl +'/user/bulk-folder/download/' + scanUserId + '/' + name;\n        } else {\n          return Constants.viewUrl +'/pdf-viewer.html?pdf='+ Constants.baseUrl + '/user/bulk-folder/download/' + scanUserId + '/' + name;\n        }\n\n        //return Constants.viewUrl + '/pdf-viewer.html?pdf=' + Constants.baseUrl + '/user/bulk-folder/download/' + scanUserId + '/' + name;\n      }\n\n\n\n      $scope.init = function () {\n        var params = $location.search();\n        if (params.parentLink) {\n          parentLink = params.parentLink;\n          $scope.openShareReferralModal();\n        } else {\n          if (params.userId) {\n            userId = params.userId;\n          }\n          if (params.emailName && params.emailDm) {\n            userEmail = params.emailName + \"@\" + params.emailDm;\n          }\n\n          $scope.loadListReferralLinks();\n        }\n\n        ReferralSvc.getListSkillCategories()\n          .then(function (data) {\n            $scope.jobCategorizingForm.defaultCategories = data;\n          });\n      };\n\n      $scope.init();\n\n      // $scope.$watch('referralModal', function(newValue, oldValue) {\n      //   console.log(\"newValue\", newValue);\n      // });\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.referral\")\n  .controller(\"ReferalModalCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.referral\")\n  .controller(\"BuildingReferalModalCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.referral\")\n  .directive(\"previewFileModel\", [\n    \"$parse\",\n    \"$injector\",\n    \"Constants\",\n    function (\n      $parse,\n      $injector,\n      Constants\n    ) {\n      return {\n        restrict : \"A\",\n        link : function (\n          scope,\n          element,\n          attrs\n        ) {\n          var model = $parse(attrs.previewFileModel);\n          var modelSetter = model.assign;\n          var Utilities = $injector.get(\"Utilities\");\n\n          element.bind(\"change\", function () {\n            scope.$apply(function () {\n              modelSetter(scope, element[0].files[0]);\n              var file = scope.newReferralForm.previewFile;\n              // var validExts = [\"application/pdf\", \"image/jpeg\", \"image/png\"];\n              // var fileExt = file.type;\n              var input = $(\"#fileUpload\");\n              // if (validExts.indexOf(fileExt) < 0) {\n              //   alert(\"Wrong file\");\n              //   scope.newReferralForm.previewFile=null;\n              //   return false;\n              // }\n              //\n              // if(file.size>=Constants.fileUpload.fileSizeLimitInByte){\n              //   scope.newReferralForm.previewFile\n              //   return false;\n              // }\n            });\n          });\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.referral\")\n  .factory(\"ReferralSvc\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    function (\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        getListReferralLinks : function (page, noOfRecords) {\n          var url = utilities.getReferralLinkListUrl();\n          return RestConfig.getReferralLinks(url, page, noOfRecords);\n        },\n        getListReferralLinksOfUser : function (userId) {\n          var url = utilities.getReferralLinkListUrlOfUser();\n          return RestConfig.getReferralLinksOfUser(url, userId);\n        },\n        generateLink : function(name, type, title, email, jobType, location, refPublic, bountyEnabled, previewType, previewLink, previewFile) {\n          var url = utilities.getReferralLinkNewUrl();\n          return RestConfig.generateReferralLink(url, name, type, title, email, jobType, location, refPublic, bountyEnabled, previewType, previewLink, previewFile);\n        },\n        editRefLink : function(referralLink, title, description, jobType, location, refPublic, bountyEnabled, previewType, previewLink, previewFile) {\n          var url = utilities.getReferralLinkEditUrl();\n          return RestConfig.editReferralLink(url, referralLink, description, title, jobType, location, refPublic, bountyEnabled, previewType, previewLink, previewFile);\n        },\n        generateLinkForUser : function(name, email, type, title, targetEmail, jobType, location, previewLink) {\n          var url = utilities.getReferralLinkNewUrlForUser();\n          return RestConfig.generateReferralLinkForUser(url, email, name, type, title, targetEmail, jobType, location, previewLink);\n        },\n        shareReferralLink : function(refCode) {\n          var url = utilities.getShareReferralLinkUrl();\n          return RestConfig.shareParentReferralLink(url, refCode);\n        },\n        getNewReferralLinkModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referral/templates/new_referral_link.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getDeleteReferralLinkModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referral/templates/delete-referral-confirm.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getReferralDescriptionModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referral/templates/referral-description.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getShareReferralModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referral/templates/share-referral-link.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        deleteReferralLink : function(referralLink) {\n          var url = utilities.getDeleteReferralUrl();\n          return RestConfig.deleteReferralLink(url, referralLink);\n        },\n        findMatchingResumesInFolder : function(id) {\n          return RestConfig.scanMatchingResumesInFolder(id);\n        },\n        findMatchingResumesInMultipleFolder : function(id) {\n          return RestConfig.scanMatchingResumesInMultipleFolder(id);\n        },\n        getUpdatingJobSkillsModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referral/templates/categorizing-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getBuildingSmartCategoryModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referral/templates/building-smart-category-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getScanFolderResultModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referral/templates/matching-folder-resume.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        }, getListSkillCategories : function() {\n          return RestConfig.listSkillCategories();\n        }, getJobCategories : function(referralLink) {\n          return RestConfig.listCategoriesOfJob(referralLink);\n        }, categorizeJobSkills : function(jobId, categoryIds) {\n          return RestConfig.updateJobSkillCategories(jobId, categoryIds);\n        }, buildSmartCategories : function(jobId) {\n          return RestConfig.getSmartCategoriesOfJob(jobId);\n        }, newCategory : function(name, skillIds) {\n          return RestConfig.addNewCategorySkill(name, skillIds);\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.referredResumes\")\n  .controller(\"ReferredResumesCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location\n    ) {\n      $scope.JOB_STATUS = Constants.jobAppStatus;\n      $scope.SHARED_LEVEL = Constants.resumeSharedLevel;\n\n      var Utilities = $injector.get(\"Utilities\");\n      var service = $injector.get(\"ReferredResumesService\");\n      var ResumesSvc = $injector.get(\"ResumesSvc\");\n\n      var isAdmin = Authorization.getUserRole() === \"ADMIN\";\n      var referralLink = \"\",\n        parentLink = \"\";\n      var childLinks = [];\n\n      $scope.resumesModal = null;\n      $scope.referredResumes = {\n        list : [],\n        shareResume : null,\n        sharing : false,\n        sharingSuccess : false,\n        updateSttInput : \"select\",\n        isChildRef : false,\n        detail : {},\n        matchingType : false\n      };\n      $scope.matchingModal = {\n        skills : []\n      };\n\n      $scope.loadRefContent = function(refCode) {\n        service.getReferralDetail(refCode).then(function (rpData) {\n          $scope.referredResumes.detail = rpData;\n        });\n      }\n\n      $scope.loadListReferredResumes = function (refCode) {\n        service.getReferredResumes(refCode)\n          .then(function (rpData) {\n            if (rpData && rpData.length > 0) {\n              var oldList = $scope.referredResumes.list;\n              $scope.referredResumes.list = oldList.concat(rpData);\n            }\n          });\n      };\n\n      $scope.loadListMatchingResumes = function (refCode) {\n        service.getMatchingResumes(refCode)\n          .then(function (rpData) {\n            if (rpData && rpData.length > 0) {\n              var oldList = $scope.referredResumes.list;\n              $scope.referredResumes.list = oldList.concat(rpData);\n            }\n          });\n      };\n\n      $scope.loadListChildLinks = function () {\n        service.getChildLinks(referralLink)\n          .then(function (rpData) {\n            childLinks = rpData;\n\n            $scope.loadListReferredResumesOfChild();\n          });\n      };\n\n      $scope.loadListReferredResumesOfChild = function () {\n        for (\n          var i = 0,\n            len = childLinks.length; i < len; i++\n        ) {\n          var link = childLinks[i];\n          var childRefLink = link.referralLink;\n          var status = link.jobAppStatus;\n          if (status === $scope.JOB_STATUS.SHARED_WITH_TARGET) {\n            $scope.loadListReferredResumes(childRefLink);\n          }\n        }\n      };\n\n      $scope.formatDateTime = function (utcStr) {\n        return !!utcStr ? Utilities.getFormattedDate(utcStr) : \"\";\n      };\n\n      $scope.downloadMyResume = function (id) {\n        service.getResumeToken(id, referralLink)\n          .then(function (data) {\n            var url = Constants.baseUrl + \"/user/downloadResume?accessToken=\" + data.token;\n\n            const link = document.createElement('a');\n            link.href = url;\n            link.target = '_blank';\n            document.body.appendChild(link);\n            link.click();\n            toastr.success(Utilities.getAlerts(\"resumeDownloadSuccess\").message);\n\n            link.remove();\n          }, function () {\n          });\n      };\n\n      $scope.openPreviewResume = function (id, fileType) {\n        service.getResumeToken(id, referralLink)\n          .then(function (data) {\n            // var url = \"http://localhost:8080/user/previewResume?accessToken=\" + data.token;\n            // if (fileType !== \"application/pdf\") {\n            //   url = \"https://view.officeapps.live.com/op/embed.aspx?src=\" + url;\n            // }\n            var url =  \"/job-resume-preview?accessToken=\" + data.token;\n\n            const link = document.createElement('a');\n            link.href = url;\n            link.target = '_blank';\n            document.body.appendChild(link);\n            link.click();\n            link.remove();\n          }, function () {\n          });\n      };\n\n      $scope.isShareToTarget = function(sharedLevel) {\n        return !$scope.referredResumes.isChildRef && (!sharedLevel || sharedLevel === $scope.SHARED_LEVEL.PARENT);\n      }\n\n      $scope.ableToShare = function (sharedLevel) {\n        if ($scope.referredResumes.matchingType) {\n          return false;\n        }\n\n        if ($scope.referredResumes.isChildRef) {\n          return sharedLevel === null;\n        } else {\n          return  !sharedLevel || sharedLevel === $scope.SHARED_LEVEL.PARENT;\n        }\n      };\n\n      $scope.ableToUpdate = function (sharedLevel, resumeStatus) {\n        if ($scope.referredResumes.matchingType) {\n          return false;\n        }\n\n        return $scope.ableToShare(sharedLevel) && (resumeStatus === $scope.JOB_STATUS.APPLIED_JOB || resumeStatus === $scope.JOB_STATUS.SELECTED_FOR_INTERVIEW ||\n          resumeStatus === $scope.JOB_STATUS.SELECTED_FOR_INTERVIEW);\n      };\n\n      $scope.openShareResumeModal = function (resume) {\n        $scope.referredResumes.shareResume = resume;\n        $scope.resumesModal = service.getSharingResumeModal($scope, \"ReferalModalCtrl\");\n      };\n\n      $scope.openStatusModal = function (resume) {\n        var status= resume.resumeStatus;\n        $scope.referredResumes.shareResume = resume;\n        if (status === $scope.JOB_STATUS.APPLIED_JOB) {\n          $scope.resumesModal = service.getInterviewResumeModal($scope, \"ReferalModalCtrl\");\n        } else if (status === $scope.JOB_STATUS.SELECTED_FOR_INTERVIEW) {\n          $scope.resumesModal = service.getJobResumeModal($scope, \"ReferalModalCtrl\");\n        }\n      };\n\n      $scope.openMatchingSkillModal = function (matchingId) {\n        service.getMatchingSkills(matchingId)\n          .then(function (data) {\n            $scope.matchingModal.skills = data;\n          });\n\n        $scope.resumesModal = service.getMatchingSkillsOfResumeModal($scope, \"ReferalModalCtrl\");\n      };\n\n      $scope.shareReferredResumes = function () {\n        var resume = $scope.referredResumes.shareResume;\n        var id = resume.id;\n        var sharedLevel = resume.sharedWith;\n\n        var isToTarget = $scope.isShareToTarget(sharedLevel);\n        var shareFunc = isToTarget ? service.shareResumeToTarget : service.shareResumeToParent;\n\n        $scope.referredResumes.sharing = true;\n        shareFunc(id)\n          .then(function () {\n            $scope.referredResumes.shareResume.sharedWith = isToTarget ? $scope.SHARED_LEVEL.JOB_POSTER : $scope.SHARED_LEVEL.PARENT;\n            $scope.referredResumes.sharingSuccess = true;\n            $scope.referredResumes.sharing = false;\n          });\n      };\n\n      $scope.updateInterviewStt = function () {\n        var resume = $scope.referredResumes.shareResume;\n        var id = resume.id;\n        var stt = $scope.referredResumes.updateSttInput === \"select\" ? $scope.JOB_STATUS.SELECTED_FOR_INTERVIEW : $scope.JOB_STATUS.REJECTED_FOR_INTERVIEW;\n\n        $scope.referredResumes.sharing = true;\n        service.updateResumeInterviewStatus(id, stt)\n          .then(function () {\n            $scope.referredResumes.shareResume.resumeStatus = stt;\n            $scope.referredResumes.sharingSuccess = true;\n            $scope.referredResumes.sharing = false;\n            $scope.closeModal();\n          });\n      };\n\n      $scope.updateJobStt = function () {\n        var resume = $scope.referredResumes.shareResume;\n        var id = resume.id;\n        var stt = $scope.referredResumes.updateSttInput === \"select\" ? $scope.JOB_STATUS.SELECTED_FOR_JOB : $scope.JOB_STATUS.REJECTED_FOR_JOB;\n\n        $scope.referredResumes.sharing = true;\n        service.updateResumeJobStatus(id, stt)\n          .then(function () {\n            $scope.referredResumes.shareResume.resumeStatus = stt;\n            $scope.referredResumes.sharingSuccess = true;\n            $scope.referredResumes.sharing = false;\n            $scope.closeModal();\n          });\n      };\n\n      $scope.getMatchPercentage = function(noOfMatch, noOfSkills) {\n        if (noOfSkills > 0) {\n          return Math.round(noOfMatch / noOfSkills * 100);\n        }\n\n        return 0;\n      }\n\n      $scope.closeModal = function () {\n        $scope.resumesModal.dismiss();\n        $scope.referredResumes.shareId = null;\n        $scope.referredResumes.sharing = false;\n        $scope.referredResumes.sharingSuccess = false;\n        $scope.referredResumes.updateSttInput = \"select\";\n        $scope.matchingModal.skills = [];\n      };\n\n      $scope.init = function () {\n        var params = $location.search();\n        referralLink = params.referralLink;\n        parentLink = params.parentLink;\n\n        var type = params.type;\n        var matchingType = type === \"matching\";\n        $scope.referredResumes.matchingType = matchingType;\n\n        $scope.referredResumes.isChildRef = !!parentLink;\n        $scope.loadRefContent(referralLink);\n\n        if (!matchingType) {\n          $scope.loadListReferredResumes(referralLink);\n        } else {\n          $scope.loadListMatchingResumes(referralLink);\n        }\n      };\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.referredResumes\")\n  .factory(\"ReferredResumesService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    function (\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        getReferralDetail: function(referralLink) {\n          var url = utilities.getReferralContentUrl();\n          return RestConfig.getReferralContent(url, referralLink);\n        },\n        getReferredResumes: function(referralLink) {\n          var url = utilities.getReferredResumeListUrl();\n          return RestConfig.getReferredResumeList(url, referralLink);\n        },\n        getMatchingResumes: function(referralLink) {\n          return RestConfig.getMatchingResumesOfJob(referralLink);\n        },\n        getChildLinks: function(parentLink) {\n          var url = utilities.getChildRefLinks();\n          return RestConfig.getChildRefLinkList(url, parentLink);\n        },\n        shareResumeToParent : function(id) {\n          var url = utilities.getShareResumeToParentLinkUrl();\n          return RestConfig.shareResumeToParentLink(url, id);\n        },\n        shareResumeToTarget : function(id) {\n          var url = utilities.getShareResumeToTargetUrl();\n          return RestConfig.shareResumeToTargetLink(url, id);\n        },\n        updateResumeInterviewStatus : function(id, stt) {\n          var url = utilities.getUpdateResumeInterviewStatusUrl();\n          return RestConfig.updateResumeInterview(url, id, stt);\n        },\n        updateResumeJobStatus : function(id, stt) {\n          var url = utilities.getUpdateResumeJobStatusUrl();\n          return RestConfig.updateResumeJob(url, id, stt);\n        },\n        getSharingResumeModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referred-resumes/templates/share-resumes-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getMatchingSkillsOfResumeModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referred-resumes/templates/list-matching-skills-modal.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getInterviewResumeModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referred-resumes/templates/update-resume-interview.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getJobResumeModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/referred-resumes/templates/update-resume-job.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getResumeToken: function(id, referralLink) {\n          var url = utilities.getResumeTokenUrl();\n          return RestConfig.getResumeTokenToPreview(url, referralLink, id);\n        },\n        getMatchingSkills: function(matchingId) {\n          return RestConfig.getListMatchingSkills(matchingId);\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.resumes\")\n\n  .controller(\"ResumesCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http\n    ) {\n      // Variables initialization\n      var Utilities = $injector.get(\"Utilities\");\n      var AccountSvc = $injector.get(\"AccountSvc\");\n      var ResumesSvc = $injector.get(\"ResumesSvc\");\n      var Constants = $injector.get(\"Constants\");\n\n      //Used scopes\n      $scope.resumeModal = {};\n      $scope.user = {\n        myResumes : []\n      };\n      $scope.editLinkForm = {\n        selectedResume : null,\n        linkId : \"\",\n        type : null,\n        inUse : false,\n        editing : false\n      };\n\n      //Get User Details Function\n      $scope.getUserDetails = function () {\n        AccountSvc.getUser()\n          .then(\n            function (userData) {\n\n              $scope.user = userData;\n              $scope.getMyResumes();\n            },\n\n            function (response) {\n              toastr.error(Utilities.getAlerts(response.status));\n            }\n          );\n      };\n      //////////////////////////////////////////////////////////////////////////////////////\n      //Listing Resumes Function\n      $scope.getMyResumes = function () {\n\n        $scope.user.myResumes = [];\n\n        ResumesSvc.getMyResumes($scope.user.id)\n          .then(\n            function (resumesData) {\n              var len = resumesData.length;\n              for (var i = 0; i < len; i++) {\n                var resume = resumesData[i];\n                initExpiration(resume);\n                $scope.user.myResumes.push(resume);\n              }\n            }\n          );\n      };\n\n      function isExpired(date) {\n        var now = new Date();\n        return (!!date && now.getTime() > date.getTime());\n      }\n\n      function initExpiration(resume) {\n        var maskedExpiresAt = resume.previewExpiresAt;\n        var originalExpiresAt = resume.originalPreviewExpiresAt;\n\n        if (!!maskedExpiresAt) {\n          var dateObj = new Date(maskedExpiresAt);\n          resume.maskedExpired = isExpired(dateObj);\n        }\n\n        if (!!originalExpiresAt) {\n          var dateObj = new Date(originalExpiresAt);\n          resume[\"originalExpired\"] = isExpired(dateObj);\n        }\n      }\n\n      $scope.getFormattedDate = function (utc) {\n        if (!!utc) {\n          var dateObj = new Date(utc);\n\n          var date = dateObj.getDate();\n          date = date < 10 ? (\"0\" + date) : (\"\" + date);\n          var month = dateObj.getMonth() + 1;\n          month = month < 10 ? (\"0\" + month) : (\"\" + month);\n          var hour = dateObj.getHours();\n          hour = hour < 10 ? (\"0\" + hour) : (\"\" + hour);\n          var minutes = dateObj.getMinutes();\n          minutes = minutes < 10 ? (\"0\" + minutes) : (\"\" + minutes);\n          return date + \"/\" + month + \"/\" + dateObj.getFullYear();\n        }\n\n        return \"\";\n      };\n\n      $scope.getFormattedPostDate = function (utc) {\n        if (!!utc) {\n          var dateObj = new Date(utc);\n\n          var date = dateObj.getDate();\n          date = date < 10 ? (\"0\" + date) : (\"\" + date);\n          var month = dateObj.getMonth() + 1;\n          month = month < 10 ? (\"0\" + month) : (\"\" + month);\n          var hour = dateObj.getHours();\n          hour = hour < 10 ? (\"0\" + hour) : (\"\" + hour);\n          var minutes = dateObj.getMinutes();\n          minutes = minutes < 10 ? (\"0\" + minutes) : (\"\" + minutes);\n          return date + \"/\" + month + \"/\" + dateObj.getFullYear() + \" \" + hour + \":\" + minutes;\n        }\n\n        return \"\";\n      };\n      /////////////////////////////////////////////////////////////////////////////////////\n      //open new Resume Model Function\n      $scope.addNewResumeModel = function () {\n\n        $scope.resumeModal = ResumesSvc.getNewResumeModal($scope, \"ResumeCtrl\");\n        $scope.myFile = null;\n        $scope.id = null;\n        $scope.resumeTitle = null;\n        $scope.resumeType = null;\n      };\n\n      /////////////////////////////////////////////////////////////////////////////////////\n      //open new push to drive modal\n      $scope.openPushResumeModel = function (\n        id,\n        name\n      ) {\n        const userEmail = $scope.user.email;\n        if (userEmail.endsWith(\"@gmail.com\")) {\n          $scope.resumeModal = ResumesSvc.getPushResumeModal($scope, \"ResumeCtrl\");\n          $scope.recruiterName = null;\n          $scope.recruiterEmail = null;\n          $scope.agencyName = null;\n          $scope.formNotes = null;\n          $scope.selectedResumeId = id;\n          $scope.selectedResumeName = name;\n        } else {\n          $scope.resumeModal = ResumesSvc.getGmailAuthenticationAdviceModal($scope, \"ResumeCtrl\");\n        }\n      };\n\n      /////////////////////////////////////////////////////////////////////////////////////\n      //open new Resume Model Function\n      $scope.addNewResumeModelFromTrackResumeModel = function () {\n\n        $scope.resumeModal = ResumesSvc.getQuickUploadResumeModal($scope, \"ResumeCtrl\");\n        $scope.myFile = null;\n        $scope.id = null;\n        $scope.resumeTitle = null;\n        $scope.resumeType = \"quickCV\";\n      };\n      //////////////////////////////////////////////////////////////////////////////////////\n      //Open Edit Resume Model Function\n      $scope.openEditResumeModel = function (resumeId) {\n\n        $scope.findMyResume(resumeId);\n        $scope.resumeModal = ResumesSvc.getEditResumeModal($scope, \"ResumeCtrl\");\n        $scope.id = resumeId;\n      };\n      ///////////////////////////////////////////////////////////////////////////////////////\n      //Open Delete Resume Model Function\n      $scope.openDeleteResumeModel = function (\n        resumeId,\n        resumeName\n      ) {\n        $scope.resumeModal = ResumesSvc.getWarningModal($scope, \"ResumeCtrl\");\n        $scope.id = resumeId;\n        $scope.resumeName = resumeName;\n        $scope.modelType = \"Delete\";\n        //Setting the title and message\n        $scope.modelTitle = Utilities.getAlerts(\"deleteModelTitle\").message;\n        $scope.modelMessage = Utilities.getAlerts(\"deleteModelMessage\").message;\n      };\n      //////////////////////////////////////////////////////////////////////////////////////\n      //Open Download Resume Model Function\n      $scope.openDownloadResumeModel = function (resumeId) {\n        $scope.resumeModal = ResumesSvc.getWarningModal($scope, \"ResumeCtrl\");\n        $scope.id = resumeId;\n        $scope.modelType = \"Download\";\n        //Setting the title and message\n        $scope.modelTitle = Utilities.getAlerts(\"downloadModelTitle\").message;\n        $scope.modelMessage = Utilities.getAlerts(\"downloadModelMessage\").message;\n      };\n\n      $scope.openEditPreviewLink = function (\n        resume,\n        type\n      ) {\n        $scope.editLinkForm.selectedResume = resume;\n        var linkId = \"\";\n        if (type === \"MASKED\") {\n          linkId = !!resume.maskedLinkId ? resume.maskedLinkId : \"\";\n        } else {\n          linkId = !!resume.originalLinkId ? resume.originalLinkId : \"\";\n        }\n        $scope.editLinkForm.linkId = linkId;\n        $scope.editLinkForm.type = type;\n\n        $scope.resumeModal = ResumesSvc.getEditPreviewLinkModal($scope, \"ResumeCtrl\");\n      };\n\n      //Close the resume model function\n      $scope.closeModal = function () {\n        $scope.resumeModal.dismiss();\n        $scope.myFile = null;\n        $scope.id = null;\n        $scope.resumeTitle = null;\n        $scope.resumeType = null;\n\n        $scope.editLinkForm.selectedResume = null;\n        $scope.editLinkForm.linkId = \"\";\n        $scope.editLinkForm.type = null;\n        $scope.editLinkForm.editing = false;\n        $scope.editLinkForm.inUse = false;\n        $scope.formProcessing = false;\n      };\n      ///////////////////////////////////////////////////////////////////////////////////////////\n      /*\n       * CRUD Functions\n       */\n      //Find Resume by Function: used in both edit and delete resume model function\n      $scope.findMyResume = function (id) {\n\n        ResumesSvc.findMyResume(id)\n          .then(\n            function (resumesData) {\n              $scope.resumeTitle = resumesData.resumeTitle;\n              $scope.resumeType = resumesData.resumeType;\n              $scope.resumeName = resumesData.resumeName;\n              var file = new File([resumesData.resumeFile], resumesData.resumeName);\n              file.name = resumesData.resumeName;\n              file.type = \"application/msword\";\n              $scope.myFile = file;\n            }\n          );\n      };\n      //Save Resume Function, Used for both new and edit resume\n      $scope.saveMyResume = function (\n        file,\n        resumeTitle,\n        resumeType\n      ) {\n        if ($scope.formProcessing) {\n          return;\n        }\n        $scope.formProcessing = true;\n\n        var fd = new FormData();\n        const userEmail = $scope.user.email;\n        fd.append(\"userEmail\", userEmail);\n        fd.append(\"file\", file);\n        fd.append(\"resumeReference\", resumeTitle);\n        fd.append(\"resumeType\", resumeType);\n        fd.append(\"resumeReviewer\", \"randeep\");\n\n        //ResumesSvc.saveMyResume(fd).\n        //This must be changed to call the service layer\n        var url = Utilities.getSaveResumesUrl();\n        $http.post(url, fd, {\n          transformRequest : angular.identity,\n          headers : { \"Content-Type\" : undefined }\n        })\n          .success(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            $scope.closeModal();\n            $rootScope.$broadcast(\"quickCV\");\n            toastr.success(Utilities.getAlerts(\"resumeAddedSuccess\").message);\n\n            data.uploadedAt = Utilities.getFormattedDate(data.uploadedAt);\n            $scope.user.myResumes.unshift(data);\n            $scope.formProcessing = false;\n          })\n          .error(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            $scope.formProcessing = false;\n            $scope.closeModal();\n\n            if (data.message == \"resumeSaveTitleDuplicatedError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveTitleDuplicatedError\").message);\n            } else if (data.message == \"resumeSaveTypeDuplicatedError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveTypeDuplicatedError\").message);\n            } else if (data.message == \"resumeSaveLimitError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveLimitError\").message);\n            } else if (data.message == \"resumeSaveNameDuplicatedError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveNameDuplicatedError\").message);\n            } else {\n              toastr.error(Utilities.getAlerts(\"defaultError\"));\n            }\n          });\n      };\n\n      $scope.pushToDrive = function () {\n        var trackingId = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n        for (var i = 0; i < 31; i++)\n          trackingId += possible.charAt(Math.floor(Math.random() * possible.length));\n\n        $scope.formProcessing = true;\n        $scope.closeModal();\n\n        var data = {\n          toRecruiter : $scope.recruiterEmail,\n          targetList : $scope.recruiterEmail,\n          recruiter : $scope.recruiterName,\n          notesType : \"job_board\",\n          agency : $scope.agencyName,\n          subject : \"email\",\n          trackingId : trackingId,\n          content : \"pls check\",\n          resumeId : $scope.selectedResumeId,\n          userId : 6, // once we get token after user auth we can use it\n          notes : $scope.formNotes,\n          createdDate : new Date()\n        };\n\n        var url = Utilities.getPushResumeToDriveUrl();\n        $http.post(url, data)\n          .success(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            $scope.formProcessing = false;\n            toastr.success(Utilities.getAlerts(\"resumePushedSuccess\").message);\n          })\n          .error(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            $scope.formProcessing = false;\n            toastr.error(Utilities.getAlerts(\"resumePushToDriveError\"));\n          });\n      };\n\n      $scope.checkUserRole = function () {\n\n        if ($scope.user.userRole == \"ADMIN\") {\n          return false;\n        } else {\n          return true;\n        }\n      };\n\n      $scope.loadResume = function (resumeLookUp) {\n\n        $scope.user.myResumes = [];\n\n        ResumesSvc.getOtherResumes($scope.user.id, resumeLookUp)\n          .then(\n            function (resumesData) {\n              $scope.user.myResumes = resumesData;\n            }\n          );\n\n      };\n\n      //Delete Resume Function\n      $scope.deleteMyResume = function () {\n        var id = $scope.id;\n        var resumeName = $scope.resumeName;\n\n        //ResumesSvc.deleteMyResume(fd)\n        //This must be changed to call the service layer\n        var url = Utilities.geDeleteResumesUrl() + \"?id=\" + id + \"&resumeName=\" + resumeName;\n        $http.delete(url, {\n          transformRequest : angular.identity,\n          headers : { \"Content-Type\" : undefined }\n        })\n          .success(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            $scope.closeModal();\n            toastr.success(Utilities.getAlerts(\"deleteResumeuccess\").message);\n            angular.forEach(\n              $scope.user.myResumes,\n              function (\n                obj,\n                i\n              ) {\n                if (id == obj.id) {\n                  $scope.user.myResumes.splice(i, 1);\n                }\n              }\n            );\n          })\n          .error(function (\n            data,\n            status,\n            headers,\n            config\n          ) {\n            $scope.closeModal();\n            if (data.message == \"resumeSaveLeastError\") {\n              toastr.error(Utilities.getAlerts(\"resumeSaveLeastError\").message);\n            } else {\n              toastr.error(Utilities.getAlerts(\"defaultError\").message);\n            }\n          });\n      };\n      //Download Resume Function\n      $scope.downloadMyResume = function (id) {\n        ResumesSvc.getResumeToken(id)\n          .then(function (data) {\n            var url = Constants.baseUrl + \"/user/downloadResume?accessToken=\" + data.token;\n\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.target = \"_blank\";\n            document.body.appendChild(link);\n            link.click();\n            toastr.success(Utilities.getAlerts(\"resumeDownloadSuccess\").message);\n\n            link.remove();\n          }, function () {\n          });\n      };\n      ////////////////////////////////////////////////////////////////////////////\n      $scope.checkPreviewId = function () {\n        if ($scope.editLinkForm.editing) return;\n        $scope.editLinkForm.editing = true;\n\n        var linkId = $scope.editLinkForm.linkId;\n        if (!linkId) {\n          $scope.editLinkForm.editing = false;\n          return;\n        }\n\n        var resumeId = $scope.editLinkForm.selectedResume.id;\n        var type = $scope.editLinkForm.type;\n\n        ResumesSvc.checkResumePreviewLink(linkId)\n          .then(function () {\n            $scope.editResumeLink();\n          })\n          .catch(function () {\n            $scope.editLinkForm.inUse = true;\n            $scope.editLinkForm.editing = false;\n          });\n      };\n\n      $scope.editResumeLink = function () {\n        var linkId = $scope.editLinkForm.linkId;\n        var resumeId = $scope.editLinkForm.selectedResume.id;\n        var type = $scope.editLinkForm.type;\n\n        ResumesSvc.updateResumeLink(resumeId, linkId, type)\n          .then(function () {\n            if (type === \"MASKED\") {\n              $scope.editLinkForm.selectedResume.maskedLinkId = linkId;\n            } else if (type === \"ORIGINAL\") {\n              $scope.editLinkForm.selectedResume.originalLinkId = linkId;\n            }\n\n            toastr.success(\"Preview link has been updated successfully.\");\n            $scope.closeModal();\n          })\n          .catch(function () {\n            toastr.error(\"Updating preview link has failed!\", \"Error\");\n            $scope.closeModal();\n          });\n      };\n\n      $scope.init = function () {\n        $scope.getUserDetails();\n      };\n\n      $scope.init();\n\n      $scope.alerts = [];\n      $scope.formProcessing = false;\n      var $timeout = $injector.get(\"$timeout\");\n\n      $scope.addAlert = function (alertOb) {\n        $scope.alerts.push(alertOb);\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.resumes\")\n  .controller(\"ResumeCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var Utilities = $injector.get(\"Utilities\");\n\n      $scope.saveResume = function () {\n        var file = $scope.myFile;\n        var resumeTitle = $scope.resumeTitle;\n        var resumeType = $scope.resumeType;\n        if (file != null && file.size >= 5000000) {\n          $scope.addAlert(Utilities.getAlerts(\"InputFileInputSizeValidation\"));\n          $scope.myFile = null;\n          return false;\n        }\n        if (file != null) {\n          $scope.saveMyResume(file, resumeTitle, resumeType);\n        } else {\n          $scope.addAlert(Utilities.getAlerts(\"InputFileInputRequiredValidation\"));\n        }\n\n      };\n\n      $scope.modelFunction = function () {\n        if ($scope.modelType == \"Delete\") {\n          $scope.deleteMyResume();\n        }\n        if ($scope.modelType == \"Download\") {\n          $scope.downloadMyResume();\n        }\n      };\n    }\n  ]);\n\n\nangular.module(\"MyCvTracker.pages.resumes\")\n  .directive(\"fileModel\", [\n    \"$parse\",\n    \"$injector\",\n    \"Constants\",\n    function (\n      $parse,\n      $injector,\n      Constants\n    ) {\n      return {\n        restrict : \"A\",\n        link : function (\n          scope,\n          element,\n          attrs\n        ) {\n          var model = $parse(attrs.fileModel);\n          var modelSetter = model.assign;\n          var Utilities = $injector.get(\"Utilities\");\n\n          element.bind(\"change\", function () {\n            scope.$apply(function () {\n              modelSetter(scope, element[0].files[0]);\n              var file = scope.myFile;\n              var validExts = [\n                \"application/pdf\",\n                \"application/msword\",\n                \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n              ];\n              var fileExt = file.type;\n              var input = $(\"#fileUpload\");\n              if (validExts.indexOf(fileExt) < 0) {\n                scope.addAlert(Utilities.getAlerts(\"InputFileInputTypeValidation\"));\n                scope.myFile = null;\n                return false;\n              }\n\n              if (file.size >= Constants.fileUpload.fileSizeLimitInByte) {\n                scope.addAlert(Utilities.getAlerts(\"InputFileInputSizeValidation\"));\n                scope.myFile = null;\n                return false;\n              }\n            });\n          });\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.resumes\")\n\n  .factory(\"ResumesSvc\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n\n    function (\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n\n      var Utilities = $injector.get(\"Utilities\");\n\n      return {\n\n        getAllMyResumes : function (userId) {\n\n          var url = Utilities.getAllMyResumesUrl();\n          return RestConfig.getMyResumes(url);\n        },\n        getMyResumes : function (userId) {\n\n          var url = Utilities.getMyResumesUrl();\n          return RestConfig.getMyResumes(url);\n        },\n\n        getOtherResumes : function (\n          userId,\n          userEmailAddress\n        ) {\n\n          var url = Utilities.getOtherResumesUrl() + \"?userEmailAddress=\" + userEmailAddress;\n          return RestConfig.getMyResumes(url);\n        },\n\n        saveMyResume : function (userResumeOb) {\n\n          var url = Utilities.getSaveResumesUrl();\n          return RestConfig.saveMyResume(url, userResumeOb);\n        },\n        deleteMyResume : function (requestObj) {\n\n          var url = Utilities.geDeleteResumesUrl();\n          return RestConfig.deleteMyResume(url, requestObj);\n        },\n\n        checkResumePreviewLink : function (id) {\n          return RestConfig.checkUniquePreviewLink(id);\n        },\n\n        updateResumeLink : function (resumeId, linkId, type) {\n          return RestConfig.updateResumePreviewLink(resumeId, linkId, type);\n        },\n\n        findMyResume : function (id) {\n\n          var url = Utilities.getFindResumeUrl() + id;\n          return RestConfig.findMyResumes(url);\n        },\n\n        downloadMyResume : function (id) {\n\n          var url = Utilities.getDownloadResumeUrl() + id;\n          return RestConfig.downloadMyResume(url);\n        },\n\n        getResumeToken: function(id, referralLink) {\n          var url = Utilities.getResumeTokenUrl();\n          return RestConfig.getResumeTokenToPreview(url, referralLink, id);\n        },\n\n        getQuickUploadResumeModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/resumes/templates/quick_upload_resume.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        },\n        getNewResumeModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/resumes/templates/new_resume.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        },\n        getPushResumeModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/resumes/templates/push_resume_modal.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        },\n        getGmailAuthenticationAdviceModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/resumes/templates/authentication_advice_modal.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        },\n        getEditResumeModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/resumes/templates/edit_resume.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        },\n        getWarningModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/resumes/templates/warning.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        },\n        getEditPreviewLinkModal : function (\n          scope,\n          ctrlName\n        ) {\n\n          var modalOpts = {\n            templateUrl : \"app/pages/resumes/templates/edit-link.html\",\n            controller : ctrlName,\n            scope : scope\n          };\n\n          return $injector.get(\"$uibModal\")\n            .open(modalOpts);\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.targetResumeDetail\")\n  .controller(\"TargetResumeDetailCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location\n    ) {\n      $scope.JOB_STATUS = Constants.jobAppStatus;\n\n      var Utilities = $injector.get(\"Utilities\");\n      var mainSvc = $injector.get(\"TargetResumeDetailService\");\n\n      var accesstoken = null, resumeId = null;\n\n      $scope.resumeData = {\n        detail : {},\n        job : {},\n        updateSttInput : \"select\",\n        sharing : false\n      }\n\n      $scope.formatDateTime = function (utcStr) {\n        return !!utcStr ? Utilities.getFormattedDate(utcStr) : \"\";\n      };\n\n      $scope.loadResumeDetail = function() {\n        if (!!accesstoken && !!resumeId) {\n          mainSvc.getResumeDetail(resumeId, accesstoken).then(function(rpData) {\n            $scope.resumeData.detail = rpData.resume;\n            $scope.resumeData.job = rpData.referral;\n          });\n        }\n      }\n\n      $scope.updateInterviewStt = function() {\n        var stt = $scope.resumeData.updateSttInput === \"select\" ? $scope.JOB_STATUS.SELECTED_FOR_INTERVIEW : $scope.JOB_STATUS.REJECTED_FOR_INTERVIEW;\n        $scope.resumeData.sharing = true;\n        mainSvc.updateResumeInterviewStatus(resumeId, accesstoken, stt)\n          .then(function () {\n            $scope.resumeData.detail.resumeStatus = stt;\n            $scope.resumeData.sharing = false;\n            $scope.closeModal();\n          });\n      }\n\n      $scope.updateJobStt = function() {\n        var stt = $scope.resumeData.updateSttInput === \"select\" ? $scope.JOB_STATUS.SELECTED_FOR_JOB : $scope.JOB_STATUS.REJECTED_FOR_JOB;\n        $scope.resumeData.sharing = true;\n        mainSvc.updateResumeJobStatus(resumeId, accesstoken, stt)\n          .then(function () {\n            $scope.resumeData.detail.resumeStatus = stt;\n            $scope.resumeData.sharing = false;\n            $scope.closeModal();\n          });\n      }\n\n      $scope.openPreviewResume = function () {\n        var url = Constants.baseUrl + \"/user/resume/\" + resumeId + \"/poster-preview?token=\" + accesstoken;\n        if ($scope.resumeData.detail.fileType !== \"application/pdf\") {\n          url = \"https://view.officeapps.live.com/op/embed.aspx?src=\" + url;\n        }\n\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = '_blank';\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      };\n\n      $scope.downloadResume = function () {\n        var url = Constants.baseUrl + \"/user/resume/\" + resumeId + \"/poster-download?token=\" + accesstoken;\n\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = '_blank';\n        document.body.appendChild(link);\n        link.click();\n        toastr.success(Utilities.getAlerts(\"resumeDownloadSuccess\").message);\n\n        link.remove();\n      };\n\n      $scope.openStatusModal = function() {\n        var status= $scope.resumeData.detail.resumeStatus;\n        if (status === $scope.JOB_STATUS.APPLIED_JOB) {\n          $scope.resumesModal = mainSvc.getInterviewResumeModal($scope, \"ReferalModalCtrl\");\n        } else if (status === $scope.JOB_STATUS.SELECTED_FOR_INTERVIEW) {\n          $scope.resumesModal = mainSvc.getJobResumeModal($scope, \"ReferalModalCtrl\");\n        }\n      }\n\n      $scope.closeModal = function() {\n        $scope.resumesModal.dismiss();\n        $scope.resumeData.updateSttInput = \"select\";\n        $scope.resumeData.sharing = false;\n      }\n\n      $scope.init = function () {\n        var params = $location.search();\n        accesstoken = params.token;\n        resumeId = params.id;\n\n        $scope.loadResumeDetail();\n      };\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.targetResumeDetail\")\n  .factory(\"TargetResumeDetailService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    function (\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        getResumeDetail: function(id, token) {\n          var url = utilities.getTargetResumeDetailUrl(id);\n          return RestConfig.getTargetResumeDetail(url, token);\n        },\n        getInterviewResumeModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/target-resume-detail/templates/update-resume-interview.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        getJobResumeModal: function (scope, ctrlName) {\n          var modalOpts = {\n            templateUrl: 'app/pages/target-resume-detail/templates/update-resume-job.html',\n            controller: ctrlName,\n            scope: scope,\n            backdrop: 'static'\n          };\n\n          return $injector.get('$uibModal').open(modalOpts);\n        },\n        updateResumeInterviewStatus : function(id, targetAccessToken, resumeStatus) {\n          var url = utilities.getTargetUpdateResumeInterviewStatusUrl();\n          return RestConfig.targetUpdateResumeInterview(url, id, resumeStatus, targetAccessToken);\n        },\n        updateResumeJobStatus : function(id, targetAccessToken, resumeStatus) {\n          var url = utilities.getTargetUpdateResumeJobStatusUrl();\n          return RestConfig.targetUpdateResumeJob(url, id, resumeStatus, targetAccessToken);\n        }\n      };\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.socialRegistrations\")\n  .controller(\"SocialRegistrationCtrl\", [\n    \"Constants\",\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    \"Authorization\",\n    \"$location\",\n    function (\n      Constants,\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http,\n      Authorization,\n      $location\n    ) {\n      $scope.SHARED_LEVEL = Constants.resumeSharedLevel;\n\n      var Utilities = $injector.get(\"Utilities\");\n      var service = $injector.get(\"SocialRegistrationService\");\n      var resumesService = $injector.get(\"ReferredResumesService\");\n\n      var referralLink = \"\",\n        parentLink = \"\";\n\n      $scope.referredResumes = {\n        list : [],\n        shareResume : null,\n        sharing : false,\n        sharingSuccess : false,\n        updateSttInput : \"select\",\n        isChildRef : false,\n        detail : {}\n      };\n\n      $scope.formatDateTime = function (utcStr) {\n\n        return !!utcStr ? Utilities.getFormattedDate(utcStr) : \"\";\n      };\n\n      $scope.loadRefContent = function(refCode) {\n        resumesService.getReferralDetail(refCode).then(function (rpData) {\n          $scope.referredResumes.detail = rpData;\n        });\n      }\n\n      $scope.loadListRegistrations = function (refCode) {\n        service.getSocialRegistrations(refCode)\n          .then(function (rpData) {\n            if (rpData && rpData.length > 0) {\n              var oldList = $scope.referredResumes.list;\n              $scope.referredResumes.list = oldList.concat(rpData);\n            }\n          });\n      };\n\n      $scope.ableToShare = function (sharedLevel) {\n        if ($scope.referredResumes.isChildRef) {\n          return sharedLevel === null;\n        }\n      };\n\n      $scope.shareSocialRegistration = function () {\n        var resume = $scope.referredResumes.shareResume;\n        var id = resume.id;\n\n        $scope.referredResumes.sharing = true;\n        service.shareSocialToParent(id)\n          .then(function () {\n            $scope.referredResumes.shareResume.sharedWith = $scope.SHARED_LEVEL.PARENT;\n            $scope.referredResumes.sharingSuccess = true;\n            $scope.referredResumes.sharing = false;\n          });\n      };\n\n      $scope.openShareModal = function (resume) {\n        $scope.referredResumes.shareResume = resume;\n\n        var modalOpts = {\n          templateUrl: 'app/pages/social-registrations/templates/share-registration-modal.html',\n          controller: \"SocialRegistrationModalCtrl\",\n          scope: $scope,\n          backdrop: 'static'\n        };\n\n        $scope.resumesModal = $injector.get('$uibModal').open(modalOpts);\n      };\n\n      $scope.closeModal = function () {\n        $scope.resumesModal.dismiss();\n        $scope.referredResumes.sharing = false;\n        $scope.referredResumes.sharingSuccess = false;\n        $scope.referredResumes.shareResume = null;\n      };\n\n      $scope.init = function () {\n        var params = $location.search();\n        referralLink = params.referralLink;\n        parentLink = params.parentLink;\n\n        $scope.referredResumes.isChildRef = !!parentLink;\n\n        $scope.loadRefContent(referralLink);\n        $scope.loadListRegistrations(referralLink);\n      };\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.socialRegistrations\")\n  .controller(\"SocialRegistrationModalCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.socialRegistrations\")\n  .factory(\"SocialRegistrationService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    function (\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        getSocialRegistrations : function(refLink) {\n          var url = utilities.getSocialRegistrationListUrl();\n          return RestConfig.getSocialRegistrationList(url, refLink);\n        },\n        shareSocialToParent : function(id) {\n          var url = utilities.getShareSocialToParentLinkUrl();\n          return RestConfig.shareSocialToParentLink(url, id);\n        },\n      };\n    }\n  ]);\n\n\n\tangular.module('MyCvTracker.pages.trackResume')\n\n\t    .controller('TrackResumeCtrl', ['toastr', '$scope', '$injector','localStorageService',\n\n\t        function (toastr, $scope, $injector,localStorageService) {\n\n\t\t\t\tvar Utilities = $injector.get('Utilities');\n\t\t\t\tvar AccountSvc = $injector.get('AccountSvc');\n\t\t\t\tvar ResumesSvc = $injector.get('ResumesSvc');\n\t\t\t\tvar TrackResumeSvc = $injector.get('TrackResumeSvc');\n\t\t\t\tvar PaymentSvc = $injector.get('PaymentSvc');\n\n\t\t\t\t$scope.user = {\n\t\t\t\t\tmyResumes: [],\n                    myFavNotes : []\n\t\t\t\t};\n\n\t\t\t\t$scope.trackResumeObj = {\n\t\t\t\t\ttoRecruiter: '',\n\t\t\t\t\tfrom: '',\n                    targetList: '',\n\t\t\t\t\tsubject: '',\n\t\t\t\t\tcontent: '',\n\t\t\t\t\tnotes  : '',\n\t\t\t\t\tresumeId: '',\n\t\t\t\t\tuserId: ''\n\t\t\t\t};\n\n                $scope.currentNotesType = '';\n\n\t\t\t\t///////////////////////////////////Save Values on Refresh////////////////////////////////////////////\n\t\t\t\t$scope.trackResumeObj.toRecruiter = localStorageService.get('trackResumeObj.toRecruiter');\n\t\t\t\t$scope.trackResumeObj.from = localStorageService.get('trackResumeObj.from');\n\t\t\t\t$scope.trackResumeObj.recruiter = localStorageService.get('trackResumeObj.recruiter');\n\t\t\t\t$scope.trackResumeObj.agency = localStorageService.get('trackResumeObj.agency');\n\t\t\t\t$scope.trackResumeObj.subject = localStorageService.get('trackResumeObj.subject');\n\t\t\t\t$scope.trackResumeObj.content = localStorageService.get('trackResumeObj.content');\n\t\t\t\t$scope.trackResumeObj.notes = localStorageService.get('trackResumeObj.notes');\n\t\t\t\t$scope.trackResumeObj.resumeId = localStorageService.get('trackResumeObj.resumeId');\n\t\t\t\t$scope.trackResumeObj.userId = localStorageService.get('trackResumeObj.userId');\n\t\t\t\t$scope.trackResumeObj.targetList = localStorageService.get('trackResumeObj.targetList');\n\n\n                $scope.$watch(function(scope) { return scope.trackResumeObj.toRecruiter },\n\t\t\t\t\tfunction(newValue, oldValue) {\n\t\t\t\t\t\tlocalStorageService.set('trackResumeObj.toRecruiter',newValue);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t$scope.$watch(function(scope) { return scope.trackResumeObj.recruiter },\n\t\t\t\t\tfunction(newValue, oldValue) {\n\t\t\t\t\t\tlocalStorageService.set('trackResumeObj.recruiter',newValue);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t$scope.$watch(function(scope) { return scope.trackResumeObj.agency },\n\t\t\t\t\tfunction(newValue, oldValue) {\n\t\t\t\t\t\tlocalStorageService.set('trackResumeObj.agency',newValue);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t$scope.$on('quickCV', function () {\n\t\t\t\t\tconsole.log('got the event');\n\t\t\t\t\t$scope.getMyResumes();\n                });\n\n\t\t\t\t$scope.$watch(function(scope) { return scope.trackResumeObj.subject },\n\t\t\t\t\tfunction(newValue, oldValue) {\n\t\t\t\t\t\tlocalStorageService.set('trackResumeObj.subject',newValue);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t$scope.$watch(function(scope) { return scope.trackResumeObj.content },\n\t\t\t\t\tfunction(newValue, oldValue) {\n\t\t\t\t\t\tlocalStorageService.set('trackResumeObj.content',newValue);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t$scope.$watch(function(scope) { return scope.trackResumeObj.notes },\n\t\t\t\t\tfunction(newValue, oldValue) {\n\t\t\t\t\t\tlocalStorageService.set('trackResumeObj.notes',newValue);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t$scope.$watch(function(scope) { return scope.trackResumeObj.resumeId },\n\t\t\t\t\tfunction(newValue, oldValue) {\n\t\t\t\t\t\tlocalStorageService.set('trackResumeObj.resumeId',newValue);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t$scope.$watch(function(scope) { return scope.trackResumeObj.userId },\n\t\t\t\t\tfunction(newValue, oldValue) {\n\t\t\t\t\t\tlocalStorageService.set('trackResumeObj.userId',newValue);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.toRecruiter');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.toRecruiter = value;\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.from');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.from = value;\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.recruiter');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.recruiter = value;\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.agency');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.agency = value;\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.subject');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.subject = value;\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.content');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.content = value;\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.notes');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.notes = value;\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.resumeId');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.resumeId = value;\n\t\t\t\t});\n\n\t\t\t\t$scope.$watch(function(){\n\t\t\t\t\treturn localStorageService.get('trackResumeObj.userId');\n\t\t\t\t}, function(value){\n\t\t\t\t\t$scope.trackResumeObj.userId = value;\n\t\t\t\t});\n\n                $scope.$watch(function(){\n                    return localStorageService.get('trackResumeObj.targetList');\n                }, function(value){\n                    $scope.trackResumeObj.targetList = value;\n                });\n\t\t\t\t/////////////////////////////////////////////////////////////////////////////////////\n\n\t\t\t\t$scope.getUserDetails = function () {\n\n\t\t\t\t\tAccountSvc.getUser().then(\n\n\t\t\t\t\t\tfunction (userData) {\n\n\t\t\t\t\t\t\t$scope.user = userData;\n\t\t\t\t\t\t\t$scope.trackResumeObj.from = userData.userEmail;\n\t\t\t\t\t\t\t$scope.getMyResumes();\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tfunction (response) {\n\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts(response.status));\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n                $scope.getMyFavNotes = function () {\n\n\t\t\t\t\tTrackResumeSvc.getFavNotes().then(\n                    \tfunction (favNotes) {\n                            $scope.user.myFavNotes = [];\n                    \t\tfavNotes.forEach(function (favNote) {\n\t\t\t\t\t\t\t\t$scope.user.myFavNotes.push(favNote);\n                            });\n                        }\n\n\t\t\t\t\t);\n\n                };\n\n                $scope.getMyFavNote = function (favNoteToMatch) {\n\n                    $scope.user.myFavNotes.forEach(function (favNote) {\n                        if(favNote == favNoteToMatch){\n\t\t\t\t\t\t\tfavNote.id = '';\n                            $scope.trackResumeObj = favNote;\n\t\t\t\t\t\t}\n                    });\n                }\n\n\n\t\t\t\t$scope.getMyResumes = function () {\n\n\t\t\t\t\t$scope.user.myResumes = [];\n\n\t\t\t\t\tResumesSvc.getAllMyResumes($scope.user.id).then(\n\n\t\t\t\t\t\tfunction (resumesData) {\n\t\t\t\t\t\t\t$scope.user.myResumes = resumesData;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.postRequest = function (requestForm, requestModel) {\n\n\t\t\t\t\tif ( requestForm.$valid ) {\n\n\t\t\t\t\t\trequestModel.userId = $scope.user.id;\n                        requestModel.notesType = $scope.currentNotesType;\n\n\t\t\t\t\t\tTrackResumeSvc.saveResumeTrackRequest(requestModel).then(\n\n\t\t\t\t\t\t\tfunction (resumeTrackRequestData) {\n\t\t\t\t\t\t\t\ttoastr.success(Utilities.getAlerts('resumeTrackRequestSuccess'));\n                                Utilities.gotoTrackResumePage();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction(data){\n\t\t\t\t\t\t\t\tif(data.response.message=='favNotesSaveLimitError'){\n                                    toastr.error(Utilities.getAlerts('favNotesSaveLimitError'));\n                                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t$scope.getUserTick = function () {\n\t\t\t\t\t$scope.userTick = null;\n\t\t\t\t\tPaymentSvc.getUserTick().then(\n\t\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\t\t$scope.userTick = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\t$scope.validateUserTick = function () {\n\t\t\t\t\tvar PaymentSvc = $injector.get('PaymentSvc');\n\t\t\t\t\tPaymentSvc.validateUserTickNumber().then(\n\t\t\t\t\t\tfunction (resume) {\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction (response) {\n\t\t\t\t\t\t\ttoastr.error(Utilities.getAlerts('userTickException'));\n\t\t\t\t\t\t\tUtilities.gotoPaymentPage();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\n\t\t\t\t$scope.init = function () {\n\t\t\t\t\t$scope.getUserDetails();\n\t\t\t\t\t$scope.getUserTick();\n\t\t\t\t\t//$scope.validateUserTick();\n                    $scope.getMyFavNotes();\n\n                };\n\n\t\t\t\t$scope.init();\n\t        }\n\t    ]);\n\nangular.module(\"MyCvTracker.pages.userManagement\")\n  .controller(\"UserManagementCtrl\", [\n    \"toastr\",\n    \"$rootScope\",\n    \"$scope\",\n    \"$injector\",\n    \"$http\",\n    function (\n      toastr,\n      $rootScope,\n      $scope,\n      $injector,\n      $http\n    ) {\n      var userManagementService = $injector.get(\"UserManagementService\");\n      var deletingId = 0, deletingIdx = 0;\n\n      $scope.userManagement = {\n        users : [],\n        emailSearch : \"\",\n        inDeleting : false\n      };\n      $scope.modal = null;\n\n      $scope.loadUsers = function () {\n        var emailSearch = $scope.userManagement.emailSearch;\n        emailSearch = emailSearch.trim();\n        $scope.userManagement.users = [];\n        if (!!emailSearch) {\n          userManagementService.searchUser(emailSearch)\n            .then(function (user) {\n              $scope.userManagement.users.push(user);\n            });\n        } else {\n          userManagementService.getUsers()\n            .then(function (userList) {\n              $scope.userManagement.users = userList;\n            });\n        }\n      };\n\n      $scope.getReferralDirect = function (\n        id,\n        email\n      ) {\n        var emailParts = email.split(\"@\");\n        var href = \"/referral?userId=\" + id + \"&emailDm=\" + emailParts[1] + \"&emailName=\" + emailParts[0];\n        return href;\n      };\n\n      $scope.deleteUser = function() {\n        $scope.userManagement.inDeleting = true;\n\n        userManagementService.deleteUser(deletingId)\n          .then(function () {\n            $scope.userManagement.users.splice(deletingIdx, 1);\n            $scope.closeModal();\n            $scope.userManagement.inDeleting = false;\n          });\n      }\n\n      $scope.openDeleteModal = function(id, idx) {\n        var modalOpts = {\n          templateUrl: 'app/pages/user-management/templates/delete-user-confirm.html',\n          controller: \"UserManagementModalCtrl\",\n          scope: $scope,\n          backdrop: 'static'\n        };\n\n        $scope.modal = $injector.get('$uibModal').open(modalOpts);\n        deletingId = id;\n        deletingIdx = idx;\n      }\n\n      $scope.closeModal = function() {\n        $scope.modal.dismiss();\n        deletingId = 0;\n        deletingIdx = 0;\n      }\n\n      $scope.init = function () {\n        $scope.loadUsers();\n      };\n\n      $scope.init();\n    }\n  ]);\n\nangular.module(\"MyCvTracker.pages.userManagement\")\n  .controller(\"UserManagementModalCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    function (\n      $scope,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n    }\n  ]);\n\n\n    angular.module('MyCvTracker.pages.trackResume')\n\n    \t.factory('TrackResumeSvc', ['toastr', 'RestConfig', '$injector',\n\n            function (toastr, RestConfig, $injector) {\n\n                var Utilities = $injector.get('Utilities');\n\n            \treturn  {\n\n                    saveResumeTrackRequest: function (requestOb) {\n\n                        var url = Utilities.getTrackResumeUrl();\n                        return RestConfig.saveResumeTrackRequest(url, requestOb);\n                    },\n\n                    getFavNotes: function () {\n                        var url = Utilities.getFavNotesUrl();\n                        return RestConfig.getMyFavNotes(url);\n                    }\n            \t};\n            }\n        ]);\n\nangular.module(\"MyCvTracker.pages.userManagement\")\n  .factory(\"UserManagementService\", [\n    \"toastr\",\n    \"RestConfig\",\n    \"$injector\",\n    function (\n      toastr,\n      RestConfig,\n      $injector\n    ) {\n      var utilities = $injector.get(\"Utilities\");\n\n      return {\n        getUsers : function() {\n          var url =  utilities.getAuthUserListUrl();\n          return RestConfig.getAuthUsers(url);\n        },\n        searchUser : function(email) {\n          var url =  utilities.getAuthUserByEmailUrl();\n          return RestConfig.getAuthUserByEmail(url, email);\n        },\n        deleteUser : function(id) {\n          var url =  utilities.getDeleteUserUrl();\n          return RestConfig.deleteUserAccount(url, id);\n        }\n      };\n    }\n  ]);\n\n/**\n * @author v.lugovsky\n * created on 23.12.2015\n */\n(function () {\n  'use strict';\n\n  /**\n   * Includes basic panel layout inside of current element.\n   */\n  angular.module('MyCvTracker.theme')\n      .directive('baPanel', baPanel);\n\n  /** @ngInject */\n  function baPanel(baPanel, baConfig) {\n    return angular.extend({}, baPanel, {\n      template: function(el, attrs) {\n        var res = '<div  class=\"panel ' + (baConfig.theme.blur ? 'panel-blur' : '') + ' full-invisible ' + (attrs.baPanelClass || '');\n        res += '\" zoom-in ' + (baConfig.theme.blur ? 'ba-panel-blur' : '') + '>';\n        res += baPanel.template(el, attrs);\n        res += '</div>';\n        return res;\n      }\n    });\n  }\n})();\n\n/**\n * @author v.lugovsky\n * created on 23.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .factory('baPanel', baPanel);\n\n  /** @ngInject */\n  function baPanel() {\n\n    /** Base baPanel directive */\n    return {\n      restrict: 'A',\n      transclude: true,\n      template: function(elem, attrs) {\n        var res = '<div class=\"panel-body\" ng-transclude></div>';\n        if (attrs.baPanelTitle) {\n          var titleTpl = '<div class=\"panel-heading clearfix\"><h3 class=\"panel-title\">' + attrs.baPanelTitle + '</h3></div>';\n          res = titleTpl + res; // title should be before\n        }\n\n        return res;\n      }\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 15.01.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .directive('baPanelBlur', baPanelBlur);\n\n  /** @ngInject */\n  function baPanelBlur(baPanelBlurHelper, $window, $rootScope) {\n    var bodyBgSize;\n\n    baPanelBlurHelper.bodyBgLoad().then(function() {\n      bodyBgSize = baPanelBlurHelper.getBodyBgImageSizes();\n    });\n\n    $window.addEventListener('resize', function() {\n      bodyBgSize = baPanelBlurHelper.getBodyBgImageSizes();\n    });\n\n    return {\n      restrict: 'A',\n      link: function($scope, elem) {\n        if(!$rootScope.$isMobile) {\n          baPanelBlurHelper.bodyBgLoad().then(function () {\n            setTimeout(recalculatePanelStyle);\n          });\n          $window.addEventListener('resize', recalculatePanelStyle);\n\n          $scope.$on('$destroy', function () {\n            $window.removeEventListener('resize', recalculatePanelStyle);\n          });\n        }\n\n        function recalculatePanelStyle() {\n          if (!bodyBgSize) {\n            return;\n          }\n          elem.css({\n            backgroundSize: Math.round(bodyBgSize.width) + 'px ' + Math.round(bodyBgSize.height) + 'px',\n            backgroundPosition: Math.floor(bodyBgSize.positionX) + 'px ' + Math.floor(bodyBgSize.positionY) + 'px'\n          });\n        }\n\n      }\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 15.01.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .service('baPanelBlurHelper', baPanelBlurHelper);\n\n  /** @ngInject */\n  function baPanelBlurHelper($q) {\n    var res = $q.defer();\n    var computedStyle = getComputedStyle(document.body, ':before');\n    var image = new Image();\n    image.src = computedStyle.backgroundImage.replace(/url\\((['\"])?(.*?)\\1\\)/gi, '$2');\n    image.onerror = function() {\n      res.reject();\n    };\n    image.onload = function() {\n      res.resolve();\n    };\n\n    this.bodyBgLoad = function() {\n      return res.promise;\n    };\n\n    this.getBodyBgImageSizes = function() {\n      var elemW = document.documentElement.clientWidth;\n      var elemH = document.documentElement.clientHeight;\n      if(elemW <= 640) return;\n      var imgRatio = (image.height / image.width);       // original img ratio\n      var containerRatio = (elemH / elemW);     // container ratio\n\n      var finalHeight, finalWidth;\n      if (containerRatio > imgRatio) {\n        finalHeight = elemH;\n        finalWidth = (elemH / imgRatio);\n      } else {\n        finalWidth = elemW;\n        finalHeight = (elemW * imgRatio);\n      }\n      return { width: finalWidth, height: finalHeight, positionX: (elemW - finalWidth)/2, positionY: (elemH - finalHeight)/2};\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 23.12.2015\n */\n(function () {\n  'use strict';\n\n  /**\n   * Represents current element as panel, adding all necessary classes.\n   */\n  angular.module('MyCvTracker.theme')\n      .directive('baPanelSelf', baPanelSelf);\n\n  /** @ngInject */\n  function baPanelSelf(baPanel) {\n    return angular.extend({}, baPanel, {\n      link: function(scope, el, attrs) {\n        el.addClass('panel panel-white');\n        if (attrs.baPanelClass) {\n          el.addClass(attrs.baPanelClass);\n        }\n      }\n    });\n  }\n\n})();\n\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .directive('baSidebar', baSidebar);\n\n  /** @ngInject */\n  function baSidebar($timeout, baSidebarService, baUtil, layoutSizes) {\n    var jqWindow = $(window);\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/baSidebar/ba-sidebar.html',\n      controller: 'BaSidebarCtrl',\n      link: function(scope, el) {\n\n        scope.menuHeight = el[0].childNodes[0].clientHeight - 84;\n        jqWindow.on('click', _onWindowClick);\n        jqWindow.on('resize', _onWindowResize);\n\n        scope.$on('$destroy', function() {\n          jqWindow.off('click', _onWindowClick);\n          jqWindow.off('resize', _onWindowResize);\n        });\n\n        function _onWindowClick($evt) {\n          if (!baUtil.isDescendant(el[0], $evt.target) &&\n              !$evt.originalEvent.$sidebarEventProcessed &&\n              !baSidebarService.isMenuCollapsed() &&\n              baSidebarService.canSidebarBeHidden()) {\n            $evt.originalEvent.$sidebarEventProcessed = true;\n            $timeout(function () {\n              baSidebarService.setMenuCollapsed(true);\n            }, 10);\n          }\n        }\n\n        // watch window resize to change menu collapsed state if needed\n        function _onWindowResize() {\n          var newMenuCollapsed = baSidebarService.shouldMenuBeCollapsed();\n          var newMenuHeight = _calculateMenuHeight();\n          if (newMenuCollapsed != baSidebarService.isMenuCollapsed() || scope.menuHeight != newMenuHeight) {\n            scope.$apply(function () {\n              scope.menuHeight = newMenuHeight;\n              baSidebarService.setMenuCollapsed(newMenuCollapsed)\n            });\n          }\n        }\n\n        function _calculateMenuHeight() {\n          return el[0].childNodes[0].clientHeight - 84;\n        }\n      }\n    };\n  }\n\n})();\n(function() {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .provider('baSidebarService', baSidebarServiceProvider);\n\n  /** @ngInject */\n  function baSidebarServiceProvider() {\n    var staticMenuItems = [];\n\n    this.addStaticItem = function() {\n      staticMenuItems.push.apply(staticMenuItems, arguments);\n    };\n\n    /** @ngInject */\n    this.$get = function($state, layoutSizes) {\n      return new _factory();\n\n      function _factory() {\n        var isMenuCollapsed = shouldMenuBeCollapsed();\n\n        this.getMenuItems = function() {\n          var states = defineMenuItemStates();\n          var menuItems = states.filter(function(item) {\n            return item.level == 0;\n          });\n\n          menuItems.forEach(function(item,i) {\n            var children = states.filter(function(child) {\n              return child.level == 1 && child.name.indexOf(item.name) === 0;\n            });\n            item.subMenu = children.length ? children : null;\n          });\n\n          var menus = menuItems.concat(staticMenuItems);\n          var newMenus = [];\n            menus.forEach(function(item) {\n                if(item.shown){\n                    newMenus.push(item);\n                }\n                if(item.requiresPermission){\n                    var loggedInUser = null;\n                    if(sessionStorage.loggedInUser){\n                        loggedInUser =  angular.fromJson(sessionStorage.loggedInUser);\n                    }else {\n                        loggedInUser = angular.fromJson(localStorage.loggedInUser);\n                    }\n                    if(loggedInUser){\n                        if(loggedInUser.userRole == 'ADMIN'){\n                            newMenus.push(item);\n                        }\n                    }\n                }\n          });\n          return newMenus;\n        };\n\n        this.shouldMenuBeCollapsed = shouldMenuBeCollapsed;\n        this.canSidebarBeHidden = canSidebarBeHidden;\n\n        this.setMenuCollapsed = function(isCollapsed) {\n          isMenuCollapsed = isCollapsed;\n        };\n\n        this.isMenuCollapsed = function() {\n          return isMenuCollapsed;\n        };\n\n        this.toggleMenuCollapsed = function() {\n          isMenuCollapsed = !isMenuCollapsed;\n        };\n\n        this.getAllStateRefsRecursive = function(item) {\n          var result = [];\n          _iterateSubItems(item);\n          return result;\n\n          function _iterateSubItems(currentItem) {\n            currentItem.subMenu && currentItem.subMenu.forEach(function(subItem) {\n              subItem.stateRef && result.push(subItem.stateRef);\n              _iterateSubItems(subItem);\n            });\n          }\n        };\n\n        function defineMenuItemStates() {\n          return $state.get()\n              .filter(function(s) {\n                return s.sidebarMeta;\n              })\n              .map(function(s) {\n                var meta = s.sidebarMeta;\n                return {\n                  name: s.name,\n                  title: s.title,\n                  level: (s.name.match(/\\./g) || []).length,\n                  order: meta.order,\n                  icon: meta.icon,\n                  stateRef: s.name,\n                  requiresPermission:s.requiresPermission!=null ? s.requiresPermission : false,\n                  shown: s.shown!=null ? s.shown : true\n                };\n              })\n              .sort(function(a, b) {\n                return (a.level - b.level) * 100 + a.order - b.order;\n              });\n        }\n\n        function shouldMenuBeCollapsed() {\n          return window.innerWidth <= layoutSizes.resWidthCollapseSidebar;\n        }\n\n        function canSidebarBeHidden() {\n          return window.innerWidth <= layoutSizes.resWidthHideSidebar;\n        }\n      }\n\n    };\n\n  }\n})();\n\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n    .controller('BaSidebarCtrl', BaSidebarCtrl);\n\n  /** @ngInject */\n  function BaSidebarCtrl($scope, baSidebarService,$auth) {\n\n    $scope.menuItems = baSidebarService.getMenuItems();\n    $scope.defaultSidebarState = $scope.menuItems[0].stateRef;\n\n    $scope.hoverItem = function ($event) {\n      $scope.showHoverElem = true;\n      $scope.hoverElemHeight =  $event.currentTarget.clientHeight;\n      var menuTopValue = 66;\n      $scope.hoverElemTop = $event.currentTarget.getBoundingClientRect().top - menuTopValue;\n    };\n\n    $scope.$on('$stateChangeSuccess', function () {\n      if (baSidebarService.canSidebarBeHidden()) {\n        baSidebarService.setMenuCollapsed(true);\n      }\n    });\n  }\n})();\n/**\n * @author v.lugovsky\n * created on 03.05.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .directive('baSidebarToggleMenu', baSidebarToggleMenu)\n      .directive('baSidebarCollapseMenu', baSidebarCollapseMenu)\n      .directive('baSidebarTogglingItem', baSidebarTogglingItem)\n      .controller('BaSidebarTogglingItemCtrl', BaSidebarTogglingItemCtrl)\n      .directive('baUiSrefTogglingSubmenu', baUiSrefTogglingSubmenu)\n      .directive('baUiSrefToggler', baUiSrefToggler);\n\n  /** @ngInject */\n  function baSidebarToggleMenu(baSidebarService) {\n    return {\n      restrict: 'A',\n      link: function(scope, elem) {\n        elem.on('click', function($evt) {\n          $evt.originalEvent.$sidebarEventProcessed = true;\n          scope.$apply(function() {\n            baSidebarService.toggleMenuCollapsed();\n          });\n        });\n      }\n    };\n  }\n\n  /** @ngInject */\n  function baSidebarCollapseMenu(baSidebarService) {\n    return {\n      restrict: 'A',\n      link: function(scope, elem) {\n        elem.on('click', function($evt) {\n          $evt.originalEvent.$sidebarEventProcessed = true;\n          if (!baSidebarService.isMenuCollapsed()) {\n            scope.$apply(function() {\n              baSidebarService.setMenuCollapsed(true);\n            });\n          }\n        });\n      }\n    };\n  }\n\n  /** @ngInject */\n  function baSidebarTogglingItem() {\n    return {\n      restrict: 'A',\n      controller: 'BaSidebarTogglingItemCtrl'\n    };\n  }\n\n  /** @ngInject */\n  function BaSidebarTogglingItemCtrl($scope, $element, $attrs, $state, baSidebarService) {\n    var vm = this;\n    var menuItem = vm.$$menuItem = $scope.$eval($attrs.baSidebarTogglingItem);\n    if (menuItem && menuItem.subMenu && menuItem.subMenu.length) {\n      vm.$$expandSubmenu = function() { console.warn('$$expandMenu should be overwritten by baUiSrefTogglingSubmenu') };\n      vm.$$collapseSubmenu = function() { console.warn('$$collapseSubmenu should be overwritten by baUiSrefTogglingSubmenu') };\n\n      var subItemsStateRefs = baSidebarService.getAllStateRefsRecursive(menuItem);\n\n      vm.$expand = function() {\n        vm.$$expandSubmenu();\n        $element.addClass('ba-sidebar-item-expanded');\n      };\n\n      vm.$collapse = function() {\n        vm.$$collapseSubmenu();\n        $element.removeClass('ba-sidebar-item-expanded');\n      };\n\n      vm.$toggle = function() {\n        $element.hasClass('ba-sidebar-item-expanded') ?\n            vm.$collapse() :\n            vm.$expand();\n      };\n\n      if (_isState($state.current)) {\n        $element.addClass('ba-sidebar-item-expanded');\n      }\n\n      $scope.$on('$stateChangeStart', function (event, toState) {\n        if (!_isState(toState) && $element.hasClass('ba-sidebar-item-expanded')) {\n          vm.$collapse();\n          $element.removeClass('ba-sidebar-item-expanded');\n        }\n      });\n\n      $scope.$on('$stateChangeSuccess', function (event, toState) {\n        if (_isState(toState) && !$element.hasClass('ba-sidebar-item-expanded')) {\n          vm.$expand();\n          $element.addClass('ba-sidebar-item-expanded');\n        }\n      });\n    }\n\n    function _isState(state) {\n      return state && subItemsStateRefs.some(function(subItemState) {\n            return state.name.indexOf(subItemState) == 0;\n          });\n    }\n  }\n\n  /** @ngInject */\n  function baUiSrefTogglingSubmenu($state) {\n    return {\n      restrict: 'A',\n      require: '^baSidebarTogglingItem',\n      link: function(scope, el, attrs, baSidebarTogglingItem) {\n        baSidebarTogglingItem.$$expandSubmenu = function() { el.slideDown(); };\n        baSidebarTogglingItem.$$collapseSubmenu = function() { el.slideUp(); };\n      }\n    };\n  }\n\n  /** @ngInject */\n  function baUiSrefToggler(baSidebarService) {\n    return {\n      restrict: 'A',\n      require: '^baSidebarTogglingItem',\n      link: function(scope, el, attrs, baSidebarTogglingItem) {\n        el.on('click', function() {\n          if (baSidebarService.isMenuCollapsed()) {\n            // If the whole sidebar is collapsed and this item has submenu. We need to open sidebar.\n            // This should not affect mobiles, because on mobiles sidebar should be hidden at all\n            scope.$apply(function() {\n              baSidebarService.setMenuCollapsed(false);\n            });\n            baSidebarTogglingItem.$expand();\n          } else {\n            baSidebarTogglingItem.$toggle();\n          }\n        });\n      }\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .directive('backTop', backTop);\n\n  /** @ngInject */\n  function backTop() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/backTop/backTop.html',\n      controller: function () {\n        $('#backTop').backTop({\n          'position': 200,\n          'speed': 100\n        });\n      }\n    };\n  }\n\n})();\n(function() {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n    .directive('baWizard', baWizard);\n\n  /** @ngInject */\n  function baWizard() {\n    return {\n      restrict: 'E',\n      transclude: true,\n      templateUrl: 'app/theme/components/baWizard/baWizard.html',\n      controllerAs: '$baWizardController',\n      controller: 'baWizardCtrl'\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n    .controller('baWizardCtrl', baWizardCtrl);\n\n  /** @ngInject */\n  function baWizardCtrl($scope) {\n    var vm = this;\n    vm.tabs = [];\n\n    vm.tabNum = 0;\n    vm.progress = 0;\n\n    vm.addTab = function(tab) {\n      tab.setPrev(vm.tabs[vm.tabs.length - 1]);\n      vm.tabs.push(tab);\n      vm.selectTab(0);\n    };\n\n    $scope.$watch(angular.bind(vm, function () {return vm.tabNum;}), calcProgress);\n\n    vm.selectTab = function (tabNum) {\n      vm.tabs[vm.tabNum].submit();\n      if (vm.tabs[tabNum].isAvailiable()) {\n        vm.tabNum = tabNum;\n        vm.tabs.forEach(function (t, tIndex) {\n          tIndex == vm.tabNum ? t.select(true) : t.select(false);\n        });\n      }\n    };\n\n    vm.isFirstTab = function () {\n      return vm.tabNum == 0;\n    };\n\n    vm.isLastTab = function () {\n      return vm.tabNum == vm.tabs.length - 1 ;\n    };\n\n    vm.nextTab = function () {\n      vm.selectTab(vm.tabNum + 1)\n    };\n\n    vm.previousTab = function () {\n      vm.selectTab(vm.tabNum - 1)\n    };\n\n    function calcProgress() {\n      vm.progress = ((vm.tabNum + 1) / vm.tabs.length) * 100;\n    }\n  }\n})();\n\n\n(function() {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n    .directive('baWizardStep', baWizardStep);\n\n  /** @ngInject */\n  function baWizardStep() {\n    return {\n      restrict: 'E',\n      transclude: true,\n      require: '^baWizard',\n      scope: {\n        form: '='\n      },\n      templateUrl:  'app/theme/components/baWizard/baWizardStep.html',\n      link: function($scope, $element, $attrs, wizard) {\n        $scope.selected = true;\n\n        var tab = {\n          title: $attrs.title,\n          select: select,\n          submit: submit,\n          isComplete: isComplete,\n          isAvailiable: isAvailiable,\n          prevTab: undefined,\n          setPrev: setPrev\n        };\n\n        wizard.addTab(tab);\n\n        function select(isSelected) {\n          if (isSelected) {\n            $scope.selected = true;\n          } else {\n            $scope.selected = false;\n          }\n        }\n\n        function submit() {\n          $scope.form && $scope.form.$setSubmitted(true);\n        }\n\n        function isComplete() {\n          return $scope.form ? $scope.form.$valid : true;\n        }\n\n        function isAvailiable() {\n          return tab.prevTab ? tab.prevTab.isComplete() : true;\n        }\n\n        function setPrev(pTab) {\n          tab.prevTab = pTab;\n        }\n      }\n    };\n  }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .directive('contentTop', contentTop);\n\n  /** @ngInject */\n  function contentTop($location, $state) {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/contentTop/contentTop.html',\n      link: function($scope) {\n        $scope.$watch(function () {\n          $scope.activePageTitle = $state.current.title;\n        });\n      }\n    };\n  }\n\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .directive('msgCenter', msgCenter);\n\n  /** @ngInject */\n  function msgCenter() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/msgCenter/msgCenter.html',\n      controller: 'MsgCenterCtrl'\n    };\n  }\n\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .controller('MsgCenterCtrl', MsgCenterCtrl);\n\n  /** @ngInject */\n  function MsgCenterCtrl($scope, $sce) {\n    $scope.users = {\n      0: {\n        name: 'Vlad',\n      },\n      1: {\n        name: 'Kostya',\n      },\n      2: {\n        name: 'Andrey',\n      },\n      3: {\n        name: 'Nasta',\n      }\n    };\n\n    $scope.notifications = [\n      {\n        userId: 0,\n        template: '&name posted a new article.',\n        time: '1 min ago'\n      },\n      {\n        userId: 1,\n        template: '&name changed his contact information.',\n        time: '2 hrs ago'\n      },\n      {\n        image: 'assets/img/shopping-cart.svg',\n        template: 'New orders received.',\n        time: '5 hrs ago'\n      },\n      {\n        userId: 2,\n        template: '&name replied to your comment.',\n        time: '1 day ago'\n      },\n      {\n        userId: 3,\n        template: 'Today is &name\\'s birthday.',\n        time: '2 days ago'\n      },\n      {\n        image: 'assets/img/comments.svg',\n        template: 'New comments on your post.',\n        time: '3 days ago'\n      },\n      {\n        userId: 1,\n        template: '&name invited you to join the event.',\n        time: '1 week ago'\n      }\n    ];\n\n    $scope.messages = [\n      {\n        userId: 3,\n        text: 'After you get up and running, you can place Font Awesome icons just about...',\n        time: '1 min ago'\n      },\n      {\n        userId: 0,\n        text: 'You asked, Font Awesome delivers with 40 shiny new icons in version 4.2.',\n        time: '2 hrs ago'\n      },\n      {\n        userId: 1,\n        text: 'Want to request new icons? Here\\'s how. Need vectors or want to use on the...',\n        time: '10 hrs ago'\n      },\n      {\n        userId: 2,\n        text: 'Explore your passions and discover new ones by getting involved. Stretch your...',\n        time: '1 day ago'\n      },\n      {\n        userId: 3,\n        text: 'Get to know who we are - from the inside out. From our history and culture, to the...',\n        time: '1 day ago'\n      },\n      {\n        userId: 1,\n        text: 'Need some support to reach your goals? Apply for scholarships across a variety of...',\n        time: '2 days ago'\n      },\n      {\n        userId: 0,\n        text: 'Wrap the dropdown\\'s trigger and the dropdown menu within .dropdown, or...',\n        time: '1 week ago'\n      }\n    ];\n\n    $scope.getMessage = function(msg) {\n      var text = msg.template;\n      if (msg.userId || msg.userId === 0) {\n        text = text.replace('&name', '<strong>' + $scope.users[msg.userId].name + '</strong>');\n      }\n      return $sce.trustAsHtml(text);\n    };\n  }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .directive('pageTop', pageTop);\n\n  /** @ngInject */\n  function pageTop() {\n    return {\n      restrict: 'E',\n      templateUrl: 'app/theme/components/pageTop/pageTop.html'\n    };\n  }\n\n})();\n/**\n * Created by n.poltoratsky\n * on 28.06.2016.\n */\n(function () {\n    'use strict';\n\n    angular.module('MyCvTracker.theme.components')\n        .directive('progressBarRound', progressBarRound);\n\n    /** @ngInject */\n    function progressBarRound(baProgressModal) {\n        return {\n            restrict: 'E',\n            templateUrl: 'app/theme/components/progressBarRound/progressBarRound.html',\n            link:function($scope, element, attrs) {\n                $scope.baProgressDialog = baProgressModal;\n                $scope.$watch(function () {\n                    return baProgressModal.getProgress();\n                }, animateBar);\n\n                function animateBar() {\n                    var circle = element.find('#loader')[0];\n                    circle.setAttribute(\"stroke-dasharray\", baProgressModal.getProgress() * 180 * Math.PI / 100 + \", 20000\");\n                    $scope.progress = baProgressModal.getProgress();\n                }\n            }\n        }\n    }\n})();\n/**\n * @author v.lugovksy\n * created on 16.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.components')\n      .directive('widgets', widgets);\n\n  /** @ngInject */\n  function widgets() {\n    return {\n      restrict: 'EA',\n      scope: {\n        ngModel: '='\n      },\n      templateUrl: 'app/theme/components/widgets/widgets.html',\n      replace: true\n    };\n  }\n\n})();\n/**\n * @author a.demeshko\n * created on 23.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n    .filter('plainText', plainText);\n\n  /** @ngInject */\n  function plainText() {\n    return function(text) {\n      return  text ? String(text).replace(/<[^>]+>/gm, '') : '';\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 17.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .filter('appImage', appImage);\n\n  /** @ngInject */\n  function appImage(layoutPaths) {\n    return function(input) {\n      return layoutPaths.images.root + input;\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 17.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .filter('kameleonImg', kameleonImg);\n\n  /** @ngInject */\n  function kameleonImg(layoutPaths) {\n    return function(input) {\n      return layoutPaths.images.root + 'theme/icon/kameleon/' + input + '.svg';\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 17.12.2015\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme')\n      .filter('profilePicture', profilePicture);\n\n  /** @ngInject */\n  function profilePicture(layoutPaths) {\n    return function(input, ext) {\n      ext = ext || 'png';\n      return layoutPaths.images.profile + input + '.' + ext;\n    };\n  }\n\n})();\n\n/**\n * @author v.lugovsky\n * created on 10.12.2016\n */\n(function () {\n  'use strict';\n\n  angular.module('MyCvTracker.theme.inputs')\n      .directive('baSwitcher', baSwitcher);\n\n  /** @ngInject */\n  function baSwitcher() {\n    return {\n      templateUrl: 'app/theme/inputs/baSwitcher/baSwitcher.html',\n      scope: {\n        switcherStyle: '@',\n        switcherValue: '='\n      }\n    };\n  }\n\n})();\n\n/* Minified js for jQuery BackTop */\n!function(o){o.fn.backTop=function(e){var n=this,i=o.extend({position:400,speed:500,color:\"white\"},e),t=i.position,c=i.speed,d=i.color;n.addClass(\"white\"==d?\"white\":\"red\"==d?\"red\":\"green\"==d?\"green\":\"black\"),n.css({right:40,bottom:40,position:\"fixed\"}),o(document).scroll(function(){var e=o(window).scrollTop();e>=t?n.fadeIn(c):n.fadeOut(c)}),n.click(function(){o(\"html, body\").animate({scrollTop:0},{duration:1200})})}}(jQuery);\nangular.module('MyCvTracker').run(['$templateCache', function($templateCache) {$templateCache.put('app/pages/auth/templates/activateout.html','<main class=\"auth-main\"><div class=\"reset-block\" ng-controller=\"AuthCtrl as vm\"><h1>Reset Password & Activate Account</h1><form class=\"form-horizontal\" id=\"resetForm\" name=\"resetForm\" novalidate=\"\"><div class=\"form-group\"><label for=\"newPwd1\" class=\"col-sm-2 control-label\">New Password</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control\" placeholder=\"New Password\" ng-model=\"user.resetPassword.newPwd1\" id=\"newPwd1\" autocomplete=\"off\" ng-required=\"true\"></div></div><div class=\"form-group\"><label for=\"newPwd2\" class=\"col-sm-2 control-label\">Confirm Passowrd</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control form-inputs\" placeholder=\"Confirm Passowrd\" ng-model=\"user.resetPassword.newPwd2\" id=\"newPwd2\" ng-required=\"true\"></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\" data-ng-click=\"resetPasswordAndActivate(newPwd1, newPwd2,resetForm);\" id=\"btn-activate\" ng-disabled=\"resetForm.$invalid\">Activate Account</button></div></div></form></div></main>');\n$templateCache.put('app/pages/auth/templates/forgot_password.html','<section><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"$close()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title text-center\">Forgot Password</h4></div><div class=\"modal-body\"><form name=\"forgotPasswordForm\"><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : user.userName.$invalid && !user.userName.$pristine }\"><input type=\"email\" class=\"form-control\" placeholder=\"Email\" ng-model=\"user.userName\" ng-required=\"true\"></div></form></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-primary btn-block\" data-dismiss=\"modal\" ng-disabled=\"forgotPasswordForm.$invalid\" ng-click=\"forgotPasswordSubmit(user, forgotPasswordForm);\">Reset Password</button></div></section>');\n$templateCache.put('app/pages/auth/templates/login.html','<div ng-class=\"(loginModal==true) ? \\'login-model\\' : \\'auth-block\\'\"><h1>Sign in to MyCVTracker</h1><a href=\"/register\" class=\"auth-link\">New to MyCVTracker? Sign up!</a><form class=\"form-horizontal\" id=\"loginForm\" name=\"loginForm\" novalidate=\"\" form-autofill-fix=\"\"><div class=\"form-group\"><label for=\"email\" class=\"col-sm-2 control-label\">Email</label><div class=\"col-sm-10\"><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email\" ng-model=\"user.login.email\" autocomplete=\"off\" pattern=\"^\\\\S*[@]\\\\S*[.]\\\\S*$\" required=\"\"></div></div><div class=\"form-group\"><label for=\"password\" class=\"col-sm-2 control-label\">Password</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\" ng-model=\"user.login.password\" autocomplete=\"off\" required=\"\"></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><div class=\"checkbox\"><label class=\"custom-checkbox\"><input type=\"checkbox\" nvalue=\"_spring_security_remember_me\" ng-model=\"user.login.rememberme\" name=\"remember-me\" id=\"remember-me\" class=\"custom-checkbox\"> <span>Remember me</span></label></div></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\" ng-click=\"login()\" id=\"btn-login\" ng-disabled=\"loginForm.$invalid\">Sign in</button> <a href=\"\" class=\"forgot-pass\" data-toggle=\"modal\" ng-click=\"openForgetPasswordModal();\" ng-if=\"!loginModal\">Forgot password?</a></div></div></form></div>');\n$templateCache.put('app/pages/auth/templates/reactivate.html','<div id=\"activate\" data-ng-init=\"activate()\"></div>');\n$templateCache.put('app/pages/auth/templates/register.html','<div class=\"auth-block\"><h1>Sign up to MyCVTracker</h1><a href=\"/login\" class=\"auth-link\">Already have a MyCVTracker account? Sign in!</a><form class=\"form-horizontal\" name=\"registerForm\" id=\"registerForm\" ng-submit=\"register(user.register, registerForm)\"><div class=\"form-group\"><label for=\"firstName\" class=\"col-sm-2 control-label\">First Name</label><div class=\"col-sm-10\"><input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"First Name\" autocomplete=\"off\" ng-model=\"user.register.firstName\" required=\"\"></div></div><div class=\"form-group\"><label for=\"secondName\" class=\"col-sm-2 control-label\">Last Name</label><div class=\"col-sm-10\"><input type=\"text\" class=\"form-control\" id=\"secondName\" placeholder=\"Last Name\" autocomplete=\"off\" ng-model=\"user.register.lastName\" required=\"\"></div></div><div class=\"form-group\"><label for=\"email\" class=\"col-sm-2 control-label\">Email</label><div class=\"col-sm-10\"><input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" autocomplete=\"off\" ng-model=\"user.register.email\" pattern=\"^\\\\S*[@]\\\\S*[.]\\\\S*$\" required=\"\"></div></div><div class=\"form-group\"><label for=\"password\" class=\"col-sm-2 control-label\">Password</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\" autocomplete=\"off\" ng-model=\"user.register.password\" ng-required=\"true\"></div></div><div class=\"form-group\"><label for=\"confirmPassword\" class=\"col-sm-2 control-label\">Confirm Password</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" placeholder=\"Confirm Password\" autocomplete=\"off\" ng-model=\"user.register.confirmPassword\" ng-required=\"true\"></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\" ng-disabled=\"registerForm.$invalid\" id=\"btn-register\">Sign up</button></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><p class=\"small-text\">By Signing up you agree to our <a href=\"/terms.html\" target=\"_blank\">Terms & Conditions</a></p><p class=\"small-text\">After form submission, you will receive an email from info@mycvtracker.com to activate your account. Please check your spam folder if it\\'s not in your inbox in next few minutes.</p></div></div></form></div>');\n$templateCache.put('app/pages/auth/templates/resetPassword.html','<main class=\"auth-main\"><div class=\"reset-block\" ng-controller=\"AuthCtrl as vm\"><h1>Reset Password</h1><form class=\"form-horizontal\" id=\"resetForm\" name=\"resetForm\" novalidate=\"\"><div class=\"form-group\"><label for=\"newPwd1\" class=\"col-sm-2 control-label\">New Password</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control\" placeholder=\"New Password\" ng-model=\"user.resetPassword.newPwd1\" id=\"newPwd1\" autocomplete=\"off\" ng-required=\"true\"></div></div><div class=\"form-group\"><label for=\"newPwd2\" class=\"col-sm-2 control-label\">Confirm Passowrd</label><div class=\"col-sm-10\"><input type=\"password\" class=\"form-control form-inputs\" placeholder=\"Confirm Passowrd\" ng-model=\"user.resetPassword.newPwd2\" id=\"newPwd2\" ng-required=\"true\"></div></div><div class=\"form-group\"><div class=\"col-sm-offset-2 col-sm-10\"><button type=\"submit\" class=\"btn btn-default btn-auth\" data-ng-click=\"resetPassword(newPwd1, newPwd2,resetForm);\" id=\"btn-login\" ng-disabled=\"resetForm.$invalid\">Change Password</button></div></div></form></div></main>');\n$templateCache.put('app/pages/bulk-folder-resume/templates/resumes.html','<section id=\"resumes-listing-page\" ng-controller=\"BulkFolderResumeCtrl\"><div class=\"row form-group\"><div class=\"col-sm-12\"><div class=\"clearfix\"><div class=\"pull-right\"><button class=\"btn btn-primary\" ng-click=\"openNewResumeModal()\"><i class=\"fa fa-plus\"></i> <span>Add</span></button></div></div></div></div><div class=\"resumes-list-result\"><div class=\"row\"><div class=\"col-xs-12 col-md-4\" ng-repeat=\"aResume in resumes track by aResume.name\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel\"><div class=\"resume-title\" ng-bind=\"aResume.name\"></div><div class=\"detail-row\"><div class=\"row\"><div class=\"col-xs-12\"><div class=\"detail-info\"><div class=\"info-val\">Uploaded at {{ getFormattedPostDate(aResume.uploadedDate) }}</div></div></div><div class=\"col-xs-12\"><div class=\"ctrls\"><a ng-href=\"{{ getDownloadLink(aResume.name) }}\" target=\"_blank\"><i class=\"fas fa-cloud-download-alt\"></i></a></div></div></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/bulk-folder-resume/templates/upload-resume-modal.html','<form id=\"uploading-bulk-resume-modal\" name=\"uploadResumeForm\" novalidate=\"\" ng-submit=\"uploadResume()\"><div class=\"modal-header\"><h4 class=\"modal-title\">Upload Resume</h4></div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Resume File (Can upload up to 10 files) <span class=\"file-size\">(Max. file size upto 500KB)</span></div><input type=\"file\" class=\"form-control\" placeholder=\"Resume File\" resume-file-model=\"uploadForm.resumeFiles\" accept=\".pdf,.docx\" id=\"fileUpload\" multiple=\"\"><div class=\"text-danger\" style=\"margin-top: 10px\" ng-if=\"uploadForm.invalidSize\">Invalid file size.</div><div class=\"text-danger\" style=\"margin-top: 10px\" ng-if=\"uploadForm.invalidType\">Invalid file type.</div></div><div class=\"upload-files\"><div class=\"file-process\" ng-repeat=\"aResume in uploadForm.resumeFiles track by aResume.name\"><div class=\"name\">{{ $index + 1 }}. {{ aResume.name }}</div><div class=\"size\">Size: {{ aResume.size }} bytes</div><div class=\"text-danger\" ng-if=\"uploadForm.uploaded && !!uploadForm.errorMap[aResume.name]\">{{ uploadForm.errorMap[aResume.name] }}</div><div class=\"text-primary\" ng-if=\"uploadForm.uploaded && !uploadForm.errorMap[aResume.name]\">Uploaded successfully</div></div></div></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary\" ng-disabled=\"resumeForm.$invalid || !!uploading || uploadForm.resumeFiles.length <= 0 || uploadForm.uploaded\">{{ !uploading ? \"Upload\" : \"Uploading...\" }}</button> <button ng-disabled=\"!!uploading\" ng-click=\"closeModal()\" type=\"button\" class=\"btn btn-danger\">Cancel</button></div></form>');\n$templateCache.put('app/pages/campaignNotes/templates/delete_note.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeDeleteNoteModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Delete Note</h4></div><div><input type=\"hidden\" ng-model=\"id\"><div class=\"modal-body\"><span>Are you sure you want to delete this Note?</span><br><br><span style=\"color:red\">You will lose all the Notifications for this Note.</span></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-primary\" data-ng-click=\"deleteConfirmNotes(noteId,index)\">Yes</button> <button type=\"button\" class=\"btn btn-primary\" ng-click=\"closeDeleteNoteModal()\">No</button></div></div>');\n$templateCache.put('app/pages/campaignNotes/templates/edit_note.html','<form name=\"editNoteForm\" novalidate=\"\" ng-submit=\"saveNote()\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Edit Note</h4></div><alert ng-repeat=\"alert in alerts track by $index\" type=\"{{alert.type}}\" close=\"alerts.splice($index, 1)\" id=\"alertModel\"><div ng-bind=\"alert.message\"></div></alert><div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Recruiter Name</div><input type=\"text\" readonly=\"\" class=\"form-control\" placeholder=\"Recruiter Name\" ng-model=\"note.recruiter\"></div><div class=\"form-group\"><div class=\"control-label\">Agency Name</div><input type=\"text\" readonly=\"\" class=\"form-control\" placeholder=\"Agency Name\" ng-model=\"note.agency\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Notes</div><input type=\"textarea\" class=\"form-control\" placeholder=\"Notes\" ng-model=\"note.notes\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">TrackingId</div><input type=\"text\" class=\"form-control\" ng-model=\"note.trackingId\" ng-required=\"false\"></div><div class=\"form-group\"><div class=\"control-label\">Tracking Status</div><input type=\"text\" class=\"form-control\" placeholder=\"Tracking Status\" ng-model=\"note.tracked\" ng-required=\"true\"></div></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-click=\"postRequest(editNoteForm, note)\" ng-disabled=\"editNoteForm.$invalid\">Save Note</button></div></div></form>');\n$templateCache.put('app/pages/campaignNotes/templates/notes.html','<section id=\"account\" ng-controller=\"CampaignNotesCtrl\"><div class=\"container full\"><div><form name=\"myForm\"><label for=\"repeatSelect\">Select Campaigns:</label><select name=\"repeatSelect\" id=\"repeatSelect\" ng-model=\"user.currentCampaign\"><option ng-repeat=\"mycampaign in user.myCampaigns\" value=\"{{mycampaign.id}}\">{{mycampaign.campaign}} {{mycampaign.id}}</option></select></form><hr></div><div class=\"row\"><div class=\"col-sm-12\"><div class=\"row\"><div class=\"col-sm-8 col-sm-offset-2\"><div class=\"notes-list\"><div class=\"panel panel-default notes-item\" ng-repeat=\"note in user.myNotes | filter : {campaignId:user.currentCampaign}\"><div class=\"panel-body\"><div class=\"row\"><div class=\"col-sm-6\"><div class=\"form-group\"><legend><div class=\"text-center\"><strong><span>Recruiter Note Details</span></strong></div></legend></div><div class=\"row-group\"><div class=\"icon\"><span class=\"fa fa-fw fa-user-md\"></span><p>Recruiter Name:</p></div><p><strong><span ng-bind=\"note.recruiter\"></span></strong></p></div><div class=\"row-group\"><div class=\"icon\"><span class=\"fa fa-fw fa-user-md\"></span><p>Recruiter Email:</p></div><p><strong><span ng-bind=\"note.toRecruiter\"></span></strong></p></div><div class=\"row-group\"><div class=\"group-wrapper\"><div class=\"icon\"><span class=\"fa fa-fw fa-user-md\"></span><p>Agency Name:</p></div><p><strong><span ng-bind=\"note.agency\"></span></strong></p></div></div><div class=\"row-group\"><div class=\"group-wrapper\"><div class=\"text\">Created Date:</div><div class=\"icon\"><span class=\"fa fa-fw fa-calendar\"></span></div><p><strong><span ng-bind=\"note.createdDate\"></span></strong></p></div></div><div class=\"row-group\"><div class=\"group-wrapper\"><div class=\"text\">Notes:</div><p><strong><span ng-bind=\"note.notes\"></span></strong></p></div></div><div class=\"row-group\"><div class=\"group-wrapper\"><div class=\"text\">Tracking:</div><p><strong><span ng-bind=\"note.trackingId\"></span></strong></p></div></div><div class=\"row-group\"><div class=\"group-wrapper\"><div class=\"text\">Tracking Status:</div><p><strong><span ng-bind=\"note.tracked\"></span></strong></p></div></div><button data-ng-click=\"deleteNotes(note.id, $index)\" class=\"btn btn-primary\">Delete</button> <button data-ng-click=\"editNotesModel(note, $index)\" class=\"btn btn-primary\">Edit</button> <button data-ng-click=\"viewNotesModel(note.id, $index)\" class=\"btn btn-primary\">Full Details</button></div></div></div></div></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/campaignNotes/templates/view_note.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeViewNoteModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Full Note Details</h4></div><div><div class=\"modal-body\"><div>{{notesContent}}</div></div></div>');\n$templateCache.put('app/pages/campaignNotifications/templates/campaign_notifications.html','<section id=\"notifications\" ng-controller=\"CampaignNotificationsCtrl\"><div class=\"row\"><div class=\"col-md-6\"><form class=\"form-horizontal\"><div class=\"form-group\"><label for=\"repeatSelect\" class=\"col-sm-2 control-label\">Select Campaigns</label><div class=\"col-sm-10\"><select name=\"repeatSelect\" id=\"repeatSelect\" ng-model=\"user.currentCampaign\" class=\"form-control\"><option ng-repeat=\"mycampaign in user.myCampaigns\" value=\"{{mycampaign.id}}\">{{mycampaign.campaign}}</option></select></div></div></form></div></div><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-class=\"with-scroll\"><table class=\"table table-bordered table-hover table-condensed\"><tr><td><strong>Recruiter</strong></td><td><strong>Recruiter Email</strong></td><td><strong>City</strong></td><td><strong>Country</strong></td><td><strong>Event Type</strong></td><td><strong>Notifications Count</strong></td><td><strong>Last Tracked Time</strong></td><td><strong>Actions</strong></td></tr><tr data-ng-repeat=\"notifications in user.myNotifications | filter : {campaignId:user.currentCampaign}\"><td data-ng-bind=\"notifications.recruiter\"></td><td data-ng-bind=\"notifications.recruiterEmail\"></td><td data-ng-bind=\"notifications.city\"></td><td data-ng-bind=\"notifications.country\"></td><td data-ng-bind=\"notifications.eventType\"></td><td data-ng-bind=\"notifications.notificationsCount\"></td><td data-ng-bind=\"notifications.lastTrackedTime\"></td><td><div class=\"buttons\"><button data-ng-click=\"viewFullNotifications(notifications.id, $index)\" class=\"btn btn-primary editable-table-button btn-xs\">Details</button></div></td></tr></table></div></div></div></section>');\n$templateCache.put('app/pages/campaignNotifications/templates/campaign_view_notifications.html','<div class=\"modal-content\"><div class=\"modal-header bg-info\"><i class=\"ion-information-circled modal-icon\"></i><span>View Notifications</span></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-info\" ng-click=\"$dismiss()\">OK</button> <button data-ng-click=\"viewFullNotifications(modalNotifications[1].id,false)\" class=\"btn btn-info\">Full Details</button></div><div class=\"modal-body text-center\"><div class=\"horizontal-scroll\"><table class=\"table table-hover\"><thead><tr class=\"black-muted-bg\"><th>Recruiter</th><th>Recruiter Email</th><th>Event Type</th><th>City</th><th>Country</th><th>Last Tracked Time</th></tr></thead><tbody><tr data-ng-repeat=\"notifications in modalNotifications\" class=\"no-top-border\"><td data-ng-bind=\"notifications.recruiter\"></td><td data-ng-bind=\"notifications.recruiterEmail\"></td><td data-ng-bind=\"notifications.eventType\"></td><td data-ng-bind=\"notifications.city\"></td><td data-ng-bind=\"notifications.country\"></td><td data-ng-bind=\"notifications.lastTrackedTime\"></td></tr></tbody></table></div></div></div>');\n$templateCache.put('app/pages/account/templates/account.html','<section id=\"account\" ng-controller=\"AccountCtrl\" data-ng-init=\"getUserTick()\"><div class=\"col-sm-12\"><h2 class=\"text-center\">Welcome <strong ng-bind=\"user.email\"></strong>!</h2><br><br></div><br><br><div class=\"row pie-charts\"><div class=\"pie-chart-item-container\" ng-repeat=\"chart in charts\"><a ng-href=\"{{chart.link}}\" ng-show=\"{{chart.showMenu}}\"><div ba-panel=\"\"><div class=\"pie-chart-item\"><div class=\"description\"><div>{{ ::chart.description }}</div><div class=\"description-stats\">{{ ::chart.stats }}</div></div><i class=\"chart-icon i-{{ ::chart.icon }}\"></i></div></div></a></div></div></section>');\n$templateCache.put('app/pages/account/templates/accountFromMail.html','<section id=\"redirect\" data-ng-init=\"redirectToProfilePage()\"></section>');\n$templateCache.put('app/pages/account/templates/settings.html','<section id=\"settings\" ng-controller=\"AccountCtrl\"><div class=\"container full\" data-ng-init=\"getUserProfileSettings()\"><div class=\"row form-group\"><div class=\"col-sm-12\"><h2 class=\"text-center\">Profile Settings</h2></div></div><div class=\"row\"><div class=\"col-sm-12\"><div class=\"row\"><div class=\"col-sm-6 col-sm-offset-3\"><form name=\"profileSettingsForm\"><div class=\"form-group\"><div class=\"control-label bold\">First Name</div><input type=\"text\" class=\"form-control\" placeholder=\"\" ng-model=\"settings.firstName\"></div><div class=\"form-group\"><div class=\"control-label bold\">Last Name</div><input type=\"text\" class=\"form-control\" placeholder=\"\" ng-model=\"settings.lastName\"></div><div class=\"form-group\"><div class=\"control-label bold\">Email Address</div><input type=\"text\" readonly=\"\" class=\"form-control\" placeholder=\"\" ng-model=\"settings.emailAddress\"></div><div class=\"form-group\" style=\"margin-top: 40px;\"><button type=\"button\" class=\"btn btn-primary\" ng-click=\"saveForm(settings)\" style=\"width: 49%;\">Save</button> <button type=\"button\" class=\"btn btn-primary\" ng-click=\"cancelForm()\" style=\"width: 50%;\">Cancel</button></div></form></div></div></div></div></div></section>');\n$templateCache.put('app/pages/categories-skills/templates/adding-skill-confirm-modal.html','<div id=\"creating-skill-modal\"><div class=\"modal-header\"><h4 class=\"modal-title\">New skill</h4></div><div class=\"modal-body\"><div><br><div>This will create new skill <span class=\"text-primary\">{{ addingSkillForm.name }}</span> before adding to category.<br><br>Would you like to continue on this?</div><br></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"addingSkillForm.adding\" type=\"button\" class=\"btn btn-danger\" ng-click=\"registerNewSkill()\">{{ addingSkillForm.adding ? \"Creating...\" : \"Continue\" }}</button> <button ng-disabled=\"addingSkillForm.adding\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeConfirmModal()\">Cancel</button></div></div>');\n$templateCache.put('app/pages/categories-skills/templates/category-list.html','<section id=\"categories-listing-page\" ng-controller=\"CategoriesListingCtrl\"><div class=\"body-section setting-section\"><div class=\"section-content\"><div class=\"card\"><div class=\"card-body\"><p class=\"link-explanation\">Duis leo ante, vulputate at nunc non, maximus ultrices metus.</p><br><div><div class=\"setting-btn\"><button type=\"button\" class=\"btn btn-danger\" ng-click=\"openNewCategoryModal()\">New Category</button></div></div></div></div><br><br><div class=\"category-skill-list\"><div class=\"row\"><div ng-repeat=\"category in skillCategories track by ::category.id\" class=\"col-12 col-md-4 col\"><div class=\"card category-card\"><div class=\"card-body\"><div class=\"name\" ng-bind=\"::category.name\"></div><div class=\"date\">Id: {{ category.id }}</div><div class=\"ctrls\"><a href=\"#\" title=\"Skill List\" ng-click=\"openModalShowingCategorySkills(category.id)\"><i class=\"fas fa-clipboard-list\"></i></a></div></div></div></div><div class=\"col-12 col-md-4\"></div><div class=\"col-12 col-md-4\"></div></div></div></div></div></section>');\n$templateCache.put('app/pages/categories-skills/templates/new-category-modal.html','<div id=\"categorizing-job-modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span> <span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">New category</h4></div><div class=\"modal-body\"><div class=\"form-group row\"><label class=\"col-xs-12 col-md-3 col-form-label\">Name</label><div class=\"col-xs-12 col-md-9\"><input ng-maxlength=\"100\" ng-model=\"newCategoryForm.name\" type=\"text\" class=\"form-control\" placeholder=\"Enter name of category\"></div></div><span class=\"separator\"></span><div class=\"form-group row\" ng-repeat=\"skill in newCategoryForm.skills track by ::skill.id\"><label class=\"col-xs-12 col-md-3 col-form-label\">Rank {{ $index + 1 }}</label><div class=\"col-xs-12 col-md-7\"><div class=\"category-name\" ng-bind=\"::skill.name\"></div></div><div class=\"col-xs-12 col-md-2 icon-col\"><i class=\"fas fa-trash text-danger\" ng-click=\"removeSkillFromCategory($index)\"></i></div></div><div class=\"form-group row\"><label class=\"col-xs-12 col-md-3 col-form-label\">Add skill</label><div class=\"col-xs-12 col-md-7\"><div class=\"suggestion-input-container\"><input ng-model=\"newCategoryForm.skillNameSearch\" ng-maxlength=\"100\" ng-change=\"findSuggestionItems()\" ng-focus=\"focusSuggestionInput()\" ng-blur=\"leaveSuggestionInput()\" type=\"text\" class=\"form-control\" placeholder=\"Name of skill\"><div ng-class=\"[\\'suggestion-list\\', (newCategoryForm.suggestFocused ? \\'focused\\' : \\'\\')]\"><ul><li ng-repeat=\"item in newCategoryForm.suggestionItems track by ::item.id\"><div class=\"item\" ng-click=\"selectSuggestion(item)\" ng-bind=\"::item.name\"></div></li></ul></div></div></div><div class=\"col-xs-12 col-md-2 icon-col\"><i class=\"fas fa-plus-square text-primary\" ng-click=\"applySkillToCategory()\"></i></div></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"newCategoryForm.creating\" type=\"button\" ng-click=\"registerCategory()\" class=\"btn btn-primary\">{{ !newCategoryForm.creating ? \"Create\" : \"Creating...\" }}</button> <button ng-disabled=\"newCategoryForm.creating\" ng-click=\"closeModal()\" type=\"button\" class=\"btn btn-secondary\">Cancel</button></div></div>');\n$templateCache.put('app/pages/categories-skills/templates/skill-list-modal.html','<div id=\"category-skill-listing-modal\"><div class=\"modal-header\"><h4 class=\"modal-title\">List skills</h4></div><div class=\"modal-body\"><div class=\"form-group row\" ng-repeat=\"skill in categorySkillModal.skills track by ::skill.id\"><div class=\"col-xs-12 col-md-3\">Rank {{ $index + 1 }}</div><div class=\"col-xs-12 col-md-7\"><div class=\"skill-name\" ng-bind=\"::skill.name\"></div></div></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"addingSkillForm.adding\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Cancel</button></div></div>');\n$templateCache.put('app/pages/cvmarketing/templates/collectCV.html','<section id=\"callApi\" data-ng-init=\"callCollectCVApi()\"></section>');\n$templateCache.put('app/pages/cvmarketing/templates/collectCVFromMail.html','<section id=\"callApi\" data-ng-init=\"callCollectCVFromMailApi()\"></section>');\n$templateCache.put('app/pages/cvmarketing/templates/CVMarketing.html','<section id=\"account\" ng-controller=\"CvMarketingCtrl\"><div class=\"container full\"><div class=\"row form-group\"><div class=\"col-sm-12\"><h2 class=\"text-center\">CV Marketing</h2></div></div><div class=\"row\"><div class=\"col-sm-12\"><div class=\"row\"><div class=\"col-sm-6 col-sm-offset-3\"><div><form name=\"myForm\"><label for=\"repeatSelect\">Select Campaigns:</label><select name=\"repeatSelect\" id=\"repeatSelect\" ng-model=\"user.currentCampaign\" ng-change=\"update(user.currentCampaign,user.myCampaigns)\"><option ng-repeat=\"mycampaign in user.myCampaigns\" value=\"{{mycampaign.id}}\">{{mycampaign.campaign}}</option></select></form><hr></div><form name=\"CvMarketingForm\"><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.subject.$invalid && !CvMarketing.subject.$pristine }\"><div class=\"control-label\">Subject</div><input type=\"text\" class=\"form-control\" placeholder=\"Subject\" ng-model=\"CvMarketing.subject\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Manual Upload</div><label class=\"radio-inline\"><input type=\"radio\" name=\"optradio\" ng-model=\"manualUpload\" value=\"1\">Yes</label> <label class=\"radio-inline\"><input type=\"radio\" name=\"optradio\" ng-model=\"manualUpload\" value=\"0\">No</label></div><div class=\"form-group\" ng-if=\"manualUpload == 1\"><div class=\"control-label\">CampaignFile</div><input type=\"file\" class=\"form-control\" placeholder=\"Resume File\" file-model=\"CvMarketing.content\" accept=\".doc,.pdf,.docx,.html\" id=\"fileUpload\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.content.$invalid && !CvMarketing.content.$pristine }\" ng-if=\"manualUpload == 0\"><div class=\"control-label\">Campaign</div><ng-ckeditor ng-model=\"CvMarketing.content\" remove-buttons=\"Image\" remove-plugins=\"iframe,flash,smiley\"></ng-ckeditor></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.target.$invalid && !CvMarketing.target.$pristine }\"><div class=\"control-label\">Target</div><textarea class=\"form-control\" placeholder=\"Put Your Targets sep by comma\" ng-model=\"CvMarketing.target\" ng-required=\"true\"></textarea></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.campaign.$invalid && !CvMarketing.campaign.$pristine }\"><div class=\"control-label\">Campaign</div><input type=\"text\" class=\"form-control\" placeholder=\"Java Jobs,Solution Architect etc.\" ng-model=\"CvMarketing.campaign\" ng-required=\"true\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.mailServer.$invalid && !CvMarketing.mailServer.$pristine }\"><div class=\"control-label\">Mail Server</div><textarea class=\"form-control\" placeholder=\"Mail Server\" ng-model=\"CvMarketing.mailServer\" ng-required=\"false\"></textarea></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.userAccount.$invalid && !CvMarketing.userAccount.$pristine }\"><div class=\"control-label\">User Account</div><input type=\"text\" class=\"form-control\" placeholder=\"userAccount\" ng-model=\"CvMarketing.userAccount\" ng-required=\"true\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.userPassword.$invalid && !CvMarketing.userPassword.$pristine }\"><div class=\"control-label\">userPassword</div><input type=\"password\" class=\"form-control\" placeholder=\"userPassword\" ng-model=\"CvMarketing.userPassword\" ng-required=\"true\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.hourlyRate.$invalid && !CvMarketing.hourlyRate.$pristine }\"><div class=\"control-label\">hourlyRate</div><input type=\"text\" class=\"form-control\" placeholder=\"hourlyRate\" ng-model=\"CvMarketing.hourlyRate\" ng-required=\"true\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.dailyRate.$invalid && !CvMarketing.dailyRate.$pristine }\"><div class=\"control-label\">dailyRate</div><input type=\"text\" class=\"form-control\" placeholder=\"dailyRate\" ng-model=\"CvMarketing.dailyRate\" ng-required=\"true\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.sendCV.$invalid && !CvMarketing.sendCV.$pristine }\"><div class=\"control-label\">sendCV</div><input type=\"text\" class=\"form-control\" placeholder=\"sendCV\" ng-model=\"CvMarketing.sendCV\" ng-required=\"false\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.campaignStatus.$invalid && !CvMarketing.campaignStatus.$pristine }\"><div class=\"control-label\">campaignStatus</div><input type=\"text\" class=\"form-control\" placeholder=\"campaignStatus\" ng-model=\"CvMarketing.campaignStatus\" ng-required=\"false\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.campaignType.$invalid && !CvMarketing.campaignType.$pristine }\"><div class=\"control-label\">campaignType</div><input type=\"text\" class=\"form-control\" placeholder=\"campaignType\" ng-model=\"CvMarketing.campaignType\" ng-required=\"false\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.trackingNotesCreated.$invalid && !CvMarketing.trackingNotesCreated.$pristine }\"><div class=\"control-label\">TrackingNotesCreated</div><input type=\"text\" class=\"form-control\" placeholder=\"trackingNotesCreated\" ng-model=\"CvMarketing.trackingNotesCreated\" ng-required=\"false\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.paymentReceived.$invalid && !CvMarketing.paymentReceived.$pristine }\"><div class=\"control-label\">paymentReceived</div><input type=\"text\" class=\"form-control\" placeholder=\"paymentReceived\" ng-model=\"CvMarketing.paymentReceived\" ng-required=\"false\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.discountCode.$invalid && !CvMarketing.discountCode.$pristine }\"><div class=\"control-label\">discountCode</div><input type=\"text\" class=\"form-control\" placeholder=\"discountCode\" ng-model=\"CvMarketing.discountCode\" ng-required=\"false\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.notes.$invalid && !CvMarketing.notes.$pristine }\"><div class=\"control-label\">Notes</div><textarea class=\"form-control\" placeholder=\"Notes\" ng-model=\"CvMarketing.notes\" ng-required=\"true\"></textarea></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : resumeLookUp.$invalid && !resumeLookUp.$pristine }\"><div class=\"control-label\">lookUp</div><input type=\"text\" class=\"form-control\" placeholder=\"resumeLookUp\" ng-model=\"resumeLookUp\" ng-required=\"false\"> <button type=\"button\" class=\"btn btn-primary btn-block\" ng-click=\"loadResume(resumeLookUp)\">Resume LookUp</button></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : CvMarketing.resume.$invalid && !CvMarketing.resume.$pristine }\"><div class=\"control-label\">Resume</div><select class=\"form-control\" data-placeholder=\"Resume Title\" ng-model=\"CvMarketing.resumeId\" ng-required=\"true\"><option value=\"\"></option><option ng-repeat=\"resume in user.myResumes\" value=\"{{resume.id}}\">{{resume.resumeName}} {{resume.resumeTitle}}</option></select></div><div class=\"form-group\" style=\"margin-top: 40px;\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-disabled=\"CvMarketingForm.$invalid\" ng-click=\"postRequest(CvMarketingForm, CvMarketing)\">Proceed</button></div><div class=\"form-group\" style=\"margin-top: 40px;\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-disabled=\"CvMarketingForm.$invalid\" ng-click=\"editRequest(CvMarketingForm, CvMarketing)\">Edit</button></div><div class=\"form-group\" style=\"margin-top: 40px;\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-disabled=\"CvMarketingForm.$invalid\" ng-click=\"deleteRequest(CvMarketingForm, CvMarketing)\">Delete</button></div><div class=\"form-group\" style=\"margin-top: 40px;\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-disabled=\"CvMarketingForm.$invalid\" ng-click=\"cloneRequest(CvMarketingForm, CvMarketing)\">Clone</button></div></form></div></div></div></div></div></section>');\n$templateCache.put('app/pages/groupdata/templates/groups.html','<section id=\"groupData\" ng-controller=\"GroupDataCtrl\"><div class=\"row\"><form name=\"groupForm\"><label>Add Groups:</label><br><br><div class=\"form-group\"><div class=\"control-label\">Group Name</div><input type=\"text\" class=\"form-control\" placeholder=\"group name\" ng-model=\"groupData.groupName\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Group Type</div><input type=\"text\" class=\"form-control\" placeholder=\"group type\" ng-model=\"groupData.groupType\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Group Location</div><input type=\"text\" class=\"form-control\" placeholder=\"group location\" ng-model=\"groupData.groupLocation\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Group Access</div><input type=\"textarea\" class=\"form-control\" placeholder=\"group access\" ng-model=\"groupData.userAccounts\" ng-required=\"true\"></div><div class=\"form-group\" style=\"margin-top: 40px;\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-click=\"addGroup(groupForm, groupData)\">Add Group</button><div class=\"form-group\" style=\"margin-top: 40px;\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-click=\"editGroup(groupForm, groupData)\">Edit Group</button></div></div></form><form name=\"membersForm\"><label>Select Groups:</label><select ng-model=\"selectedItem\" ng-change=\"getGroupMembers(selectedItem.id)\" ng-options=\"mygroup.groupName for mygroup in user.myGroups\"></select><br><div class=\"form-group\"><div class=\"control-label\">Members Data</div><br><div class=\"control-label\">Upload Members Data<br></div><input type=\"file\" class=\"form-control\" placeholder=\"Members Data\" file-model=\"myFile\" accept=\".text,.csv\" id=\"fileUpload\"><br><button ng-click=\"bulkUpload(myFile,selectedItem.id)\">bulkupload</button><br><br><input type=\"text\" ng-model=\"newMemberData.memberFirstName\"> <input type=\"text\" ng-model=\"newMemberData.memberLastName\"> <input type=\"text\" ng-model=\"newMemberData.memberEmail\"> <button ng-click=\"removeMember(newMemberData,selectedItem.id)\">remove</button> <button ng-click=\"copyMember(newMemberData,selectedItem.id)\">copy</button> <button ng-click=\"editMember(newMemberData,selectedItem.id)\">edit</button><br><br><br><div ng-repeat=\"members in user.groupMembers\" class=\"list-group\"><input type=\"text\" ng-model=\"user.groupMembers[$index].memberFirstName\"> <input type=\"text\" ng-model=\"user.groupMembers[$index].memberLastName\"> <input type=\"text\" size=\"40\" ng-model=\"user.groupMembers[$index].memberEmail\"> <button ng-click=\"removeMember(user.groupMembers[$index])\">remove</button> <button ng-click=\"copyMember(user.groupMembers[$index])\">copy</button> <button ng-click=\"editMember(user.groupMembers[$index])\">edit</button></div></div></form></div></section>');\n$templateCache.put('app/pages/cvbox-candidates/templates/candidates-list.html','<section id=\"referral\" ng-controller=\"CvBoxCtrl\"><div class=\"body-section list-resumes-section\"><div class=\"section-content\"><div class=\"row\"><div class=\"col-xs-12\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text spec-detail-panel\"><h4 ng-bind=\"cvboxDetail.referralTargetSubject\">...</h4><div class=\"target-email\">List of candidates</div></div></div><div class=\"col-xs-12 col-md-3\" ng-repeat=\"aResume in candidates track by aResume.resumeId\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel\"><div class=\"tile-title\"><h3 class=\"resume-title\" ng-bind=\"aResume.resumeName\">...</h3></div><hr class=\"resumeSeprator\"><div class=\"tile-user-email text-primary\" ng-bind=\"aResume.userEmail\">...</div><div class=\"tile-datetime\" ng-bind=\"formatDateTime(aResume.uploadedAt)\">07/10/1993</div><div class=\"controls\"><a href=\"#\" title=\"Preview\" ng-click=\"openPreviewResume(aResume)\"><i class=\"fas fa-search\"></i></a> <a href=\"#\" title=\"Remove candidate\" ng-click=\"openRemoveModal(aResume, $index)\"><i class=\"fas fa-user-minus\"></i></a></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/cvbox-candidates/templates/remove-candidate-modal.html','<div class=\"modal-header\"><h4 class=\"modal-title\">Remove candidate</h4></div><div class=\"modal-body\"><h5>Would you like to continue removing this resume from the cv box?</h5><br><br></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"removingInfo.removing\" ng-bind=\"removingInfo.removing ? \\'Removing...\\' : \\'Continue\\'\" ng-click=\"removeCandidate()\" type=\"button\" class=\"btn btn-primary\">Continue</button> <button ng-disabled=\"removingInfo.removing\" ng-click=\"closeModal()\" type=\"button\" class=\"btn btn-secondary\">Cancel</button></div>');\n$templateCache.put('app/pages/job-resume-preview/templates/index.html','<section id=\"job-resume-preview-page\" ng-controller=\"JobResumePreviewCtrl\"><div class=\"body-section\"><div class=\"section-content\"><div class=\"resume-preview-iframe\" ng-style=\"{ height: (resumePreview.pdfViewerHeight + \\'px\\') }\"><iframe ng-src=\"{{ trustSrc(resumePreview.url, resumePreview.urlCdt) }}\" width=\"100%\" height=\"100%\"></iframe></div><div ng-if=\"!!jobDetail.isExtend\" class=\"writing-review extend-preview\"><div class=\"writing-panel\"><div ng-if=\"!extendForm.submitted && !extendForm.failed\"><div class=\"text-primary\">Would you like to extend this resume preview?</div><br><div><button ng-disabled=\"extendForm.submitting\" class=\"btn btn-primary\" ng-click=\"extendPreview()\">{{ !extendForm.submitting ? \"Extend\" : \"Extending...\" }}</button></div></div><div ng-if=\"extendForm.submitted\"><div class=\"text-success\">Your preview has been extended successfully.<br>Let share your resume preview to get more reviews.</div></div><div ng-if=\"extendForm.failed\"><div class=\"text-error\">Extending the resume preview has failed due to some reasons.<br>Please contact us for more information.</div></div></div></div><div class=\"writing-review\" ng-if=\"resumePreview.isReviewer || resumePreview.isAdminUser\"><div class=\"writing-panel\"><div class=\"panel-title\">Resume masking</div><div class=\"review-form\"><div class=\"form-row\"><input ng-disabled=\"maskingForm.submitting\" ng-model=\"maskingForm.texts\" class=\"form-control\" type=\"text\" placeholder=\"Enter texts you want to mask\"></div><div class=\"form-row\"><button ng-disabled=\"maskingForm.submitting\" ng-click=\"maskText()\" type=\"button\" class=\"btn btn-primary\">{{ !!maskingForm.submitting ? \"Masking Resume...\" : \"Mask Resume\" }}</button></div></div></div></div><div class=\"writing-review\" ng-if=\"resumePreview.tokenValid === true && !jobDetail.isExtend && !resumePreview.withReviewToken\"><div class=\"writing-panel\"><div class=\"panel-title\">Leave a review</div><div class=\"review-form\" ng-if=\"!writingForm.submitted && !writingForm.expired\"><div class=\"form-row\" ng-if=\"writingForm.inAuth\"><input ng-disabled=\"writingForm.submitting || writingForm.inAuth\" ng-model=\"writingForm.email\" class=\"form-control\" type=\"text\" placeholder=\"Enter your email\"></div><div class=\"form-row\" ng-if=\"!writingForm.inAuth\"><input ng-model=\"writingForm.firstName\" class=\"form-control\" type=\"text\" placeholder=\"Enter your name\"></div><div class=\"form-row\"><textarea maxlength=\"500\" ng-disabled=\"writingForm.submitting\" ng-model=\"writingForm.content\" class=\"form-control\" placeholder=\"Enter your review\"></textarea></div><div class=\"form-row\" ng-if=\"writingForm.emailInvalid || writingForm.contentInvalid\"><div class=\"text-danger\" ng-if=\"writingForm.emailInvalid\">Email is invalid.</div><div class=\"text-danger\" ng-if=\"writingForm.contentInvalid\">Review content is required.</div></div><div class=\"form-row\"><button ng-disabled=\"writingForm.submitting\" type=\"button\" class=\"btn btn-primary\" ng-click=\"submitReview()\">{{ !writingForm.submitting ? \"Submit My Review\" : \"Submitting In Progress\" }}</button></div></div><div class=\"writing-notify-message\" ng-if=\"writingForm.submitted || writingForm.expired\"><div class=\"text-danger\" ng-if=\"writingForm.expired\">Access token has recently expired. Please ask for new access link to review.</div><div class=\"text-success\" ng-if=\"writingForm.submitted\">Your review has been submitted successfully. Thanks for your contribution.</div></div></div></div><div class=\"list-reviews\" ng-if=\"resumePreview.tokenValid === true\"><div class=\"reviews-panel\"><div class=\"panel-title\">List of reviews ({{ resumePreview.noOfReviews }})</div><div class=\"panel-content\"><div class=\"login-asking\" ng-if=\"resumePreview.rqUserId <= 0 && (!resumePreview.withReviewToken || !!resumePreview.reviewTokenExpired)\"><div ng-if=\"!!resumePreview.reviewTokenExpired\" class=\"text-danger\">Review access token has expired.</div><br><div>Please <a ng-href=\"/login?redirect={{ resumePreview.loginRedirect }}\">sign in</a> to see your reviews.</div></div><div class=\"no-review-notify\" ng-if=\"resumePreview.rqUserId > 0 && listReviews.length === 0 && resumePreview.noOfReviews > 0\">You have no reviews on this resume yet.</div><div class=\"no-review-notify\" ng-if=\"resumePreview.rqUserId > 0 && listReviews.length === 0 && resumePreview.noOfReviews === 0\">There is no reviews yet.</div><div class=\"reviews\" ng-if=\"listReviews.length > 0\"><div ng-repeat=\"aReview in listReviews track by aReview.id\" class=\"a-review\"><div class=\"review-container\"><div><div class=\"reviewer\"><div class=\"email\" ng-bind=\"aReview.feedbackUserId ? aReview.feedbackUserEmail : aReview.reviewerName\"></div><div class=\"datetime\" ng-bind=\"formatDateTime(aReview.uploadedAt)\"></div></div><div class=\"review-content\"><p ng-bind=\"aReview.resumeReview\"></p></div><div class=\"reply-summary\"><i class=\"fas fa-level-up-alt\"></i> <span class=\"text\" ng-click=\"activeReply(aReview)\">{{ !!aReview.noOfReply ? aReview.noOfReply : 0 }} comments - Reply</span></div></div><div class=\"list-reply\" ng-if=\"!!aReview.replyActive\"><div class=\"a-reply reply-comment\" ng-repeat=\"aComment in aReview.listReply track by aComment.id\"><div class=\"user\" ng-bind=\"aComment.userId !== resumePreview.rqUserId ? aComment.userEmail : \\'You\\'\"></div><div class=\"content\" ng-bind=\"aComment.replyContent\"></div><div class=\"date\" ng-bind=\"formatDateTime(aComment.uploadedAt)\"></div></div><div class=\"a-reply reply-input\" ng-if=\"!!resumePreview.withReviewToken || !resumePreview.isAdminUser\"><input type=\"text\" class=\"form-control\" placeholder=\"Enter to leave comment\" ng-keydown=\"$event.keyCode === 13 && writeReviewComment(aReview)\" ng-model=\"aReview.replyContent\"><div class=\"send-btn\" ng-click=\"writeReviewComment(aReview)\"><a href=\"#\">Send</a></div></div></div></div></div></div></div></div></div><div class=\"text-danger token-error\" ng-if=\"resumePreview.tokenValid === false\">Access token has been expired.</div></div></div></section>');\n$templateCache.put('app/pages/list-jobs/templates/index.html','<section id=\"job-list-page\" ng-controller=\"JobSpecListCtrl\"><div class=\"body-section\"><div class=\"section-content\"><div class=\"section-title\"><h3>Job List</h3></div><div class=\"top-filter\"><div class=\"top-filter-container\"><form ng-submit=\"searchJobList()\"><div class=\"top-filter-row\"><div class=\"filter-col\"><div class=\"search-input title-search-input\"><input ng-model=\"searchForm.title\" type=\"text\" class=\"form-control\" placeholder=\"Job title\"></div></div><div class=\"filter-col location-col\"><div class=\"search-input location-search-input\"><input ng-model=\"searchForm.location\" type=\"text\" class=\"form-control\" placeholder=\"Location\"></div></div><div class=\"filter-col btn-col\"><div class=\"search-input btn-search\"><button type=\"submit\" class=\"btn btn-primary\">REFINE YOUR SEARCH</button></div></div></div></form></div></div><div class=\"jobs-result\"><div class=\"list-jobs\"><div class=\"job-row\" ng-repeat=\"aJob in listJob track by aJob.id\"><a target=\"_blank\" ng-href=\"{{ getLink(aJob.referralLink, aJob.referralTargetSubject) }}\"><div class=\"job-panel\"><div class=\"flex-row\"><div class=\"info-col\"><div class=\"title\" ng-bind=\"aJob.referralTargetSubject\"></div><div class=\"location\" ng-bind=\"aJob.jobLocation\"></div><div class=\"datetime\" ng-if=\"!!aJob.publishedDate\">posted at {{ getFormattedPostDate(aJob.publishedDate) }}</div></div><div class=\"type-col\"><span class=\"badge badge-success\" ng-bind=\"aJob.jobType\"></span></div></div></div></a></div><div ng-if=\"!loading && hasNext\" class=\"job-row load-more-row\" ng-click=\"loadMore()\"><div class=\"load-more-btn\">Load More Jobs</div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/jobs/templates/activateJobFromMail.html','<section id=\"redirect\" data-ng-init=\"redirectToProfilePage()\"></section>');\n$templateCache.put('app/pages/jobs/templates/advanced_search.html','<form name=\"editJobForm\" novalidate=\"\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Advanced Job Search</h4></div><alert ng-repeat=\"alert in alerts track by $index\" type=\"{{alert.type}}\" close=\"alerts.splice($index, 1)\" id=\"alertModel\"><div ng-bind=\"alert.message\"></div></alert><div><div class=\"modal-body\"><h5>Find Jobs</h5><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group\"><label>With all of these words</label> <input type=\"text\" class=\"form-control\" name=\"text\"></div></div><div class=\"col-md-6\"><div class=\"form-group\"><label>With the exact phrase</label> <input type=\"text\" class=\"form-control\" name=\"text\"></div></div></div><div class=\"form-group\"><label>Show jobs of type</label><select class=\"form-control\"><option value=\"all\">All job types</option><option value=\"fulltime\">Full-time</option><option value=\"parttime\">Part-time</option><option value=\"contract\">Contract</option><option value=\"internship\">Internship</option><option value=\"temporary\">Temporary</option></select></div><div class=\"white-space-10\"></div><h5>Where and When</h5><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group\"><label>Radius</label><select id=\"radius\" class=\"form-control\"><option value=\"0\">only in</option><option value=\"5\">within 5 kilometers</option><option value=\"10\">within 10 kilometers</option><option value=\"15\">within 15 kilometers</option><option selected=\"\" value=\"25\">within 25 kilometers</option><option value=\"50\">within 50 kilometers</option><option value=\"100\">within 100 kilometers</option></select></div></div><div class=\"col-md-6\"><div class=\"form-group\"><label>Of</label> <input type=\"text\" class=\"form-control\" maxlength=\"250\" value=\"United States\"></div></div></div><div class=\"row\"><div class=\"col-md-6\"><div class=\"form-group\"><label>Age - Jobs published</label><select class=\"form-control\"><option value=\"any\">anytime</option><option value=\"15\">within 15 days</option><option value=\"7\">within 7 days</option><option value=\"3\">within 3 days</option><option value=\"1\">since yesterday</option><option value=\"last\">since my last visit</option></select></div></div><div class=\"col-md-6\"><div class=\"form-group\"><label>Display</label><select class=\"form-control\"><option selected=\"\" value=\"10\">10</option><option value=\"20\">20</option><option value=\"30\">30</option><option value=\"50\">50</option></select></div></div></div></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-click=\"saveSelectedJob();\">Search for Job</button></div></div></form>');\n$templateCache.put('app/pages/jobs/templates/dirPagination.tpl.html','<ul class=\"pagination\" ng-if=\"1 < pages.length || !autoHide\"><li ng-if=\"boundaryLinks\" ng-class=\"{ disabled : pagination.current == 1 }\"><a href=\"\" ng-click=\"setCurrent(1)\">&laquo;</a></li><li ng-if=\"directionLinks\" ng-class=\"{ disabled : pagination.current == 1 }\"><a href=\"\" ng-click=\"setCurrent(pagination.current - 1)\">&lsaquo;</a></li><li ng-repeat=\"pageNumber in pages track by tracker(pageNumber, $index)\" ng-class=\"{ active : pagination.current == pageNumber, disabled : pageNumber == \\'...\\' }\"><a href=\"\" ng-click=\"setCurrent(pageNumber)\">{{ pageNumber }}</a></li><li ng-if=\"directionLinks\" ng-class=\"{ disabled : pagination.current == pagination.last }\"><a href=\"\" ng-click=\"setCurrent(pagination.current + 1)\">&rsaquo;</a></li><li ng-if=\"boundaryLinks\" ng-class=\"{ disabled : pagination.current == pagination.last }\"><a href=\"\" ng-click=\"setCurrent(pagination.last)\">&raquo;</a></li></ul>');\n$templateCache.put('app/pages/jobs/templates/edit_job.html','<form name=\"editJobForm\" novalidate=\"\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Edit Job</h4></div><alert ng-repeat=\"alert in alerts track by $index\" type=\"{{alert.type}}\" close=\"alerts.splice($index, 1)\" id=\"alertModel\"><div ng-bind=\"alert.message\"></div></alert><div><div class=\"modal-body\"><div class=\"form-group\"><ng-ckeditor ng-model=\"job.jobDescription\" remove-buttons=\"Image\" remove-plugins=\"iframe,flash,smiley\"></ng-ckeditor></div></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-click=\"saveSelectedJob();\">Save Job</button></div></div></form>');\n$templateCache.put('app/pages/jobs/templates/jobs.html','<div ng-controller=\"JobsCtrl\" data-ng-init=\"init()\"><div class=\"row\"><div class=\"col-md-6\"><div class=\"input-group\"><input type=\"text\" class=\"form-control\" id=\"jobSearch\" placeholder=\"job title, keywords or company name\" ng-model=\"searchText\" autocomplete=\"off\" ng-keydown=\"$event.which === 13 && searchText!=\\'\\' && searchForJobs()\"> <span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-default\" ng-click=\"searchForJobs();\" ng-disabled=\"searchText==\\'\\'\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i> Search</button></span></div></div><div class=\"col-md-3\"><button class=\"btn btn-danger pull-right\" ng-click=\"resetJobSearch();\" ng-show=\"searchMode\"><i class=\"fa fa-share\" aria-hidden=\"true\"></i> Reset</button></div><div class=\"col-md-9\"><div class=\"row hidden-xs\"><div class=\"col-sm-12\"><p class=\"text-right\">{{totalJobs}} Jobs</p></div></div><div ba-panel=\"\" ba-panel-title=\"Jobs List\" ba-panel-class=\"with-scroll\"><div class=\"row\"><div class=\"col-sm-12\" dir-paginate=\"job in allJobs | filter:q | itemsPerPage: pageSize\" current-page=\"currentPage\" total-items=\"totalJobs\"><div class=\"panel-group\"><div class=\"panel panel-default bootstrap-panel\"><div class=\"panel-body\"><h3 class=\"no-margin-top\"><a href=\"/viewJob\" ng-click=\"viewJobsDetailsModel(job, $index);\" class=\"\">{{job.jobTitle}} <i class=\"fa fa-link color-white-mute font-1x\"></i></a></h3><h5><span class=\"color-black\"><span class=\"color-black bold\">Agency:</span>{{job.agency}}</span></h5><div><span class=\"color-white-mute\">{{job.createdDate}}</span> <span class=\"color-white-mute pull-right\" ng-show=\"isAdmin\">{{getJobStatus(job.jobStatus)}}</span></div><span class=\"color-black pull-right\"><span class=\"color-black bold\">Recruiter:</span>{{job.recruiter}}</span></div></div></div></div></div><nav><dir-pagination-controls boundary-links=\"true\" on-page-change=\"pageChanged(newPageNumber)\" template-url=\"app/pages/jobs/templates/dirPagination.tpl.html\"></dir-pagination-controls></nav></div></div><div class=\"col-md-3\"><div ba-panel=\"\" ba-panel-class=\"with-scroll lists-widget\" ba-panel-title=\"Jobs Criteria\"><div class=\"section-block\"><div class=\"form-group\"><label for=\"sortJobs\">Sort by</label><select name=\"sortJobs\" id=\"sortJobs\" ng-model=\"JobsSearch.sortyBy\" ng-change=\"updateSortedJobs()\" class=\"form-control\"><option ng-repeat=\"option in jobsSearchCriteriaSortDropDown\" value=\"{{option.id}}\">{{option.name}}</option></select></div><div js-tree=\"basicConfig\" ng-model=\"dragData\" tree=\"basicTree\" tree-events=\"select_node:selectNode;\"></div></div></div></div></div></div>');\n$templateCache.put('app/pages/jobs/templates/view_job.html','<div ng-controller=\"JobsCtrl\" data-ng-init=\"initJiewPage()\"><div class=\"row\"><div class=\"col-xs-12\"><div class=\"row\"><div class=\"col-sm-12\"><div class=\"text-right\"><a href=\"#\" ng-href=\"/jobs\">\\xAB Go back to job listings</a></div></div></div><div ba-panel=\"\" ba-panel-class=\"with-scroll\"><div class=\"row\"><div class=\"col-sm-12\"><div class=\"form-group\"><h2 style=\"font-weight: bold;\"><a href=\"#\" editable-text=\"selectedJob.jobTitle\" edit-disabled=\"!isAdmin\" id=\"jobTitle\">{{ selectedJob.jobTitle || \"\" }}</a></h2></div></div><div class=\"col-sm-12\"><div class=\"form-group\"><label for=\"Agency\">Agency</label> <a href=\"#\" editable-text=\"selectedJob.agency\" edit-disabled=\"!isAdmin\" id=\"Agency\">{{ selectedJob.agency || \"\" }}</a></div></div></div><div class=\"row\"><div class=\"col-sm-12\"><div class=\"form-group\"><label for=\"recruiter\">Recruiter</label> <a href=\"#\" editable-text=\"selectedJob.recruiter\" edit-disabled=\"!isAdmin\" id=\"recruiter\">{{ selectedJob.recruiter || \"\" }}</a></div></div><div class=\"col-sm-12\"><div class=\"form-group\"><label for=\"recruiterEmail\">Recruiter Email</label> <a href=\"#\" editable-email=\"selectedJob.recruiterEmail\" edit-disabled=\"!isAdmin\" id=\"recruiterEmail\">{{ selectedJob.recruiterEmail || \"\" }}</a></div></div></div><h2 class=\"title\"></h2><div class=\"job-meta\"><ul class=\"list-inline\"><div class=\"row\"><div class=\"col-xs-4\"><span>Salary:</span> <input type=\"number\" class=\"form-control\" ng-model=\"selectedJob.salaryRange\" ng-disabled=\"!isAdmin\"></div><div class=\"col-xs-4\"><span>Location:</span><select ng-model=\"selectedJob.jobLocation\" class=\"form-control\" ng-options=\"i.id as (i.cityName) for i in citiesList\" id=\"cities\" name=\"cities\" ng-disabled=\"!isAdmin\"><option></option></select></div><div class=\"col-xs-4\"><span>Job Type:</span><select ng-model=\"selectedJob.jobType\" class=\"form-control\" name=\"jobTypeList\" id=\"jobTypeList\" ng-options=\"i.id as (i.name) for i in jobTypeList\" ng-disabled=\"!isAdmin\"><option></option></select></div></div></ul><ul class=\"list-inline\"><div class=\"row\"><div class=\"col-xs-6\"><span>Created Date:</span> <input type=\"text\" class=\"form-control\" ng-model=\"selectedJob.createdDate\" disabled=\"true\"></div><div class=\"col-xs-6\" ng-show=\"isAdmin\"><span>Job Status:</span><select ng-model=\"selectedJob.jobStatus\" class=\"form-control\" ng-options=\"i.id as (i.name) for i in jobStatustDropDown\"><option></option></select></div></div></ul></div><ng-ckeditor ng-model=\"selectedJob.jobDescription\" ng-config=\"viewJobEditor\" ng-disabled=\"disableEditor\"></ng-ckeditor></div></div><div class=\"col-xs-12\"><div class=\"d-flex grid\"><div class=\"col-auto\"><div class=\"button-wrapper\"><button type=\"button\" class=\"btn btn-default btn-with-icon\" data-toggle=\"modal\" ng-click=\"openApplyJobModel()\">Apply Job</button></div></div><div class=\"col-auto\" ng-show=\"isAdmin\"><div class=\"button-wrapper\"><button type=\"button\" class=\"btn btn-primary btn-with-icon\" data-toggle=\"modal\" ng-click=\"openEditJobModel()\">Edit Job</button></div></div><div class=\"col-auto\" ng-show=\"isFromMail\"><div class=\"button-wrapper\"><button type=\"button\" class=\"btn btn-success btn-with-icon\" data-toggle=\"modal\" ng-click=\"openApproveJobModel()\">Approve Job</button></div></div><div class=\"col-auto\" ng-show=\"isFromMail\"><div class=\"button-wrapper\"><button type=\"button\" class=\"btn btn-info btn-with-icon\" data-toggle=\"modal\" ng-click=\"openRejectJobModel()\">Reject Job</button></div></div></div></div></div></div>');\n$templateCache.put('app/pages/list-resumes/templates/categorizing-modal.html','<div id=\"categorizing-job-modal\"><div class=\"modal-header\"><h4 class=\"modal-title\">Skills</h4></div><div class=\"modal-body\"><div class=\"form-group row\" ng-repeat=\"skill in jobCategorizingForm.skills track by ::skill.id\"><div class=\"col-xs-12 col-md-3 col-form-label\">Skill {{ $index + 1 }}</div><div class=\"col-xs-12 col-md-7\"><div class=\"category-name\">{{ ::skill.name }}</div></div></div></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Cancel</button></div></div>');\n$templateCache.put('app/pages/list-resumes/templates/cv-box-selection-modal.html','<div id=\"cv-box-selection-modal\"><div class=\"modal-header\"><h4 class=\"modal-title\">Add to CV Box</h4></div><div class=\"modal-body\"><div class=\"search-box\"><div class=\"form-group\"><label>Enter name to find Cv Box</label> <input ng-model=\"cvBoxForm.boxName\" ng-keypress=\"$event.keyCode === 13 && findCvBox()\" type=\"text\" class=\"form-control\"></div></div><div class=\"cv-box-result\"><div ng-if=\"cvBoxForm.findingBox\">Loading...</div><div ng-if=\"!cvBoxForm.findingBox && cvBoxForm.foundBoxes !== null\"><div ng-if=\"cvBoxForm.foundBoxes.length === 0\">No Cv Box found</div><div class=\"form-group\" ng-repeat=\"aBox in cvBoxForm.foundBoxes track by aBox.id\"><div class=\"form-check\"><input ng-model=\"cvBoxForm.selectedReferralId\" class=\"form-check-input\" type=\"radio\" name=\"selectedReferralId\" ng-value=\"aBox.id\" checked=\"\"> <label class=\"form-check-label\" ng-bind=\"aBox.title\">...</label></div></div></div></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"cvBoxForm.selectedReferralId < 0 || !!cvBoxForm.addingToBox\" ng-click=\"addCvToBox()\" type=\"button\" class=\"btn btn-primary\">Add</button> <button ng-click=\"closeModal()\" type=\"button\" class=\"btn btn-secondary\">Cancel</button></div></div>');\n$templateCache.put('app/pages/list-resumes/templates/edit-link.html','<form name=\"editLinkSubmitForm\" novalidate=\"\" ng-submit=\"checkPreviewId()\"><div class=\"modal-header\"><h4 class=\"modal-title\">Edit preview link</h4></div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Short Preview Id</div><input type=\"text\" class=\"form-control\" ng-change=\"editLinkForm.inUse = false\" ng-disabled=\"editLinkForm.editing\" ng-pattern=\"\\'^[a-zA-Z0-9_-]+$\\'\" ng-model=\"editLinkForm.linkId\" ng-required=\"true\" maxlength=\"250\"><div class=\"text-secondary mt-1\" style=\"color: #9099ad; margin-top: 10px; font-family: \\'museo_slab500\\';\">Note: Link contains only characters, number and underscore, hyphen.</div></div><div class=\"text-danger\" ng-if=\"editLinkForm.inUse\">This link id is already in use.</div></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary\" ng-disabled=\"editLinkSubmitForm.$invalid || editLinkForm.editing\">{{ editLinkForm.editing ? \"Editing\" : \"Edit\" }}</button> <button type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeEditPreviewLinkModal()\">Cancel</button></div></form>');\n$templateCache.put('app/pages/list-resumes/templates/extend-resume-modal.html','<form name=\"extendResumeForm\" ng-submit=\"extendResume()\" novalidate=\"\"><div id=\"admin-resume-extending-modal\"><div class=\"modal-header\"><h4 class=\"modal-title\">Extending resume</h4></div><div class=\"modal-body\"><h5>How many days do you want to extend?</h5><br><div class=\"form-group day-input-group\"><input ng-disabled=\"extendForm.extending\" ng-model=\"extendForm.days\" ng-min=\"1\" type=\"number\" placeholder=\"No of days\" class=\"form-control\" ng-required=\"true\"></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary\" ng-disabled=\"extendResumeForm.$invalid || extendForm.extending\">{{ extendForm.extending ? \"Extending...\" : \"Extend\" }}</button> <button ng-click=\"closeModal()\" ng-disabled=\"extendForm.extending\" type=\"button\" class=\"btn btn-secondary\">Cancel</button></div></div></div></form>');\n$templateCache.put('app/pages/list-resumes/templates/index.html','<section id=\"resumes-listing-page\" ng-controller=\"ResumesListingCtrl\"><div class=\"body-section\"><div class=\"section-content\"><div class=\"d-flex\"><div class=\"section-title\"><h3>Resumes</h3></div><div class=\"flex-fill text-right\"><button class=\"btn btn-primary\" ng-click=\"addNewResumeModel()\"><i class=\"fa fa-plus\"></i> <span>Add</span></button></div></div><div class=\"resumes-list-result\"><div class=\"row\"><div ng-if=\"loadInfo.isManagement\" ng-repeat=\"aResume in listResumes track by aResume.id\" class=\"col-xs-12 col-md-4\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel\"><div class=\"resume-title\"><a ng-href=\"/job-resume-preview?previewToken={{ aResume.previewToken }}\" ng-bind=\"aResume.resumeName\" target=\"_blank\"></a></div><div class=\"owner\" ng-bind=\"aResume.ownerEmail\"></div><div class=\"detail-row\"><div class=\"row\"><div class=\"col-xs-12 col-md-6\"><div class=\"detail-info\"><div class=\"info-label\">{{ !!aResume.originalExpired ? \"Original expired at\" : \"Original expires at\" }}</div><div ng-class=\"[\\'info-val\\',(!!aResume.originalExpired ? \\'text-danger\\' : \\'\\')]\">{{ !!aResume.originalPreviewExpiresAt ? getFormattedDate(aResume.originalPreviewExpiresAt) : \"-\" }}</div></div></div><div class=\"col-xs-12\"><div class=\"detail-info\"><div class=\"info-label\">{{ !!aResume.maskedExpired ? \"Masked expired at\" : \"Masked expires at\" }}</div><div ng-class=\"[\\'info-val\\',(!!aResume.maskedExpired ? \\'text-danger\\' : \\'\\')]\">{{ !!aResume.previewExpiresAt ? getFormattedDate(aResume.previewExpiresAt) : \"-\" }}</div></div></div><div class=\"col-xs-12\"><div class=\"detail-info\"><div class=\"info-label\">Original link</div><div class=\"info-val preview-link\"><a target=\"_blank\" ng-href=\"https://mycvtracker.com/resumes/{{ aResume.originalLinkId }}\" ng-if=\"!!aResume.originalLinkId\">{{ aResume.originalLinkId }}</a> <span href=\"\" ng-if=\"!aResume.originalLinkId\">n/a</span></div></div></div><div class=\"col-xs-12\"><div class=\"detail-info\"><div class=\"info-label\">Masked link</div><div class=\"info-val preview-link\"><a target=\"_blank\" ng-href=\"https://mycvtracker.com/resumes/{{ aResume.maskedLinkId }}\" ng-if=\"!!aResume.maskedLinkId\">{{ aResume.maskedLinkId }}</a> <span ng-if=\"!aResume.maskedLinkId\">n/a</span></div></div></div><div class=\"col-xs-12\"><div class=\"detail-info\"><div class=\"info-label\">Uploaded at</div><div class=\"info-val\">{{ getFormattedPostDate(aResume.uploadedAt) }}</div></div></div><div class=\"col-xs-12\"><div class=\"detail-info listing-ctrl\"><div class=\"listing-status\" ng-if=\"loadInfo.isAdmin\"><label ng-class=\"[\\'switch\\',(aResume.listingActive ? \\'active\\': \\'\\')]\" ng-click=\"toggleListingActive(aResume)\"><span class=\"slider round\"></span></label> <label class=\"switch-label\">{{ !aResume.listingActive ? \"Not listed\" : \"Listed\" }}</label></div></div></div></div></div><div class=\"menu-ctrl\"><div class=\"btn-group\"><button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-bars\"></i></button><div class=\"dropdown-menu dropdown-menu-right\"><a ng-click=\"openExtendModal(aResume, false)\" class=\"dropdown-item\" href=\"#\">Extend masked preview</a> <a ng-click=\"openExtendModal(aResume, true)\" class=\"dropdown-item\" href=\"#\" ng-if=\"!!aResume.originalPreviewExpiresAt\">Extend original preview</a> <a ng-click=\"openEditPreviewLink(aResume, \\'MASKED\\')\" class=\"dropdown-item\" href=\"#\">Edit masked link</a> <a ng-click=\"openEditPreviewLink(aResume, \\'ORIGINAL\\')\" class=\"dropdown-item\" href=\"#\">Edit original link</a> <a ng-click=\"openAddToCvBoxModal(aResume)\" class=\"dropdown-item\" href=\"#\">Add to Cv Box</a> <a ng-click=\"openUpdateSkillModal(aResume.id)\" class=\"dropdown-item\" href=\"#\">Categorized skills</a></div></div></div></div></div><div ng-if=\"!loadInfo.isManagement\" ng-repeat=\"aResume in listResumes track by aResume.id\" class=\"col-xs-12 col-md-6\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel\"><div class=\"resume-title\"><a ng-href=\"/job-resume-preview?previewToken={{ aResume.previewToken }}\" ng-bind=\"aResume.resumeName\" target=\"_blank\"></a></div><div class=\"owner\" ng-bind=\"aResume.ownerEmail\"></div><div class=\"tile-datetime\">Uploaded at {{ getFormattedPostDate(aResume.uploadedAt) }}</div></div></div></div><div class=\"more-ctrl\" ng-if=\"loadInfo.hasNext && !loadInfo.loading\"><button class=\"btn btn-primary\" ng-click=\"loadMore()\">Load More</button></div></div></div></div></section>');\n$templateCache.put('app/pages/list-resumes/templates/new_resume.html','<form name=\"resumeForm\" novalidate=\"\" ng-submit=\"saveResume()\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"!formProcessing && closeNewResumeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Add New Resume</h4></div><alert ng-repeat=\"alert in alerts track by $index\" type=\"{{alert.type}}\" close=\"alerts.splice($index, 1)\" id=\"alertModel\"><div ng-bind=\"alert.message\" class=\"file-upload-error\"></div></alert><div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Resume Reference</div><input type=\"text\" class=\"form-control\" placeholder=\"Resume Reference you can use your skills - Developer , Architect or Project Manager etc\" ng-model=\"resumeTitle\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Resume File - You can upload upto 8 Resumes<span class=\"file-size\">(Max. file size upto 500KB)</span></div><input type=\"file\" class=\"form-control\" placeholder=\"Resume File\" file-model=\"myFile\" accept=\".doc,.pdf,.docx\" id=\"fileUpload\"></div></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary btn-block\" ng-disabled=\"resumeForm.$invalid || !!formProcessing\">{{ !formProcessing ? \"Save Resume\" : \"Saving...\" }}</button></div></div></form>');\n$templateCache.put('app/pages/notes/templates/delete_note.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeDeleteNoteModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Delete Note</h4></div><div><input type=\"hidden\" ng-model=\"id\"><div class=\"modal-body\"><span>Are you sure you want to delete this Note?</span><br><br><span style=\"color:red;font-size: 0.95em;\">You will lose all the Notifications for this Note.</span></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-primary\" data-ng-click=\"deleteConfirmNotes(noteId,index)\">Yes</button> <button type=\"button\" class=\"btn btn-primary\" ng-click=\"closeDeleteNoteModal()\">No</button></div></div>');\n$templateCache.put('app/pages/notes/templates/edit_note.html','<form name=\"editNoteForm\" novalidate=\"\" ng-submit=\"saveNote(editNoteForm, selectedNote)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Edit Note</h4></div><alert ng-repeat=\"alert in alerts track by $index\" type=\"{{alert.type}}\" close=\"alerts.splice($index, 1)\" id=\"alertModel\"><div ng-bind=\"alert.message\"></div></alert><div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Recruiter Name</div><input type=\"text\" class=\"form-control\" placeholder=\"Recruiter Name\" ng-model=\"selectedNote.recruiter\" readonly=\"\"></div><div class=\"form-group\"><div class=\"control-label\">Agency Name</div><input type=\"text\" class=\"form-control\" placeholder=\"Agency Name\" ng-model=\"selectedNote.agency\" ng-required=\"true\" readonly=\"\"></div><div class=\"form-group\"><div class=\"control-label\">Notes</div><input type=\"textarea\" class=\"form-control\" placeholder=\"Notes\" ng-model=\"selectedNote.notes\" ng-required=\"true\"></div></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary btn-block\" ng-disabled=\"editNoteForm.$invalid\">Save Note</button></div></div></form>');\n$templateCache.put('app/pages/notes/templates/notes.html','<section id=\"account\" ng-controller=\"NotesCtrl\"><div class=\"row\"><div class=\"col-sm-8 col-sm-offset-2\" infinite-scroll=\"addMoreItems()\" infinite-scroll-disabled=\"busy || stopScroll\" infinite-scroll-distance=\"1\"><div ba-panel=\"\" ba-panel-title=\"{{note.agency}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\'text-right\\' style=\\'font-size:11px;font-weight: bold\\'>Last Updated on:&nbsp;&nbsp;&nbsp;{{note.createdDate}}</span>\" ba-panel-class=\"with-scroll\" ng-repeat=\"note in user.myNotes\"><div ng-style=\"checkNotesStyle(note)\"><div class=\"row\"><div class=\"col-sm-6\"><div class=\"form-group\"><label for=\"RecruiterName\"><span class=\"fa fa-fw fa-user-md\"></span> Recruiter Name</label> <strong><span ng-bind=\"note.recruiter\" class=\"form-control\" id=\"RecruiterName\"></span></strong></div></div><div class=\"col-sm-6\"><div class=\"form-group\"><label for=\"RecruiterEmail\"><span class=\"fa fa-fw fa-user-md\"></span> Recruiter Email</label> <strong><span ng-bind=\"note.toRecruiter\" class=\"form-control\" id=\"RecruiterEmail\"></span></strong></div></div></div></div><div class=\"row\"><div class=\"col-sm-12\"><div class=\"form-group\"><label for=\"notes\"><span class=\"fa fa-fw fa-sticky-note\"></span> Notes</label> <strong><input type=\"textarea\" class=\"form-control\" placeholder=\"Notes\" ng-model=\"note.notes\" ng-required=\"true\"></strong></div></div></div><div class=\"row\"><div class=\"col-sm-12\"><div class=\"form-group\"><button data-ng-click=\"deleteNotes(note.id, $index)\" class=\"btn btn-danger\">Delete</button> <button data-ng-click=\"updateNotesModel(note, $index)\" class=\"btn btn-primary\">Update</button><div ng-hide=\"checkUserRole()\"><textarea class=\"form-control\" placeholder=\"referGroup\" ng-model=\"referGroup\" ng-required=\"false\">\\n                                    </textarea><textarea class=\"form-control\" placeholder=\"referContent\" ng-model=\"referContent\" ng-required=\"false\">\\n                                    </textarea><button data-ng-click=\"referCandidates(note, referGroup, referContent, $index)\" class=\"btn btn-default\">Refer Candidates</button> <button data-ng-click=\"campaignCandidates(note, referGroup, referContent, $index)\" class=\"btn btn-default\">Campaign Candidates</button></div></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/notes/templates/update_note.html','<form name=\"editNoteForm\" novalidate=\"\" ng-submit=\"saveNote(editNoteForm, selectedNote)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Update Note - {{selectedNote.agency}}</h4></div><div><input type=\"hidden\" ng-model=\"id\"><div class=\"modal-body\"><span>Are you sure you want to update this Note?</span></div><input type=\"hidden\" value=\"selectedNote.notes\"><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary\">Yes</button> <button type=\"button\" class=\"btn btn-primary\" ng-click=\"closeModal()\">No</button></div></div></form>');\n$templateCache.put('app/pages/notes/templates/view_note.html','<style type=\"text/css\">\\n    /* Important part */\\n    .modal-dialog{\\n        overflow-y: initial !important\\n    }\\n    .modal-body{\\n        height: 700px;\\n        overflow-y: auto;\\n    }\\n</style><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeViewNoteModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Full Note Details</h4></div><div><div class=\"modal-body\"><div><div ng-bind-html=\"notesContent\"></div></div></div></div>');\n$templateCache.put('app/pages/notifications/templates/notifications.html','<section id=\"notifications\" ng-controller=\"NotificationsCtrl\"><div class=\"row\"><div class=\"col-md-12\"><div ba-panel=\"\" ba-panel-class=\"with-scroll\"><table class=\"table table-bordered table-hover table-condensed\" style=\"overflow: auto\"><tr><td><strong>Reference</strong></td><td><strong>Name</strong></td><td><strong>Event Type</strong></td><td><strong>Notifications Count</strong></td><td><strong>Last Tracked Time</strong></td><td><strong>Context</strong></td><td><strong>Actions</strong></td></tr><tr data-ng-repeat=\"notifications in user.myNotifications\"><td data-ng-bind=\"notifications.recruiter\"></td><td data-ng-bind=\"notifications.trackedResumeName\"></td><td data-ng-bind=\"notifications.eventType\"></td><td data-ng-bind=\"notifications.notificationsCount\"></td><td data-ng-bind=\"notifications.lastTrackedTime\"></td><td data-ng-bind=\"notifications.trackingContext\"></td><td><div class=\"buttons\"><button data-ng-click=\"viewFullNotifications(notifications.id, true, notifications.notificationsCount, false)\" class=\"btn btn-primary editable-table-button btn-xs\">Details</button></div></td></tr></table></div></div></div></section>');\n$templateCache.put('app/pages/notifications/templates/view_notifications.html','<div class=\"modal-content\"><div class=\"modal-header bg-info\"><i class=\"ion-information-circled modal-icon\"></i><span>View Notifications</span></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-info\" ng-click=\"closeModal()\">Go Back</button> <button ng-if=\"modalNotiCount > 5 && !isFullLoaded\" data-ng-click=\"viewFullNotifications(modalNotifications[0].id, false, 0, true)\" class=\"btn btn-info\">Full Details</button></div><div class=\"modal-body text-center\"><div class=\"horizontal-scroll\"><table class=\"table table-hover\"><thead><tr class=\"black-muted-bg\"><th>Reference</th><th>Name</th><th>Last Tracked Time</th><th>Actions</th></tr></thead><tbody><tr data-ng-repeat=\"notifications in modalNotifications\" class=\"no-top-border\" style=\"text-align: left\"><td data-ng-bind=\"notifications.recruiter\"></td><td data-ng-bind=\"notifications.trackedResumeName\"></td><td data-ng-bind=\"notifications.lastTrackedTime\"></td><td><div class=\"buttons\"><button data-ng-click=\"deleteNotification(notifications.id, $index)\" class=\"btn btn-danger editable-table-button btn-xs\">Delete</button></div></td></tr></tbody></table></div></div></div>');\n$templateCache.put('app/pages/payment/templates/payment.html','<section id=\"payment\" ng-controller=\"PaymentCtrl\"><div class=\"container full\" data-ng-init=\"getPaymentPlans()\"><div class=\"row form-group\"><div class=\"col-sm-12\"><h2 class=\"text-center\">Payment Plan</h2></div></div><div class=\"table-responsive\"><form class=\"form-horizontal\" role=\"form\"><div class=\"container\"><div class=\"row\"><br><div ng-repeat=\"payment in payments\" class=\"col-sm-3\" ng-if=\"payment.paymentType !=\\'Free\\'\"><div class=\"p+nel panel-default text-center\"><div class=\"panel-heading\"><strong ng-bind=\"payment.description\"></strong></div><ul class=\"list-group\"><li class=\"list-group-item\" ng-bind=\"\\' \\xA3\\' + payment.price\"></li><li class=\"list-group-item\" ng-bind=\"payment.ticksNo + \\' Ticks\\'\"></li><li class=\"list-group-item\"><button ng-click=\"executePayment(payment.ticksNo,payment.id,payment.description,payment.currency,payment.price)\" class=\"btn btn-primary\" type=\"submit\">Choose Plan!</button></li></ul></div></div></div><div class=\"row\"><br><br><div><strong>For enabling CV Tracking and CV Marketing Services please email us</strong><h3>info@mycvtracker.com</h3></div></div></div></form></div></div></section>');\n$templateCache.put('app/pages/payment/templates/paymentSuccess.html','<section id=\"payment\"><div data-ng-init=\"paymentSuccess()\"></div></section>');\n$templateCache.put('app/pages/referral/templates/building-smart-category-modal.html','<div id=\"categorizing-job-modal\"><div class=\"modal-header\"><h4 class=\"modal-title\">Building smart category</h4></div><div class=\"modal-body\"><div class=\"form-group row\"><label class=\"col-xs-12 col-md-3 col-form-label\">Category Name</label><div class=\"col-xs-12 col-md-9\"><input ng-disabled=\"buildingSmartForm.building\" ng-maxlength=\"100\" ng-model=\"buildingSmartForm.categoryName\" type=\"text\" class=\"form-control\" placeholder=\"Enter name of category\"></div></div><div class=\"form-group row\" ng-repeat=\"skill in buildingSmartForm.defaultSkills track by ::skill.id\"><label class=\"col-xs-7\"><div class=\"category-name\" ng-bind=\"::skill.name\"></div></label><div class=\"col-xs-3 col-form-label\" ng-bind=\"!!skill.rank ? (\\'Rank \\' + skill.rank) : \\'.\\'\">.</div><div class=\"col-xs-2 icon-col\"><div class=\"form-check\"><input ng-click=\"addToSmartCategory($index)\" ng-checked=\"!!skill.rank\" class=\"form-check-input\" type=\"checkbox\"></div></div></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"buildingSmartForm.building\" type=\"submit\" ng-click=\"applySmartCategory()\" class=\"btn btn-primary\">Apply</button> <button type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeBuildingModal(true)\">Cancel</button></div></div>');\n$templateCache.put('app/pages/referral/templates/categorizing-modal.html','<div id=\"categorizing-job-modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span> <span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Update job category</h4></div><div class=\"modal-body\"><div class=\"form-group row\" ng-repeat=\"category in jobCategorizingForm.categories track by category.categoryId\"><label class=\"col-xs-12 col-md-3 col-form-label\">Category {{ $index + 1 }}</label><div class=\"col-xs-12 col-md-7\"><div class=\"category-name\">{{ category.name }}</div></div><div class=\"col-xs-12 col-md-2 icon-col\"><i class=\"fas fa-trash text-danger\" ng-click=\"removeCategoryFromList($index)\"></i></div></div><div class=\"form-group row\"><label class=\"col-xs-12 col-md-3 col-form-label\">New Category</label><div class=\"col-xs-12 col-md-7\"><select class=\"form-control\" ng-disabled=\"jobCategorizingForm.smartBuilding || jobCategorizingForm.updating\" ng-model=\"jobCategorizingForm.newCategoryId\"><option value=\"\">Choose category to add</option><option ng-repeat=\"category in ::jobCategorizingForm.defaultCategories track by category.id\" ng-value=\"::category.id\">{{ ::category.name }}</option></select></div><div class=\"col-xs-12 col-md-2 icon-col\"><i class=\"fas fa-plus-square text-primary\" ng-click=\"addCategoryToList()\"></i></div></div></div><div class=\"modal-footer clearfix\"><div class=\"note\">Smart categories ... laoreet fringilla elit imperdiet id. Sed non volutpat urna. Nam a consectetur diam. Mauris vitae lorem in nibh suscipit ultrices vitae ut nulla.</div><button ng-disabled=\"jobCategorizingForm.smartBuilding || jobCategorizingForm.updating\" type=\"submit\" ng-click=\"buildSmartCategories()\" class=\"btn btn-danger\">{{ jobCategorizingForm.smartBuilding ? \"Building Smart Category...\" : \"Build Smart Category\" }}</button> <button ng-disabled=\"jobCategorizingForm.smartBuilding || jobCategorizingForm.updating\" type=\"submit\" ng-click=\"categorizeJob()\" class=\"btn btn-primary\">{{ jobCategorizingForm.updating ? \"Updating...\" : \"Update\" }}</button> <button type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Cancel</button></div></div>');\n$templateCache.put('app/pages/referral/templates/delete-referral-confirm.html','<div class=\"modal-header\"><h4 class=\"modal-title\">Delete referral</h4></div><div><div class=\"modal-body\"><div><br><div>Would you like to continue deleting this referral?</div><br></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"inDeletingReferral\" type=\"button\" class=\"btn btn-danger\" ng-click=\"deleteReferral()\">Continue</button> <button ng-disabled=\"inDeletingReferral\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Close</button></div></div>');\n$templateCache.put('app/pages/referral/templates/matching-folder-resume.html','<div id=\"scanning-folder-modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span> <span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Matching Resumes</h4></div><div class=\"modal-body\"><div style=\"margin: 15px 0\" ng-repeat=\"aResume in scanFolderModalForm.resumes track by $index\"><div class=\"matching-resume\"><div class=\"detail\"><div class=\"name\">{{ $index + 1 }}. {{ aResume.name }} ({{ aResume.ownerEmail }})</div><div class=\"skills\">Found Skills: <span ng-repeat=\"skill in aResume.skills\">{{ skill }}{{ !$last ? \", \" : \"\" }}</span></div><div class=\"skills\">Found Details: {{ aResume.resumeEmail }}. {{ aResume.resumePhoneNumber }}</div></div><div class=\"ctrl\"><a ng-href=\"{{ getScanDownloadLink(aResume.name) }}\" target=\"_blank\"><i class=\"fas fa-cloud-download-alt\"></i></a> <a ng-href=\"{{ getScanPreviewLink(aResume.name) }}\" target=\"_blank\"><i class=\"fas fa-search\"></i></a></div></div></div><div ng-if=\"scanFolderModalForm.loaded && scanFolderModalForm.resumes.length === 0\"><br><br><div class=\"text-secondary\">No Matching Found</div><br><br></div></div></div>');\n$templateCache.put('app/pages/referral/templates/new_referral_link.html','<form id=\"new-referral-form\" name=\"newReferralLinkForm\" ng-submit=\"generateLink()\" novalidate=\"\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span> <span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\" ng-if=\"!newReferralForm.editing\">Generate Referral Link</h4><h4 class=\"modal-title\" ng-if=\"newReferralForm.editing\">Edit Referral Link</h4></div><div><div class=\"modal-body\"><div class=\"form-group\"><label class=\"control-label\">Referral Type</label><select ng-disabled=\"newReferralForm.editing\" ng-model=\"newReferralForm.type\" ng-change=\"newReferralTypeChanged()\" class=\"form-control\"><option ng-value=\"REFERRAL_TYPE.JOB_SPEC\">Job</option><option ng-value=\"REFERRAL_TYPE.TEXT_LINK\" ng-if=\"referral.isAdmin\">Text Link</option><option ng-value=\"REFERRAL_TYPE.SOCIAL_SHARE\" ng-if=\"referral.isAdmin\">Social</option><option ng-value=\"REFERRAL_TYPE.CV_BOX\">Cv Box</option></select></div><div class=\"form-group\"><label class=\"control-label\">Title</label> <input type=\"text\" class=\"form-control\" placeholder=\"Enter title\" name=\"title\" ng-model=\"newReferralForm.title\" ng-required=\"true\"></div><div class=\"form-group\" ng-if=\"newReferralForm.type === REFERRAL_TYPE.JOB_SPEC\"><label class=\"control-label\">Email</label> <input ng-disabled=\"newReferralForm.editing\" type=\"text\" class=\"form-control\" placeholder=\"Enter email\" name=\"email\" ng-model=\"newReferralForm.email\" ng-required=\"true\"></div><div class=\"form-group\" ng-if=\"newReferralForm.type === REFERRAL_TYPE.JOB_SPEC\"><label class=\"control-label\">Job type</label> <input type=\"text\" class=\"form-control\" placeholder=\"Fulltime, partime, remote, ...\" ng-model=\"newReferralForm.jobType\" name=\"jobType\" ng-required=\"true\"></div><div class=\"form-group\" ng-if=\"newReferralForm.type === REFERRAL_TYPE.JOB_SPEC\"><label class=\"control-label\">Location</label> <input type=\"text\" class=\"form-control\" placeholder=\"Enter location\" ng-model=\"newReferralForm.location\" name=\"location\" ng-required=\"true\"></div><div class=\"form-group\"><label class=\"control-label\">Description</label><ng-ckeditor ng-model=\"newReferralForm.description\" remove-plugins=\"iframe,flash,smiley\"></ng-ckeditor></div><div class=\"form-group\" ng-if=\"newReferralForm.type !== REFERRAL_TYPE.CV_BOX\"><div class=\"form-check form-check-inline\"><input ng-model=\"newReferralForm.previewType\" class=\"form-check-input\" type=\"radio\" name=\"previewType\" ng-value=\"PREVIEW_TYPE.WEB_PAGE_URL\"> <label class=\"form-check-label\">Profile webpage</label></div><div class=\"form-check form-check-inline\"><input ng-model=\"newReferralForm.previewType\" class=\"form-check-input\" type=\"radio\" name=\"previewType\" ng-value=\"PREVIEW_TYPE.FILE\"> <label class=\"form-check-label\">Profile file</label></div><div class=\"form-check form-check-inline\"><input ng-model=\"newReferralForm.previewType\" class=\"form-check-input\" type=\"radio\" name=\"previewType\" ng-value=\"PREVIEW_TYPE.NONE\"> <label class=\"form-check-label\">No profile</label></div></div><div class=\"form-group\" ng-if=\"newReferralForm.previewType === PREVIEW_TYPE.WEB_PAGE_URL\"><label class=\"control-label\">Enter link</label> <input ng-required=\"true\" type=\"text\" class=\"form-control\" ng-maxlength=\"250\" name=\"previewLink\" placeholder=\"Enter link\" ng-model=\"newReferralForm.previewLink\"><div class=\"text-danger error-row\" ng-if=\"newReferralForm.previewLinkInvalid\">Link is invalid</div></div><div class=\"form-group\" ng-if=\"newReferralForm.previewType === PREVIEW_TYPE.FILE\"><label class=\"control-label\">Select your file</label> <input type=\"file\" class=\"form-control\" placeholder=\"Upload file\" preview-file-model=\"newReferralForm.previewFile\" accept=\".pdf,.jpg,.png\" id=\"fileUpload\"><div class=\"text-danger error-row\" ng-if=\"newReferralForm.previewFileInvalidSize\">File size must be less than 5mb</div><div class=\"text-danger error-row\" ng-if=\"newReferralForm.previewFileInvalidType\">File is required and allow only pdf, jpeg, png.</div></div><div ng-if=\"newReferralForm.type !== REFERRAL_TYPE.TEXT_LINK && newReferralForm.type !== REFERRAL_TYPE.CV_BOX\" class=\"row\"><div class=\"form-group col-xs-6\"><input type=\"checkbox\" ng-model=\"newReferralForm.bountyEnable\"> <label class=\"form-check-label\">Bounty enabled</label></div><div class=\"form-group col-xs-6\" ng-if=\"newReferralForm.type === REFERRAL_TYPE.JOB_SPEC\"><input type=\"checkbox\" ng-model=\"newReferralForm.refPublic\"> <label class=\"form-check-label\">Listing published</label></div></div></div><div class=\"modal-footer clearfix\" ng-if=\"!newReferralForm.isChildRef\"><button type=\"submit\" class=\"btn btn-primary btn-block\" ng-disabled=\"newReferralLinkForm.$invalid || newReferralForm.generating\"><span ng-if=\"!newReferralForm.generating\">{{ !newReferralForm.editing ? \"Generate\" : \"Edit\" }}</span> <span ng-if=\"newReferralForm.generating\">{{ !newReferralForm.editing ? \"Generating\" : \"Editing\" }}</span></button></div></div></form>');\n$templateCache.put('app/pages/referral/templates/referral-description.html','<div><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span> <span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Referral Description</h4></div><div><div class=\"modal-body\"><div ng-if=\"!!referral.selectedTargetEmail\">Email: {{ referral.selectedTargetEmail }}</div><br><div><ng-ckeditor ng-model=\"referral.selectedDescription\" ng-config=\"referral.descriptionConfig\" ng-disabled=\"true\"></ng-ckeditor></div></div></div></div>');\n$templateCache.put('app/pages/referral/templates/referral-links.html','<section id=\"referral\" ng-controller=\"ReferralCtrl\"><div class=\"body-section setting-section\"><h4 class=\"section-name\">List of referrals</h4><div class=\"section-content\"><div class=\"card referral-setting-card\" ng-if=\"!!referral.isManagement\"><div class=\"card-body\"><p class=\"link-explanation\">This section generates referral links for our portal users. At present it can generate job referral ,social and plain text links.</p><div><div class=\"setting-btn\"><button type=\"button\" class=\"btn btn-danger\" ng-click=\"openNewReferralLinkModal()\">Generate Link</button></div></div></div></div><div class=\"referral-link-list\"><div class=\"row\"><div class=\"col-12 col-md-6\" ng-repeat=\"referral in referral.links track by referral.id\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text referral-link-panel\"><div class=\"d-flex\"><div class=\"info-col flex-fill\"><div class=\"context-name\"><span ng-if=\"referral.referralTargetSubject.length\">{{referral.referralTargetSubject}}</span> <span ng-if=\"!referral.referralTargetSubject.length\">-</span></div><div class=\"referral-type\" ng-if=\"referral.referralType === REFERRAL_TYPE.TEXT_LINK\">Text</div><div class=\"referral-type\" ng-if=\"referral.referralType === REFERRAL_TYPE.JOB_SPEC\">Job Spec</div><div class=\"referral-type\" ng-if=\"referral.referralType === REFERRAL_TYPE.SOCIAL_SHARE\">Social Share</div><div class=\"referral-type\" ng-if=\"referral.referralType === REFERRAL_TYPE.CV_BOX\">Cv Box</div></div><div class=\"ref-stt\" ng-if=\"!!referral.parentReferralId\"><div class=\"badge badge-warning\">Child Ref</div></div></div><br><div class=\"link\"><a ng-href=\"{{ getReferralLink(referral) }}\" target=\"_blank\">{{ getReferralLink(referral) }}</a></div><div class=\"list-status\"><div class=\"ref-status\" ng-if=\"referral.referralType !== REFERRAL_TYPE.TEXT_LINK && referral.referralType !== REFERRAL_TYPE.CV_BOX\"><span ng-class=\"[\\'status-color\\', referral.bountyEnable ? \\'enabled\\' : \\'\\' ]\"></span> <span style=\"vertical-align: middle\">{{ referral.bountyEnable ? \"Bounty enabled\" : \"Bounty disabled\" }}</span></div><div class=\"ref-status\"><span ng-class=\"[\\'status-color\\', (referral.refPublic || referral.referralType !== REFERRAL_TYPE.JOB_SPEC) ? \\'enabled\\' : \\'\\' ]\"></span> <span style=\"vertical-align: middle\">{{ (referral.refPublic || referral.referralType !== REFERRAL_TYPE.JOB_SPEC) ? \"Published\" : \"Not published\" }}</span></div></div><br><div class=\"ctrls\"><div class=\"ctrls-container d-flex align-items-center\"><a ng-if=\"!referral.parentReferralId\" ng-click=\"openNewReferralLinkModal(referral)\" title=\"Edit referral\"><i class=\"fas fa-edit\"></i></a> <a href=\"#\" title=\"Copy\" ng-click=\"copyLink(referral)\"><i class=\"fas fa-copy\"></i></a> <a class=\"trash-ctrl\" href=\"#\" title=\"Delete\" ng-click=\"openDeleteReferralLinkModal(referral.referralLink, $index)\"><i class=\"fas fa-trash\"></i></a></div></div><div class=\"menu-ctrl\"><div class=\"btn-group\"><button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-bars\"></i></button><div class=\"dropdown-menu dropdown-menu-right\"><a ng-href=\"{{getResumesLink(referral.referralType, referral.referralLink, referral.parentReferralId)}}\" class=\"dropdown-item\" href=\"#\">{{ referral.referralType !== REFERRAL_TYPE.SOCIAL_SHARE ? \"Referred resumes\" : \"Applications\" }}</a> <a ng-if=\"referral.referralType === REFERRAL_TYPE.JOB_SPEC\" ng-href=\"{{getResumesLink(referral.referralType, referral.referralLink, referral.parentReferralId) + \\'&type=matching\\'}}\" class=\"dropdown-item\" href=\"#\">Matching resumes</a> <a ng-click=\"scanResumeFolder(referral.id)\" ng-if=\"referral.referralType === REFERRAL_TYPE.JOB_SPEC && scanUserId > 0\" class=\"dropdown-item\" href=\"#\">Scanning folder</a> <a ng-click=\"scanResumeMultipleFolder(referral.id)\" ng-if=\"referral.referralType === REFERRAL_TYPE.JOB_SPEC && scanUserId > 0 && !isRecruiter\" class=\"dropdown-item\" href=\"#\">Scanning Multiple Bulk folder</a> <a ng-click=\"openUpdateSkillModal(referral.id, referral.referralLink)\" ng-if=\"referral.referralType === REFERRAL_TYPE.JOB_SPEC\" class=\"dropdown-item\" href=\"#\">Categorize Skill</a></div></div></div></div></div></div><div class=\"row\" ng-if=\"!referral.listing && referral.hasNext\"><div class=\"col-12\"><div class=\"text-center\"><button ng-click=\"loadNextPage()\" class=\"btn btn-primary\">Load More</button></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/referral/templates/share-referral-link.html','<div class=\"modal-header\"><h4 class=\"modal-title\">Share Referral Link</h4></div><div><div class=\"modal-body\"><h5 class=\"text-info\" ng-if=\"referral.shareReferral.generating\"><br>Generating referral link...<br></h5><div ng-if=\"referral.shareReferral.refCode.length > 0\"><br><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas in aliquam justo.</div><br><a href=\"#\" ng-bind=\"getRefLink(referral.shareReferral.referralType, referral.shareReferral.refCode, referral.shareReferral.referralTargetSubject)\"></a><br><br></div></div><div ng-if=\"referral.shareReferral.refCode.length > 0\" class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Close</button></div></div>');\n$templateCache.put('app/pages/referred-resumes/templates/index.html','<section id=\"referral\" ng-controller=\"ReferredResumesCtrl\"><div class=\"body-section list-resumes-section\"><div class=\"section-content\"><div class=\"row\"><div class=\"col-xs-12\" ng-if=\"referredResumes.detail.referralType !== \\'TEXT_LINK\\'\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text spec-detail-panel\"><h4>{{ referredResumes.detail.referralTargetSubject }}</h4><div class=\"target-email\">Target email: {{ referredResumes.detail.referralTargetEmail }}</div></div></div><div ng-if=\"!referredResumes.matchingType\" ng-repeat=\"aResume in referredResumes.list track by aResume.id\" class=\"col-xs-12 col-md-3\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel\"><div class=\"tile-title\"><h3 class=\"resume-title\" ng-bind=\"aResume.resumeTitle\"></h3><hr class=\"resumeSeprator\"><div class=\"tile-filename\"><span class=\"badge badge-warning\" ng-if=\"aResume.resumeStatus === JOB_STATUS.APPLIED_JOB\">Job Applied</span> <span class=\"badge badge-warning\" ng-if=\"aResume.resumeStatus === JOB_STATUS.SELECTED_FOR_INTERVIEW\">Selected for interview</span> <span class=\"badge badge-danger\" ng-if=\"aResume.resumeStatus === JOB_STATUS.REJECTED_FOR_INTERVIEW\">Rejected for interview</span> <span class=\"badge badge-danger\" ng-if=\"aResume.resumeStatus === JOB_STATUS.REJECTED_FOR_JOB\">Rejected for job</span> <span class=\"badge badge-success\" ng-if=\"aResume.resumeStatus === JOB_STATUS.SELECTED_FOR_JOB\">Selected for job</span> <span ng-if=\"aResume.sharedWith === SHARED_LEVEL.PARENT\" class=\"badge badge-info\">Shared To Parent</span> <span ng-if=\"aResume.sharedWith === SHARED_LEVEL.JOB_POSTER\" class=\"badge badge-info\">Shared To Poster</span></div><div class=\"user-email\">Owner: {{ aResume.ownerEmail }}</div><div class=\"tile-datetime\" ng-bind=\"formatDateTime(aResume.uploadedAt)\"></div><div class=\"controls\"><a href=\"#\" title=\"Download\" ng-click=\"downloadMyResume(aResume.id)\"><i class=\"fa fa-download\"></i></a> <a href=\"#\" title=\"Preview\" ng-click=\"openPreviewResume(aResume.id, aResume.fileType)\"><i class=\"fas fa-search\"></i></a> <a ng-if=\"referredResumes.detail.referralType === \\'JOB_SPEC\\' && ableToShare(aResume.sharedWith)\" href=\"#\" ng-attr-title=\\'{{ isShareToTarget(aResume.sharedWith) ? \"Share to target\" : \"Share to parent\"}}\\' ng-click=\"openShareResumeModal(aResume)\"><i class=\"fas fa-external-link-square-alt\"></i></a> <a ng-if=\"ableToUpdate(aResume.sharedWith, aResume.resumeStatus)\" href=\"#\" title=\"Update Status\" ng-click=\"openStatusModal(aResume)\"><i class=\"fas fa-edit\"></i></a></div></div></div></div><div ng-if=\"referredResumes.matchingType\" ng-repeat=\"aMatchingResume in referredResumes.list track by aMatchingResume.id\" ng-init=\"aResume = aMatchingResume.resumeDetail\" class=\"col-xs-12 col-md-3\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel\"><div class=\"tile-title\"><h3 class=\"resume-title\" ng-bind=\"aResume.resumeTitle ? aResume.resumeTitle : \\'-\\'\"></h3><hr class=\"resumeSeprator\"><div class=\"user-email\">Owner: {{ aResume.ownerEmail }}</div><div class=\"matching-percent\"><a href=\"#\" ng-click=\"openMatchingSkillModal(aMatchingResume.id)\">Matching {{ getMatchPercentage(aMatchingResume.noOfMatching, aResume.noOfSkills) }}% skills</a></div><div class=\"tile-datetime\" ng-bind=\"formatDateTime(aResume.uploadedAt)\"></div><div class=\"controls\"><a href=\"#\" title=\"Download\" ng-click=\"downloadMyResume(aResume.id)\"><i class=\"fa fa-download\"></i></a> <a href=\"#\" title=\"Preview\" ng-click=\"openPreviewResume(aResume.id, aResume.fileType)\"><i class=\"fas fa-search\"></i></a> <a ng-if=\"referredResumes.detail.referralType === \\'JOB_SPEC\\' && ableToShare(aResume.sharedWith)\" href=\"#\" ng-attr-title=\\'{{ isShareToTarget(aResume.sharedWith) ? \"Share to target\" : \"Share to parent\"}}\\' ng-click=\"openShareResumeModal(aResume)\"><i class=\"fas fa-external-link-square-alt\"></i></a> <a ng-if=\"ableToUpdate(aResume.sharedWith, aResume.resumeStatus)\" href=\"#\" title=\"Update Status\" ng-click=\"openStatusModal(aResume)\"><i class=\"fas fa-edit\"></i></a></div></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/referred-resumes/templates/list-matching-skills-modal.html','<div id=\"categorizing-job-modal\"><div class=\"modal-header\"><h4 class=\"modal-title\">Matching skills</h4></div><div class=\"modal-body\"><div class=\"form-group row\" ng-repeat=\"skill in matchingModal.skills track by ::skill.id\"><div class=\"col-xs-12 col-md-3 col-form-label\">Skill {{ $index + 1 }}</div><div class=\"col-xs-12 col-md-7\"><div class=\"category-name\">{{ ::skill.name }}</div></div></div></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Cancel</button></div></div>');\n$templateCache.put('app/pages/referred-resumes/templates/share-resumes-modal.html','<div class=\"modal-header\"><h4 class=\"modal-title\" ng-if=\"!referredResumes.sharingSuccess\" ng-bind=\"isShareToTarget(referredResumes.shareResume.sharedWith) ? \\'Share Resumes To Target\\' : \\'Share Resumes To Parent\\'\"></h4><h4 class=\"modal-title\" ng-if=\"referredResumes.sharingSuccess\">Success</h4></div><div class=\"modal-body\"><h5 ng-if=\"!referredResumes.sharingSuccess\" ng-bind=\"isShareToTarget(referredResumes.shareResume.sharedWith) ? \\'Would you like to continue sharing this resumes to target?\\' : \\'Would you like to continue sharing this resumes to parent?\\'\"></h5><h5 class=\"text-success\" ng-if=\"referredResumes.sharingSuccess\">Referred resume has been shared successfully!</h5></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"referredResumes.sharing\" ng-if=\"!referredResumes.sharingSuccess\" ng-click=\"!referredResumes.sharing && shareReferredResumes()\" type=\"button\" class=\"btn btn-primary\" ng-bind=\"referredResumes.sharing ? \\'Sharing...\\' : \\'Share\\'\"></button> <button ng-if=\"!referredResumes.sharingSuccess\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"!referredResumes.sharing && closeModal()\">Cancel</button> <button ng-if=\"referredResumes.sharingSuccess\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Okay</button></div>');\n$templateCache.put('app/pages/referred-resumes/templates/update-resume-interview.html','<div class=\"modal-header\"><h4 class=\"modal-title\">Interview status</h4></div><div class=\"modal-body\"><h5>Would you like to select the resume for interview?</h5><br><div class=\"form-group\"><div class=\"form-check\"><input ng-model=\"referredResumes.updateSttInput\" class=\"form-check-input\" type=\"radio\" value=\"select\"> <label class=\"form-check-label\">Select</label></div><div class=\"form-check\"><input ng-model=\"referredResumes.updateSttInput\" class=\"form-check-input\" type=\"radio\" value=\"reject\"> <label class=\"form-check-label\">Reject</label></div></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"referredResumes.sharing\" ng-if=\"!referredResumes.sharingSuccess\" ng-click=\"!referredResumes.sharing && updateInterviewStt()\" type=\"button\" class=\"btn btn-primary\" ng-bind=\"referredResumes.sharing ? \\'Updating...\\' : \\'Confirm\\'\"></button> <button ng-if=\"!referredResumes.sharingSuccess\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"!referredResumes.sharing && closeModal()\">Cancel</button></div>');\n$templateCache.put('app/pages/referred-resumes/templates/update-resume-job.html','<div class=\"modal-header\"><h4 class=\"modal-title\">Job status</h4></div><div class=\"modal-body\"><h5>Would you like to select the resume for job?</h5><br><div class=\"form-group\"><div class=\"form-check\"><input ng-model=\"referredResumes.updateSttInput\" class=\"form-check-input\" type=\"radio\" value=\"select\"> <label class=\"form-check-label\">Select</label></div><div class=\"form-check\"><input ng-model=\"referredResumes.updateSttInput\" class=\"form-check-input\" type=\"radio\" value=\"reject\"> <label class=\"form-check-label\">Reject</label></div></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"referredResumes.sharing\" ng-if=\"!referredResumes.sharingSuccess\" ng-click=\"!referredResumes.sharing && updateJobStt()\" type=\"button\" class=\"btn btn-primary\" ng-bind=\"referredResumes.sharing ? \\'Updating...\\' : \\'Confirm\\'\"></button> <button ng-if=\"!referredResumes.sharingSuccess\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"!referredResumes.sharing && closeModal()\">Cancel</button></div>');\n$templateCache.put('app/pages/questions/templates/addQuestion.html','<section id=\"question-add-page\" ng-controller=\"QuestionListingCtrl\"><div class=\"body-section\"><div class=\"section-content\"><div class=\"row\"><div class=\"col-sm-6\"><div class=\"form-group\"><label>question</label> <textarea rows=\"3\" ng-model=\"aQuestion.question\" class=\"form-control\" id=\"aQuestion\"></textarea> <label>option1</label> <textarea ng-model=\"aQuestion.option1\" class=\"form-control\" id=\"option1\"></textarea> <label>option2</label> <textarea ng-model=\"aQuestion.option2\" class=\"form-control\" id=\"option2\"></textarea> <label>option3</label> <textarea ng-model=\"aQuestion.option3\" class=\"form-control\" id=\"option3\"></textarea> <label>option4</label> <textarea ng-model=\"aQuestion.option4\" class=\"form-control\" id=\"option4\"></textarea> <label>correct</label> <textarea ng-model=\"aQuestion.correct\" class=\"form-control\" id=\"correct\"></textarea> <label>questionType</label> <input ng-model=\"aQuestion.questionType\" class=\"form-control\" id=\"questionType\"> <button id=\"addNewQuestion\" class=\"btn btn-primary\" data-ng-click=\"addQuestion(aQuestion)\">Add Question</button></div></div></div></div></div></section>');\n$templateCache.put('app/pages/questions/templates/assignInterview.html','<section id=\"question-add-page\" ng-controller=\"QuestionListingCtrl\"><div class=\"body-section\"><div class=\"section-content\"><div class=\"row\"><div class=\"col-sm-6\"><div class=\"form-group\"><label>Get Interview Results</label><br><label>Candidate Email</label> <textarea rows=\"8\" ng-model=\"candidateDetails.candidate\" class=\"form-control\" id=\"candidate\"></textarea> <label>Token</label> <textarea rows=\"8\" ng-model=\"candidateDetails.token\" class=\"form-control\" id=\"token\"></textarea> <label>Candidate Name</label> <textarea rows=\"8\" ng-model=\"candidateDetails.candidateName\" class=\"form-control\" id=\"candidateName1\"></textarea> <label>Job Link</label> <textarea rows=\"8\" ng-model=\"candidateDetails.jobLink\" class=\"form-control\" id=\"jobLink1\"></textarea><br><br><button id=\"getResults\" class=\"btn btn-primary\" data-ng-click=\"getResults(candidateDetails)\">Get Results</button></div></div></div><div class=\"row\"><div class=\"col-sm-6\"><div class=\"form-group\"><label>Invite Message</label> <textarea rows=\"8\" ng-model=\"interviewRequest.invite\" class=\"form-control\" id=\"invite\"></textarea> <label>Candidate Name</label> <textarea ng-model=\"interviewRequest.candidateName\" class=\"form-control\" id=\"candidateName\"></textarea> <label>Interview Owners</label> <textarea ng-model=\"interviewRequest.resultOwners\" class=\"form-control\" id=\"resultOwners\"></textarea> <label>Candidate Email</label> <textarea ng-model=\"interviewRequest.candidateEmail\" class=\"form-control\" id=\"candidateEmail\"></textarea> <label>Interview Type</label> <textarea ng-model=\"interviewRequest.interviewType\" class=\"form-control\" id=\"interviewType\"></textarea> <label>No Of Questions</label> <textarea ng-model=\"interviewRequest.noOfQuestions\" class=\"form-control\" id=\"noOfQuestions\"></textarea> <label>Job Link</label> <textarea ng-model=\"interviewRequest.jobLink\" class=\"form-control\" id=\"jobLink\"></textarea><br><br><input type=\"file\" class=\"form-control\" placeholder=\"Candidate Data\" file-model=\"myFile\" accept=\".text,.csv\" id=\"fileUpload\"><br><br><button id=\"assignInterview\" class=\"btn btn-primary\" data-ng-click=\"assignInterview(myFile,interviewRequest)\">Assign Interview</button><br><br><button id=\"sendReminders\" class=\"btn btn-primary\" data-ng-click=\"sendReminders(myFile,interviewRequest)\">Send Reminders</button></div></div></div></div></div></section>');\n$templateCache.put('app/pages/questions/templates/index.html','<section id=\"question-listing-page\" ng-controller=\"QuestionListingCtrl\"><div class=\"body-section\"><div class=\"section-content\"><div class=\"section-title\"><h3>Questions</h3></div><button id=\"addQuestions\" class=\"btn btn-primary\" ng-href=\"/question-add\">Add Questions</button><br><br><input id=\"interviewType\" ng-model=\"interviewType\"> <button id=\"searchQuestions\" class=\"btn btn-primary\" data-ng-click=\"loadQuestions()\">SearchQuestions</button><div class=\"questions-list-result\"><div class=\"row\"><div ng-repeat=\"aQuestion in questions track by aQuestion.id\" class=\"col-xs-12 col-md-6\"><div class=\"col-sm-6\"><div class=\"form-group\"><label>question</label> <textarea rows=\"3\" ng-model=\"aQuestion.question\" class=\"form-control\" id=\"aQuestion\"></textarea> <label>option1</label> <textarea ng-model=\"aQuestion.option1\" class=\"form-control\" id=\"option1\"></textarea> <label>option2</label> <textarea ng-model=\"aQuestion.option2\" class=\"form-control\" id=\"option2\"></textarea> <label>option3</label> <textarea ng-model=\"aQuestion.option3\" class=\"form-control\" id=\"option3\"></textarea> <label>option4</label> <textarea ng-model=\"aQuestion.option4\" class=\"form-control\" id=\"option4\"></textarea> <label>correct</label> <textarea ng-model=\"aQuestion.correct\" class=\"form-control\" id=\"correct\"></textarea> <label>questionType</label> <input ng-model=\"aQuestion.questionType\" class=\"form-control\" id=\"questionType\"> <button id=\"editQuestions\" class=\"btn btn-primary\" data-ng-click=\"editQuestions(aQuestion)\">Edit Question</button> <button id=\"deleteQuestions\" class=\"btn btn-primary\" data-ng-click=\"deleteQuestions(aQuestion)\">Delete Question</button></div></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/resumes/templates/authentication_advice_modal.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\" ng-click=\"closeModal()\">&times;</span> <span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Authentication</h4></div><div><div class=\"modal-body\">Your account has not been authenticated with gmail account to use this feature.<br><br>Please download <a href=\"https://mycvtracker.com/assets/mycvtracker-extension.zip\" target=\"_blank\">this extension</a> and associate your account with a gmail account.</div></div>');\n$templateCache.put('app/pages/resumes/templates/delete_resume.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Delete Resume</h4></div><div><input type=\"hidden\" ng-model=\"id\"><div class=\"modal-body\"><span>Are you sure you want to delete this Resume?</span></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-primary\" ng-click=\"deleteResume()\">Yes</button> <button type=\"button\" class=\"btn btn-primary\" ng-click=\"closeModal()\">No</button></div></div>');\n$templateCache.put('app/pages/resumes/templates/edit-link.html','<form name=\"editLinkSubmitForm\" novalidate=\"\" ng-submit=\"checkPreviewId()\"><div class=\"modal-header\"><h4 class=\"modal-title\">Edit preview link</h4></div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Short Preview Id</div><input type=\"text\" class=\"form-control\" ng-change=\"editLinkForm.inUse = false\" ng-disabled=\"editLinkForm.editing\" ng-pattern=\"\\'^[a-zA-Z0-9_-]+$\\'\" ng-model=\"editLinkForm.linkId\" ng-required=\"true\" maxlength=\"250\"><div class=\"text-secondary mt-1\" style=\"color: #9099ad; margin-top: 10px; font-family: \\'museo_slab500\\';\">Note: Link contains only characters, number and underscore, hyphen.</div></div><div class=\"text-danger\" ng-if=\"editLinkForm.inUse\">This link id is already in use.</div></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary\" ng-disabled=\"editLinkSubmitForm.$invalid || editLinkForm.editing\">{{ editLinkForm.editing ? \"Editing\" : \"Edit\" }}</button> <button type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Cancel</button></div></form>');\n$templateCache.put('app/pages/resumes/templates/edit_resume.html','<form name=\"resumeForm\" novalidate=\"\" ng-submit=\"saveResume()\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Edit Resume</h4></div><alert ng-repeat=\"alert in alerts track by $index\" type=\"{{alert.type}}\" close=\"alerts.splice($index, 1)\" id=\"alertModel\"><div ng-bind=\"alert.message\" class=\"file-upload-error\"></div></alert><div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Resume Reference</div><input type=\"text\" class=\"form-control\" placeholder=\"Resume Reference you can use your skills - Developer , Architect or Project Manager etc\" ng-model=\"resumeTitle\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Upload Resume File <span class=\"file-size\">(Max. file size upto 500KB)</span></div><input type=\"file\" class=\"form-control\" required=\"\" placeholder=\"Resume File\" file-model=\"myFile\" accept=\".doc,.pdf,.docx\" id=\"fileUpload\"></div><span>Last file uploaded : {{resumeName}}</span></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary btn-block\" ng-disabled=\"resumeForm.$invalid\">Save Resume</button></div></div></form>');\n$templateCache.put('app/pages/resumes/templates/new_resume.html','<form name=\"resumeForm\" novalidate=\"\" ng-submit=\"saveResume()\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"!formProcessing && closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Add New Resume</h4></div><alert ng-repeat=\"alert in alerts track by $index\" type=\"{{alert.type}}\" close=\"alerts.splice($index, 1)\" id=\"alertModel\"><div ng-bind=\"alert.message\" class=\"file-upload-error\"></div></alert><div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Resume Reference</div><input type=\"text\" class=\"form-control\" placeholder=\"Resume Reference you can use your skills - Developer , Architect or Project Manager etc\" ng-model=\"resumeTitle\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Resume File - You can upload upto 8 Resumes<span class=\"file-size\">(Max. file size upto 500KB)</span></div><input type=\"file\" class=\"form-control\" placeholder=\"Resume File\" file-model=\"myFile\" accept=\".doc,.pdf,.docx\" id=\"fileUpload\"></div></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary btn-block\" ng-disabled=\"resumeForm.$invalid || !!formProcessing\">{{ !formProcessing ? \"Save Resume\" : \"Saving...\" }}</button></div></div></form>');\n$templateCache.put('app/pages/resumes/templates/push_resume_modal.html','<form name=\"pushToDriveForm\" novalidate=\"\" ng-submit=\"pushToDrive()\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\" ng-click=\"closeModal()\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Push To Drive</h4></div><div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Resume File</div><span class=\"control-value\" ng-bind=\"selectedResumeName\"></span></div><div class=\"form-group\"><div class=\"control-label\">Recruiter Name</div><input type=\"text\" class=\"form-control\" ng-model=\"recruiterName\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Recruiter Email</div><input type=\"text\" class=\"form-control\" ng-model=\"recruiterEmail\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Agency Name</div><input type=\"text\" class=\"form-control\" ng-model=\"agencyName\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Notes</div><input type=\"text\" class=\"form-control\" ng-model=\"formNotes\"></div></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary btn-block\" ng-disabled=\"resumeForm.$invalid\">Push Resume</button></div></div></form>');\n$templateCache.put('app/pages/resumes/templates/quick_upload_resume.html','<form name=\"resumeForm\" novalidate=\"\" ng-submit=\"saveResume()\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\">Upload Quick Resume</h4></div><alert ng-repeat=\"alert in alerts track by $index\" type=\"{{alert.type}}\" close=\"alerts.splice($index, 1)\" id=\"alertModel\"><div ng-bind=\"alert.message\"></div></alert><div><div class=\"modal-body\"><div class=\"form-group\"><div class=\"control-label\">Resume Reference</div><input type=\"text\" class=\"form-control\" placeholder=\"Resume Reference you can use your skills - Developer , Architect or Project Manager etc\" ng-model=\"resumeTitle\" ng-required=\"true\"></div><div class=\"form-group\"><div class=\"control-label\">Please note this resume will not be available from Resume Management. Please refresh your screen to get this resume in the list after uploading the resume.<br></div><input type=\"file\" class=\"form-control\" placeholder=\"Resume File\" file-model=\"myFile\" accept=\".doc,.pdf,.docx\" id=\"fileUpload\"></div></div><div class=\"modal-footer clearfix\"><button type=\"submit\" class=\"btn btn-primary btn-block\" ng-disabled=\"resumeForm.$invalid\">Save Resume</button></div></div></form>');\n$templateCache.put('app/pages/resumes/templates/resumes.html','<section id=\"resumes-listing-page\" ng-controller=\"ResumesCtrl\" xmlns=\"http://www.w3.org/1999/html\"><div class=\"row form-group\"><div class=\"col-sm-12\"><div class=\"clearfix\"><div class=\"pull-right\"><button class=\"btn btn-primary\" ng-click=\"addNewResumeModel()\"><i class=\"fa fa-plus\"></i> <span>Add</span></button></div></div></div></div><div ng-hide=\"checkUserRole()\"><input type=\"text\" class=\"form-control\" placeholder=\"resumeLookUp\" ng-model=\"resumeLookUp\" ng-required=\"false\"> <button type=\"button\" class=\"btn btn-primary btn-block\" ng-click=\"loadResume(resumeLookUp)\">Resume LookUp</button><br><br></div><div class=\"resumes-list-result\"><div class=\"row\"><div class=\"col-xs-12 col-md-6\" ng-repeat=\"aResume in user.myResumes track by aResume.id\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel\"><div class=\"resume-title\"><a ng-href=\"/job-resume-preview?previewToken={{ aResume.previewToken }}\" ng-bind=\"aResume.resumeName\" target=\"_blank\"></a></div><div class=\"detail-row\"><div class=\"row\"><div class=\"col-xs-12 col-md-6\"><div class=\"detail-info\"><div class=\"info-label\">{{ !!aResume.originalExpired ? \"Original expired at\" : \"Original expires at\" }}</div><div ng-class=\"[\\'info-val\\',(!!aResume.originalExpired ? \\'text-danger\\' : \\'\\')]\">{{ !!aResume.originalPreviewExpiresAt ? getFormattedDate(aResume.originalPreviewExpiresAt) : \"-\" }}</div></div></div><div class=\"col-xs-12 col-md-6\"><div class=\"detail-info\"><div class=\"info-label\">{{ !!aResume.maskedExpired ? \"Masked expired at\" : \"Masked expires at\" }}</div><div ng-class=\"[\\'info-val\\',(!!aResume.maskedExpired ? \\'text-danger\\' : \\'\\')]\">{{ !!aResume.previewExpiresAt ? getFormattedDate(aResume.previewExpiresAt) : \"-\" }}</div></div></div><div class=\"col-xs-12 col-md-6\"><div class=\"detail-info\"><div class=\"info-label\">Masked link</div><div class=\"info-val preview-link\"><a target=\"_blank\" ng-href=\"https://mycvtracker.com/resumes/{{ aResume.maskedLinkId }}\" ng-if=\"!!aResume.maskedLinkId\">{{ aResume.maskedLinkId }}</a> <span ng-if=\"!aResume.maskedLinkId\">n/a</span></div></div></div><div class=\"col-xs-12 col-md-6\"><div class=\"detail-info\"><div class=\"info-label\">Original link</div><div class=\"info-val preview-link\"><a target=\"_blank\" ng-href=\"https://mycvtracker.com/resumes/{{ aResume.originalLinkId }}\" ng-if=\"!!aResume.originalLinkId\">{{ aResume.originalLinkId }}</a> <span href=\"\" ng-if=\"!aResume.originalLinkId\">n/a</span></div></div></div><div class=\"col-xs-12 col-md-6\"><div class=\"detail-info\"><div class=\"info-label\">Uploaded at</div><div class=\"info-val\">{{ getFormattedPostDate(aResume.uploadedAt) }}</div></div></div></div></div><div class=\"menu-ctrl\"><div class=\"btn-group\"><button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-bars\"></i></button><div class=\"dropdown-menu dropdown-menu-right\"><a ng-click=\"openEditPreviewLink(aResume, \\'MASKED\\')\" class=\"dropdown-item\" href=\"#\">Edit masked link</a> <a ng-click=\"openEditPreviewLink(aResume, \\'ORIGINAL\\')\" class=\"dropdown-item\" href=\"#\">Edit original link</a> <a ng-click=\"downloadMyResume(aResume.id)\" class=\"dropdown-item\" href=\"#\">Download</a></div></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/resumes/templates/warning.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" ng-click=\"closeModal()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><h4 class=\"modal-title\"><span ng-bind=\"modelTitle\"></span></h4></div><div><input type=\"hidden\" ng-model=\"id\"> <input type=\"hidden\" ng-model=\"modelType\"><div class=\"modal-body\"><span ng-bind=\"modelMessage\"></span></div><div class=\"modal-footer clearfix\"><button type=\"button\" class=\"btn btn-primary\" ng-click=\"modelFunction()\">Yes</button> <button type=\"button\" class=\"btn btn-primary\" ng-click=\"closeModal()\">No</button></div></div>');\n$templateCache.put('app/pages/target-resume-detail/templates/index.html','<section id=\"referral\" ng-controller=\"TargetResumeDetailCtrl\"><div class=\"body-section list-resumes-section\"><div class=\"section-content\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel target-resume-panel\"><div class=\"job-detail\"><div class=\"title\"><h4 ng-bind=\"resumeData.job.referralTargetSubject\"></h4></div><div class=\"location text-primary mt-1\" ng-bind=\"resumeData.job.jobLocation\"></div></div><hr class=\"resumeSeprator\"><div class=\"flex-row\"><div class=\"flex-fill\"><h5 class=\"resume-title\" ng-bind=\"resumeData.detail.resumeTitle\"></h5><div class=\"tile-datetime\" ng-bind=\"formatDateTime(resumeData.detail.uploadedAt)\"></div></div><div><span class=\"badge badge-warning\" ng-if=\"resumeData.detail.resumeStatus === JOB_STATUS.APPLIED_JOB\">Job Applied</span> <span class=\"badge badge-warning\" ng-if=\"resumeData.detail.resumeStatus === JOB_STATUS.SELECTED_FOR_INTERVIEW\">Selected for interview</span> <span class=\"badge badge-danger\" ng-if=\"resumeData.detail.resumeStatus === JOB_STATUS.REJECTED_FOR_INTERVIEW\">Rejected for interview</span> <span class=\"badge badge-danger\" ng-if=\"resumeData.detail.resumeStatus === JOB_STATUS.REJECTED_FOR_JOB\">Rejected for job</span> <span class=\"badge badge-success\" ng-if=\"resumeData.detail.resumeStatus === JOB_STATUS.SELECTED_FOR_JOB\">Selected for job</span></div></div><div class=\"controls\"><a ng-click=\"downloadResume()\" href=\"#\" title=\"Download\"><i class=\"fa fa-download\"></i></a> <a ng-click=\"openPreviewResume()\" href=\"#\" title=\"Preview\"><i class=\"fas fa-search\"></i></a> <a ng-if=\"resumeData.detail.resumeStatus !== JOB_STATUS.REJECTED_FOR_INTERVIEW && resumeData.detail.resumeStatus !== JOB_STATUS.REJECTED_FOR_JOB && resumeData.detail.resumeStatus !== JOB_STATUS.SELECTED_FOR_JOB\" ng-click=\"openStatusModal()\" href=\"#\" title=\"Update Status\"><i class=\"fas fa-edit\"></i></a></div></div></div></div></section>');\n$templateCache.put('app/pages/target-resume-detail/templates/update-resume-interview.html','<div class=\"modal-header\"><h4 class=\"modal-title\">Interview status</h4></div><div class=\"modal-body\"><h5>Would you like to select the resume for interview?</h5><br><div class=\"form-group\"><div class=\"form-check\"><input ng-model=\"resumeData.updateSttInput\" class=\"form-check-input\" type=\"radio\" value=\"select\"> <label class=\"form-check-label\">Select</label></div><div class=\"form-check\"><input ng-model=\"resumeData.updateSttInput\" class=\"form-check-input\" type=\"radio\" value=\"reject\"> <label class=\"form-check-label\">Reject</label></div></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"resumeData.sharing\" ng-click=\"!resumeData.sharing && updateInterviewStt()\" type=\"button\" class=\"btn btn-primary\" ng-bind=\"resumeData.sharing ? \\'Updating...\\' : \\'Confirm\\'\"></button> <button type=\"button\" class=\"btn btn-secondary\" ng-click=\"!resumeData.sharing && closeModal()\">Cancel</button></div>');\n$templateCache.put('app/pages/target-resume-detail/templates/update-resume-job.html','<div class=\"modal-header\"><h4 class=\"modal-title\">Job status</h4></div><div class=\"modal-body\"><h5>Would you like to select the resume for job?</h5><br><div class=\"form-group\"><div class=\"form-check\"><input ng-model=\"resumeData.updateSttInput\" class=\"form-check-input\" type=\"radio\" value=\"select\"> <label class=\"form-check-label\">Select</label></div><div class=\"form-check\"><input ng-model=\"resumeData.updateSttInput\" class=\"form-check-input\" type=\"radio\" value=\"reject\"> <label class=\"form-check-label\">Reject</label></div></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"resumeData.sharing\" ng-click=\"!resumeData.sharing && updateJobStt()\" type=\"button\" class=\"btn btn-primary\" ng-bind=\"resumeData.sharing ? \\'Updating...\\' : \\'Confirm\\'\"></button> <button type=\"button\" class=\"btn btn-secondary\" ng-click=\"!resumeData.sharing && closeModal()\">Cancel</button></div>');\n$templateCache.put('app/pages/social-registrations/templates/index.html','<section id=\"referral\" ng-controller=\"SocialRegistrationCtrl\"><div class=\"body-section list-resumes-section\"><div class=\"section-content\"><div class=\"row\"><div class=\"col-xs-12\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text spec-detail-panel\"><h4>{{ referredResumes.detail.referralTargetSubject }}</h4><div class=\"target-email\">Social Share</div></div></div><div ng-repeat=\"aResume in referredResumes.list track by aResume.id\" class=\"col-xs-12 col-md-3\"><div ba-panel=\"\" ba-panel-class=\"xsmall-panel light-text resume-panel social-panel\"><div class=\"tile-title\"><h3 class=\"resume-title\" ng-bind=\"aResume.userEmail\"></h3><hr class=\"resumeSeprator\"><div class=\"tile-datetime\" ng-bind=\"formatDateTime(aResume.registeredAt)\"></div><div class=\"controls\"><span ng-if=\"aResume.sharedWith === SHARED_LEVEL.PARENT\" class=\"badge badge-info\">Shared</span> <span ng-if=\"aResume.sharedWith !== SHARED_LEVEL.PARENT\" class=\"badge badge-info\">Applied</span> <a ng-if=\"ableToShare(aResume.sharedWith)\" href=\"#\" ng-attr-title=\"Share With Parent\" ng-click=\"openShareModal(aResume)\"><i class=\"fas fa-external-link-square-alt\"></i></a></div></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/social-registrations/templates/share-registration-modal.html','<div class=\"modal-header\"><h4 class=\"modal-title\" ng-if=\"!referredResumes.sharingSuccess\">Share With Parent</h4><h4 class=\"modal-title\" ng-if=\"referredResumes.sharingSuccess\">Success</h4></div><div class=\"modal-body\"><h5 ng-if=\"!referredResumes.sharingSuccess\">Would you like to continue sharing this resumes to parent?</h5><h5 class=\"text-success\" ng-if=\"referredResumes.sharingSuccess\">Referred resume has been shared successfully!</h5></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"referredResumes.sharing\" ng-if=\"!referredResumes.sharingSuccess\" ng-click=\"!referredResumes.sharing && shareSocialRegistration()\" type=\"button\" class=\"btn btn-primary\" ng-bind=\"referredResumes.sharing ? \\'Sharing...\\' : \\'Share\\'\"></button> <button ng-if=\"!referredResumes.sharingSuccess\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"!referredResumes.sharing && closeModal()\">Cancel</button> <button ng-if=\"referredResumes.sharingSuccess\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Okay</button></div>');\n$templateCache.put('app/pages/trackResume/templates/trackResume.html','<section id=\"TrackResume\" ng-controller=\"TrackResumeCtrl\"><div class=\"container full\" data-ng-init=\"validateUserTick()\"><div class=\"row\"><div class=\"col-md-6\" ng-if=\"user.myFavNotes.length > 0\"><form class=\"form-horizontal\"><div class=\"form-group\"><label for=\"repeatSelect\" class=\"col-sm-2 control-label\">Select Fav Notes</label><div class=\"col-sm-10\"><select name=\"repeatSelect\" id=\"repeatSelect\" ng-model=\"myFavNote\" class=\"form-control\" ng-change=\"getMyFavNote(myFavNote)\" ng-options=\"myFavNote as myFavNote.notesType for myFavNote in user.myFavNotes\"></select></div></div></form></div><div class=\"row\"><div class=\"col-sm-12\"><div class=\"row\"><div class=\"col-sm-6 col-sm-offset-1\"><form name=\"trackResumeForm\"><p>This Form will send tracking email to your registered email account.You need to open and verify that email and it will trigger open event in your notification panel.You can forward that email to target Recruiter by removing first line and editing subject \"Fw:\" etc.</p><div class=\"form-group\"><div class=\"control-label bold\">Available Tick: <span ng-bind=\"userTick\"></span></div></div><div class=\"form-group\" style=\"background-color:black;color:white;padding:20px;\"><p>Fill this section if you wish to send your CV to single/multiple recepients. Target List - Put Each Target in New Line<br><br>John,john.hunter@jobs.com<br>Alice,alice@jobs4u.com</p><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : trackResumeObj.targetList.$invalid && !trackResumeObj.targetList.$pristine }\"><textarea class=\"form-control\" placeholder=\"Please note you can send up to 10 recepients at a single time.\" ng-model=\"trackResumeObj.targetList\" ng-required=\"false\" ngmaxlength=\"2500\"></textarea></div></div><br><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : trackResumeObj.subject.$invalid && !trackResumeObj.subject.$pristine }\"><div class=\"control-label\">Subject</div><input type=\"text\" class=\"form-control\" placeholder=\"Subject- Your email will use this subject\" ng-model=\"trackResumeObj.subject\" ng-required=\"true\"></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : trackResumeObj.content.$invalid && !trackResumeObj.content.$pristine }\"><div class=\"control-label\">Content</div><ng-ckeditor ng-model=\"trackResumeObj.content\" remove-buttons=\"Image\" remove-plugins=\"iframe,flash,smiley\"></ng-ckeditor></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : trackResumeObj.notes.$invalid && !trackResumeObj.notes.$pristine }\"><div class=\"control-label\">Notes</div><textarea class=\"form-control\" placeholder=\"Notes\" ng-model=\"trackResumeObj.notes\" ng-required=\"false\"></textarea></div><section id=\"resumes\" ng-controller=\"ResumesCtrl\"><div class=\"row form-group\"><div class=\"col-sm-12\"><div class=\"clearfix\"><div class=\"pull-right\"><button class=\"btn btn-primary\" ng-click=\"addNewResumeModelFromTrackResumeModel()\"><i class=\"fa fa-plus\"></i> <span>Upload Quick CV</span></button></div></div></div></div></section><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : trackResumeObj.resume.$invalid && !trackResumeObj.resume.$pristine }\"><div class=\"control-label\">Resume - Select One From the List</div><select class=\"form-control\" data-placeholder=\"Resume Title\" ng-model=\"trackResumeObj.resumeId\" ng-required=\"true\"><option ng-repeat=\"resume in user.myResumes | orderBy:\\'-uploadedAt\\'\" value=\"{{resume.id}}\">{{resume.resumeName}} {{resume.resumeTitle}} {{resume.resumeType}}</option></select></div><div class=\"form-group\" ng-class=\"{ \\'has-error\\' : currentNotesType.$invalid && !currentNotesType.$pristine }\"><div class=\"control-label\">Save as Favorite - PM Role, Dev Role etc</div><input type=\"text\" class=\"form-control\" placeholder=\"Save as Favorite - PM Role, Dev Role etc\" ng-model=\"currentNotesType\" ng-required=\"false\"></div><div class=\"form-group\" style=\"margin-top: 40px;\"><button type=\"button\" class=\"btn btn-primary btn-block\" ng-disabled=\"trackResumeForm.$invalid\" ng-click=\"postRequest(trackResumeForm, trackResumeObj)\">Proceed</button></div></form></div></div></div></div></div></div></section>');\n$templateCache.put('app/pages/user-management/templates/delete-user-confirm.html','<div class=\"modal-header\"><h4 class=\"modal-title\">Delete user</h4></div><div><div class=\"modal-body\"><div><br><div ng-if=\"!userManagement.inDeleting\">Would you like to continue deleting this user?</div><div ng-if=\"userManagement.inDeleting\">Deleting the user is in progress...</div><br></div></div><div class=\"modal-footer clearfix\"><button ng-disabled=\"userManagement.inDeleting\" type=\"button\" class=\"btn btn-danger\" ng-click=\"deleteUser()\">Continue</button> <button ng-disabled=\"userManagement.inDeleting\" type=\"button\" class=\"btn btn-secondary\" ng-click=\"closeModal()\">Close</button></div></div>');\n$templateCache.put('app/pages/user-management/templates/index.html','<section id=\"user-management\" ng-controller=\"UserManagementCtrl\"><div class=\"top-filter-section\"><div class=\"identify-filter\"><div class=\"filter-label\">Search for user</div><div class=\"filter-input\"><div class=\"form-group\"><input ng-model=\"userManagement.emailSearch\" ng-keypress=\"$event.keyCode === 13 && loadUsers()\" class=\"form-control\" type=\"text\" placeholder=\"Enter email to search\"></div></div></div></div><div class=\"user-list-result\"><div class=\"user-list\"><div class=\"user-row\" ng-repeat=\"aUser in userManagement.users track by aUser.id\"><div class=\"card\"><div class=\"card-body\"><div class=\"top-info\"><div class=\"left-identify\"><div class=\"avatar\"><img src=\"assets/img/app/profile/user.png\"></div><div class=\"info-row\"><div class=\"user-id\">#{{ aUser.id }}</div><div class=\"user-email\">{{ aUser.email }}</div></div></div><div class=\"right-controls\"><i style=\"cursor: pointer\" class=\"fa fa-times\" ng-click=\"openDeleteModal(aUser.id, $index)\"></i></div></div><hr class=\"separator\"><div class=\"main-info\"><div class=\"row\"><div class=\"col-xs-12 col-md-4\"><div class=\"info-col\"><div class=\"info-label\">Name</div><div class=\"info-text\">{{ aUser.firstName }} {{ aUser.lastName }}</div></div></div><div class=\"col-xs-12 col-md-3\"><div class=\"info-col\"><div class=\"info-label\">Referral Link</div><div class=\"info-text\"><span class=\"referral-link generate-link text-warning\"><a ng-href=\"{{ getReferralDirect(aUser.id, aUser.email) }}\">Links</a></span></div></div></div><div class=\"col-xs-12 col-md-3\"><div class=\"info-col\"><div class=\"info-label\">Created Date</div><div class=\"info-text\">-</div></div></div><div class=\"col-xs-12 col-md-2\"><div class=\"info-col\"><div class=\"info-label\">Role</div><div class=\"info-text\"><span ng-if=\"aUser.roleId === 1\">User</span> <span ng-if=\"aUser.roleId === 2\">Admin</span></div></div></div></div></div></div></div></div></div></div></section>');\n$templateCache.put('app/theme/components/backTop/backTop.html','<i class=\"fa fa-angle-up back-top\" id=\"backTop\" title=\"Back to Top\"></i>');\n$templateCache.put('app/theme/components/baSidebar/ba-sidebar.html','<aside class=\"al-sidebar\" ng-swipe-right=\"$baSidebarService.setMenuCollapsed(false)\" ng-swipe-left=\"$baSidebarService.setMenuCollapsed(true)\" ng-mouseleave=\"hoverElemTop=selectElemTop\"><ul class=\"al-sidebar-list\" slimscroll=\"{height: \\'{{menuHeight}}px\\'}\" slimscroll-watch=\"menuHeight\"><li ng-repeat=\"item in ::menuItems\" class=\"al-sidebar-list-item\" ng-class=\"::{\\'with-sub-menu\\': item.subMenu}\" ui-sref-active=\"selected\" ba-sidebar-toggling-item=\"item\"><a ng-mouseenter=\"hoverItem($event, item)\" ui-state=\"item.stateRef || \\'\\'\" ng-href=\"{{::(item.fixedHref ? item.fixedHref: \\'\\')}}\" ng-if=\"::!item.subMenu\" class=\"al-sidebar-list-link\"><i class=\"{{ ::item.icon }}\"></i><span>{{ ::item.title }}</span></a> <a ng-mouseenter=\"hoverItem($event, item)\" ng-if=\"::item.subMenu\" class=\"al-sidebar-list-link\" ba-ui-sref-toggler=\"\"><i class=\"{{ ::item.icon }}\"></i><span>{{ ::item.title }}</span> <b class=\"fa fa-angle-down\" ui-sref-active=\"fa-angle-up\" ng-if=\"::item.subMenu\"></b></a><ul ng-if=\"::item.subMenu\" class=\"al-sidebar-sublist\" ng-class=\"{\\'slide-right\\': item.slideRight}\" ba-ui-sref-toggling-submenu=\"\"><li ng-repeat=\"subitem in ::item.subMenu\" ng-class=\"::{\\'with-sub-menu\\': subitem.subMenu}\" ui-sref-active=\"selected\" ba-sidebar-toggling-item=\"subitem\" class=\"ba-sidebar-sublist-item\"><a ng-mouseenter=\"hoverItem($event, item)\" ng-if=\"::subitem.subMenu\" ba-ui-sref-toggler=\"\" class=\"al-sidebar-list-link subitem-submenu-link\"><span>{{ ::subitem.title }}</span> <b class=\"fa\" ng-class=\"{\\'fa-angle-up\\': subitem.expanded, \\'fa-angle-down\\': !subitem.expanded}\" ng-if=\"::subitem.subMenu\"></b></a><ul ng-if=\"::subitem.subMenu\" class=\"al-sidebar-sublist subitem-submenu-list\" ng-class=\"{expanded: subitem.expanded, \\'slide-right\\': subitem.slideRight}\" ba-ui-sref-toggling-submenu=\"\"><li ng-mouseenter=\"hoverItem($event, item)\" ng-repeat=\"subSubitem in ::subitem.subMenu\" ui-sref-active=\"selected\"><a ng-mouseenter=\"hoverItem($event, item)\" href=\"\" ng-if=\"::subSubitem.disabled\" class=\"al-sidebar-list-link\">{{ ::subSubitem.title }}</a> <a ng-mouseenter=\"hoverItem($event, item)\" ui-state=\"subSubitem.stateRef || \\'\\'\" ng-if=\"::!subSubitem.disabled\" ng-href=\"{{::(subSubitem.fixedHref ? subSubitem.fixedHref: \\'\\')}}\">{{::subSubitem.title }}</a></li></ul><a ng-mouseenter=\"hoverItem($event, item)\" href=\"\" ng-if=\"::(!subitem.subMenu && subitem.disabled)\" class=\"al-sidebar-list-link\">{{ ::subitem.title }}</a> <a ng-mouseenter=\"hoverItem($event, item)\" target=\"{{::(subitem.blank ? \\'_blank\\' : \\'_self\\')}}\" ng-if=\"::(!subitem.subMenu && !subitem.disabled)\" ui-state=\"subitem.stateRef || \\'\\'\" ng-href=\"{{::(subitem.fixedHref ? subitem.fixedHref: \\'\\')}}\">{{ ::subitem.title}}</a></li></ul></li></ul><div class=\"sidebar-hover-elem\" ng-style=\"{top: hoverElemTop + \\'px\\', height: hoverElemHeight + \\'px\\'}\" ng-class=\"{\\'show-hover-elem\\': showHoverElem }\"></div></aside>');\n$templateCache.put('app/theme/components/baWizard/baWizard.html','<div class=\"ba-wizard\"><div class=\"ba-wizard-navigation-container\"><div ng-repeat=\"t in $baWizardController.tabs\" class=\"ba-wizard-navigation {{$baWizardController.tabNum == $index ? \\'active\\' : \\'\\'}}\" ng-click=\"$baWizardController.selectTab($index)\">{{t.title}}</div></div><div class=\"progress ba-wizard-progress\"><div class=\"progress-bar progress-bar-danger active\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" ng-style=\"{width: $baWizardController.progress + \\'%\\'}\"></div></div><div class=\"steps\" ng-transclude=\"\"></div><nav><ul class=\"pager ba-wizard-pager\"><li class=\"previous\"><button ng-disabled=\"$baWizardController.isFirstTab()\" ng-click=\"$baWizardController.previousTab()\" type=\"button\" class=\"btn btn-primary\"><span aria-hidden=\"true\">&larr;</span> previous</button></li><li class=\"next\"><button ng-disabled=\"$baWizardController.isLastTab()\" ng-click=\"$baWizardController.nextTab()\" type=\"button\" class=\"btn btn-primary\">next <span aria-hidden=\"true\">&rarr;</span></button></li></ul></nav></div>');\n$templateCache.put('app/theme/components/baWizard/baWizardStep.html','<section ng-show=\"selected\" class=\"step\" ng-transclude=\"\"></section>');\n$templateCache.put('app/theme/components/contentTop/contentTop.html','<div class=\"content-top clearfix\"><h1 class=\"al-title\">{{ activePageTitle }}</h1><ul class=\"breadcrumb al-breadcrumb\"><li><a href=\"account\">Home</a></li><li>{{ activePageTitle }}</li></ul></div>');\n$templateCache.put('app/theme/components/msgCenter/msgCenter.html','<ul class=\"al-msg-center clearfix\"><li uib-dropdown=\"\"><a href=\"\" uib-dropdown-toggle=\"\"><i class=\"fa fa-bell-o\"></i><span>5</span><div class=\"notification-ring\"></div></a><div uib-dropdown-menu=\"\" class=\"top-dropdown-menu\"><i class=\"dropdown-arr\"></i><div class=\"header clearfix\"><strong>Notifications</strong> <a href=\"\">Mark All as Read</a> <a href=\"\">Settings</a></div><div class=\"msg-list\"><a href=\"\" class=\"clearfix\" ng-repeat=\"msg in notifications\"><div class=\"img-area\"><img ng-class=\"{\\'photo-msg-item\\' : !msg.image}\" ng-src=\"{{::( msg.image || (users[msg.userId].name | profilePicture) )}}\"></div><div class=\"msg-area\"><div ng-bind-html=\"getMessage(msg)\"></div><span>{{ msg.time }}</span></div></a></div><a href=\"\">See all notifications</a></div></li><li uib-dropdown=\"\"><a href=\"\" class=\"msg\" uib-dropdown-toggle=\"\"><i class=\"fa fa-envelope-o\"></i><span>5</span><div class=\"notification-ring\"></div></a><div uib-dropdown-menu=\"\" class=\"top-dropdown-menu\"><i class=\"dropdown-arr\"></i><div class=\"header clearfix\"><strong>Messages</strong> <a href=\"\">Mark All as Read</a> <a href=\"\">Settings</a></div><div class=\"msg-list\"><a href=\"\" class=\"clearfix\" ng-repeat=\"msg in messages\"><div class=\"img-area\"><img class=\"photo-msg-item\" ng-src=\"{{::( users[msg.userId].name | profilePicture )}}\"></div><div class=\"msg-area\"><div>{{ msg.text }}</div><span>{{ msg.time }}</span></div></a></div><a href=\"\">See all messages</a></div></li></ul>');\n$templateCache.put('app/theme/components/pageTop/pageTop.html','<div class=\"page-top clearfix\" scroll-position=\"scrolled\" max-height=\"50\" ng-class=\"{\\'scrolled\\': scrolled}\"><header><div class=\"container\"><div class=\"row\"><div class=\"col-lg-6 col-md-6 col-12\"><div class=\"logo col-lg-3 col-md-3 col-6\"><a ng-href=\"/\"><img src=\"assets/img/front/logo.png\" alt=\"\"></a></div></div><div class=\"col-lg-6 col-md-6 col-12 m-align\" ng-if=\"!$isAuthenticated\"><ul class=\"upper-nav social-list\"><li><a href=\"\"><span><i class=\"fab fa-facebook-f\"></i></span></a></li><li><a href=\"\"><span><i class=\"fab fa-twitter\"></i></span></a></li><li><a href=\"\"><span><i class=\"fab fa-instagram\"></i></span></a></li><li ng-if=\"!$isAuthenticated && !headerLoginRedirect\"><a href=\"/login\">Login</a></li><li ng-if=\"!$isAuthenticated && !!headerLoginRedirect\"><a ng-href=\"/login?redirect={{ headerLoginRedirect }}\">Login</a></li><li ng-if=\"!$isAuthenticated\" class=\"signupButton\"><a href=\"/register\"><span class=\"btn-style\">Sign Up</span></a></li></ul></div><div class=\"col-lg-6 col-md-6 col-12 m-align\" ng-if=\"$isAuthenticated\"><div class=\"col-lg-10 col-md-10 col-20 m-align\"><ul class=\"upper-nav social-list\"><li><a href=\"\"><span><i class=\"fab fa-facebook-f\"></i></span></a></li><li><a href=\"\"><span><i class=\"fab fa-twitter\"></i></span></a></li><li><a href=\"\"><span><i class=\"fab fa-instagram\"></i></span></a></li></ul></div><div class=\"col-lg-2 col-md-2 col-4 m-align\" ng-if=\"$isAuthenticated\" ng-controller=\"AuthCtrl\"><div class=\"al-user-profile\" uib-dropdown=\"\"><a uib-dropdown-toggle=\"\" class=\"profile-toggle-link\"><img ng-src=\"{{::( \\'user\\' | profilePicture )}}\" ng-style=\"{\\'width\\' : \\'60px\\'}\"></a><ul class=\"top-dropdown-menu profile-dropdown\" uib-dropdown-menu=\"\"><li><i class=\"dropdown-arr\"></i></li><li><a ng-href=\"settings\"><i class=\"fa fa-cog\"></i>Settings</a></li><li><a href=\"\" ng-click=\"logout()\" target=\"_self\" class=\"signout\"><i class=\"fa fa-power-off\"></i>Sign out</a></li></ul></div></div><div ng-if=\"$isAuthenticated\" ng-controller=\"AccountCtrl\"><h5 class=\"text-right user-email\"><strong ng-bind=\"user.email\">!</strong></h5></div></div></div></div></header></div>');\n$templateCache.put('app/theme/components/progressBarRound/progressBarRound.html','<svg class=\"center-block progress-bar-round\" width=\"200\" height=\"200\"><circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" stroke=\"#F8F8FF\" stroke-width=\"8\"></circle><circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" id=\"loader\" class=\"\" stroke=\"#209e91\" stroke-width=\"8\" stroke-dasharray=\"0,20000\" transform=\"rotate(-90,100,100)\" stroke-linecap=\"round\"></circle><text text-anchor=\"middle\" class=\"loading\" x=\"100\" y=\"90\">Loading...</text><text class=\"percentage\" text-anchor=\"middle\" x=\"100\" y=\"130\">{{progress}}%</text></svg>');\n$templateCache.put('app/theme/components/widgets/widgets.html','<div class=\"widgets\"><div ng-repeat=\"widgetBlock in ngModel\" ng-class=\"{\\'row\\': widgetBlock.widgets.length > 1}\"><div ng-repeat=\"widgetCol in widgetBlock.widgets\" ng-class=\"{\\'col-md-6\\': widgetBlock.widgets.length === 2}\" ng-model=\"widgetCol\" class=\"widgets-block\"><div ba-panel=\"\" ba-panel-title=\"{{::widget.title}}\" ng-repeat=\"widget in widgetCol\" ba-panel-class=\"with-scroll {{widget.panelClass}}\"><div ng-include=\"widget.url\"></div></div></div></div></div>');\n$templateCache.put('app/theme/inputs/baSwitcher/baSwitcher.html','<label class=\"switcher-container\"><input type=\"checkbox\" ng-model=\"switcherValue\"><div class=\"switcher\" ng-class=\"::switcherStyle\"><div class=\"handle-container\"><span class=\"handle handle-on\">ON</span> <span class=\"handle\"></span> <span class=\"handle handle-off\">OFF</span></div></div></label>');}]);"],"sourceRoot":"/source/"}